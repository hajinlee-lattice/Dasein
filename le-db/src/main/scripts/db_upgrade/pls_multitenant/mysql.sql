USE `PLS_MultiTenant`;

CREATE PROCEDURE `UpdatePLSTables`()
  BEGIN
    ALTER TABLE `PLS_MultiTenant`.`PLAY_LAUNCH` ADD COLUMN `ACCOUNTS_DUPLICATED` BIGINT;
    ALTER TABLE `PLS_MultiTenant`.`PLAY_LAUNCH` ADD COLUMN `CONTACTS_DUPLICATED` BIGINT;

    ALTER TABLE `PLS_MultiTenant`.`DATA_INTEG_STATUS_MONITORING` ADD COLUMN `ERROR_MESSAGE` VARCHAR(1024);
    ALTER TABLE `PLS_MultiTenant`.`TENANT`
    ADD COLUMN `NOTIFICATION_LEVEL` VARCHAR(20) NULL DEFAULT 'ERROR' AFTER `EXPIRED_TIME`;

    ALTER TABLE `PLS_MultiTenant`.`PLAY_LAUNCH` ADD COLUMN `CONTACTS_SELECTED` BIGINT;
    ALTER TABLE `PLS_MultiTenant`.`PLAY_LAUNCH` ADD COLUMN `CONTACTS_SUPPRESSED` BIGINT;

    ALTER TABLE `PLS_MultiTenant`.`ATLAS_S3_IMPORT_SYSTEM`
      ADD COLUMN `ACCOUNT_SYSTEM_ID` VARCHAR(255);

    ALTER TABLE `PLS_MultiTenant`.`ATLAS_S3_IMPORT_SYSTEM`
      ADD COLUMN `CONTACT_SYSTEM_ID` VARCHAR(255);

    ALTER TABLE `PLS_MultiTenant`.`ATLAS_S3_IMPORT_SYSTEM`
      ADD COLUMN `DISPLAY_NAME` VARCHAR(255);

    ALTER TABLE `PLS_MultiTenant`.`ATLAS_S3_IMPORT_SYSTEM`
      ADD COLUMN `MAP_TO_LATTICE_ACCOUNT` BIT;

    ALTER TABLE `PLS_MultiTenant`.`ATLAS_S3_IMPORT_SYSTEM`
      ADD COLUMN `MAP_TO_LATTICE_CONTACT` BIT;

    ALTER TABLE `PLS_MultiTenant`.`ATLAS_S3_IMPORT_SYSTEM`
      ADD COLUMN `PRIORITY` INTEGER NOT NULL;

    ALTER TABLE `PLS_MultiTenant`.`DATAFEED_EXECUTION`
      ADD COLUMN `RETRY_COUNT` INT(10) NULL DEFAULT 0 AFTER `FK_FEED_ID`;

    ALTER TABLE `PLAY_LAUNCH` ADD CONSTRAINT `FK_PLAYLAUNCH_FKPLAYLAUNCHCHANNELID_PLAYLAUNCHCHANNEL`
   	  FOREIGN KEY (`FK_PLAY_LAUNCH_CHANNEL_ID`) REFERENCES `PLAY_LAUNCH_CHANNEL` (`PID`) ON DELETE CASCADE;

    ALTER TABLE `PLAY_LAUNCH_CHANNEL` DROP FOREIGN KEY `FK_PLAYLAUNCHCHANNEL_FKPLAYLAUNCHID_PLAYLAUNCH`;

  END;
//
DELIMITER;

CALL `UpdatePLSTables`();
