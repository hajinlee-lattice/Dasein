USE `PLS_MultiTenant`;

CREATE PROCEDURE `CreateDCPProjectTable`()
  BEGIN
    CREATE TABLE `DCP_PROJECT`
      (
         `PID`                  BIGINT NOT NULL auto_increment,
         `CREATED`              DATETIME NOT NULL,
         `CREATED_BY`           VARCHAR(255) NOT NULL,
         `DELETED`              BIT,
         `PROJECT_DESCRIPTION`  VARCHAR(4000),
         `PROJECT_DISPLAY_NAME` VARCHAR(255),
         `PROJECT_ID`           VARCHAR(255) NOT NULL,
         `PROJECT_TYPE`         VARCHAR(255),
         `ROOT_PATH`            VARCHAR(255),
         `UPDATED`              DATETIME NOT NULL,
         `FK_IMPORT_SYSTEM_ID`  BIGINT NOT NULL,
         `FK_TENANT_ID`         BIGINT NOT NULL,
         PRIMARY KEY (`PID`)
      )
    engine=InnoDB;

    CREATE INDEX IX_PROJECT_ID ON `DCP_PROJECT` (`PROJECT_ID`);

    ALTER TABLE `DCP_PROJECT`
      ADD CONSTRAINT UX_PROJECT_ID UNIQUE (`FK_TENANT_ID`, `PROJECT_ID`);

    ALTER TABLE `DCP_PROJECT`
      ADD CONSTRAINT `FK_DCPPROJECT_FKIMPORTSYSTEMID_ATLASS3IMPORTSYSTEM` FOREIGN KEY (`FK_IMPORT_SYSTEM_ID`)
      REFERENCES `ATLAS_S3_IMPORT_SYSTEM` (`PID`) ON DELETE CASCADE;

    ALTER TABLE `DCP_PROJECT`
      ADD CONSTRAINT `FK_DCPPROJECT_FKTENANTID_TENANT` FOREIGN KEY (`FK_TENANT_ID`)
      REFERENCES `TENANT` (`TENANT_PID`) ON DELETE CASCADE;

      ALTER TABLE `DATAFEED_TASK`
        ADD COLUMN `FK_IMPORT_SYSTEM` BIGINT,
        ADD COLUMN `SOURCE_DISPLAY_NAME` VARCHAR(255),
        ADD COLUMN `SOURCE_ID` VARCHAR(255),
        ADD COLUMN `TASK_UNIQUE_NAME` VARCHAR(255),
        ADD COLUMN `DELETED` BIT,
        ADD COLUMN `RELATIVE_PATH` VARCHAR(255);

      CREATE INDEX IX_UNIQUE_NAME ON `DATAFEED_TASK` (`TASK_UNIQUE_NAME`, `FK_FEED_ID`);

      CREATE INDEX IX_SOURCE_ID ON `DATAFEED_TASK` (`SOURCE_ID`, `FK_FEED_ID`);

      ALTER TABLE `DATAFEED_TASK`
        ADD CONSTRAINT `UKjpqt5agv8yeyssb3wwye9vywf` UNIQUE (`FK_FEED_ID`, `TASK_UNIQUE_NAME`);

      ALTER TABLE `DATAFEED_TASK`
        ADD CONSTRAINT `UKg8m6wg7f2845hayf19bvcexmx` UNIQUE (`FK_FEED_ID`, `SOURCE_ID`);
  END;

CREATE PROCEDURE `UpdatePLSTables`()
  BEGIN
    ALTER TABLE `PLS_MultiTenant`.`DANTE_PUBLISHEDTALKINGPOINT`
        ADD COLUMN `PLAY_ID` BIGINT NOT NULL,
        ADD CONSTRAINT `FK_DANTEPUBLISHEDTALKINGPOINT_PLAYID_PLAY` FOREIGN KEY (`PLAY_ID`) REFERENCES `PLAY` (`PID`) ON DELETE CASCADE;

    UPDATE `PLS_MultiTenant`.`DANTE_PUBLISHEDTALKINGPOINT` T1
        INNER JOIN `PLS_MultiTenant`.`PLAY` T2 ON T1.PLAY_NAME = T2.NAME
        SET T1.`PLAY_ID` = T2.`PID`;

    ALTER TABLE `PLAY_LAUNCH`
        ADD COLUMN `LAUNCH_TYPE` VARCHAR(255) NOT NULL DEFAULT 'FULL',
        ADD COLUMN `DESTINATION_SYS_NAME` VARCHAR(255) AFTER `DESTINATION_SYS_TYPE`;

    UPDATE PLAY_LAUNCH pl
    	LEFT JOIN PLAY_LAUNCH_CHANNEL c ON c.PID = pl.FK_PLAY_LAUNCH_CHANNEL_ID
        LEFT JOIN LOOKUP_ID_MAP l ON l.PID = c.FK_LOOKUP_ID_MAP_ID
    SET pl.DESTINATION_SYS_NAME = l.EXT_SYS_NAME;

    ALTER TABLE `PLS_MultiTenant`.`METADATA_SEGMENT` ADD COLUMN `COUNTS_OUTDATED` BIT NULL DEFAULT 0;

    ALTER TABLE `PLS_MultiTenant`.`ACTIVITY_METRIC_GROUP`
        ADD COLUMN `SEC_SUBCATEGORY_TMPL` BIGINT(20) NULL DEFAULT NULL,
        ADD CONSTRAINT `ACTIVITY_METRICS_GROUP_SEC_SUBCATEGORY_TMPL`
                  FOREIGN KEY (`SEC_SUBCATEGORY_TMPL`)
                  REFERENCES `PLS_MultiTenant`.`STRING_TEMPLATE` (`PID`)
                  ON DELETE NO ACTION
                  ON UPDATE NO ACTION;


  END;

DELIMITER;
