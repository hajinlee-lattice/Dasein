IDE:
1. install an eclipse, I'm using the Kepler version now.
2. install the pydev plugin to the eclipse.

Python:

Make sure your Python Installation is in the PATH environmental variable (Go to Control Panel\All Control Panel Items\System -> Environment Variables)
Install "easy_install package" (Download this file: https://bootstrap.pypa.io/ez_setup.py and run it, more detailed is here)
Make sure "easy_install" is in your $PATH (;C:\Python27\Scripts)
Install PIP: easy_install pip
Execute:  pip install Flask
Download ServiceRunner.py from https://10.41.1.30/svn/lattice/LEDP/branches/develop/ledp/le-tools/ServiceRunner/ into the folder you intend your Server to run from (ex. C:\DevTest).
For TestRunner:
Execute: pip install requests
Execute (for SOAP support):  easy_install suds
Execute (for ODBC support):  pip install pypyodbc
Execute (for webdriver support): pip install selenium
Execute (for nose support): pip install nose


environment:

if you are the first time run the automation on your machine, you should checkout the template, and update the property of svn_location_local in properties.py. 

Each of time, when plan to run a new round integration test, you should be able to get the environments details from http://lejenkins.lattice.local/
before run your integration test, 

update the related properties:
	pls_server="BODCDEVVINT57.dev.lattice.local";    
    pls_server_folder="D:\\B\\spda0__DE-DT-BD_SQ-d__6_9_2_64296nZ_2_6_2_63627n_1_3_4";
    pls_bard_1="BD_ADEDTBDd69264296nZ26263627n1";
    pls_bard_2="BD2_ADEDTBDd69264296nZ26263627n12";
	
Other properties needn't be updated normally. unless the release scripts updated, and the files structure has been updated.



Reminder, if you are using the server for the first time to do the integration test, you should add a new queue in JAMS server.
the queue name should be the server name such as pls_server="BODCDEVVINT57.dev.lattice.local", the queue name is "BODCDEVVINT57".



After this you can first startup the service on target server about serivceRunner.
run your test cases on your client machine:

this case is used to run E2E process for Eloqua: nosetests -s path\TestEndToEndPLS.py:TestEndToEndPLS.TestEndToEndELQ
this case is used to run E2E process for Marketo: nosetests -s path\TestEndToEndPLS.py:TestEndToEndPLS.TestEndToEndMKTO
