<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <import resource="classpath:proxy-context.xml"/>
    <import resource="classpath:db-context.xml"/>
    <import resource="classpath:common-properties-context.xml"/>
    <import resource="classpath:pls-yarn-config-context.xml"/>
    <import resource="classpath:pls-camille-context.xml"/>
    <import resource="classpath:security-provider-context.xml"/>
    <import resource="classpath:monitor-email-settings-context.xml"/>
    <import resource="classpath:monitor-alerts-context.xml"/>
    <import resource="classpath:common-component-context.xml"/>
    <import resource="classpath:remote-context.xml"/>
    <import resource="classpath:liaison-context.xml"/>
    <import resource="classpath:workflow-context.xml"/>

    <context:component-scan base-package="com.latticeengines.pls">
        <context:exclude-filter type="assignable" expression="com.latticeengines.pls.swagger.SwaggerConfig"/>
    </context:component-scan>

    <mvc:annotation-driven/>
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />

    <security:http use-expressions="true"
                   pattern="/pls/modelsummaries/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/targetmarkets/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/quotas/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/prospectdiscoveryconfigs/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/jobs/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/datafiles/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/credentials/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>
    <security:http use-expressions="true"
                   pattern="/pls/config/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/segments/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/vdbmetadata/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/tenantdeployments/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/leadenrichment/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/enrichment/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/fileuploads/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/metadatauploads/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/oauth2/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/sureshot/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/reports/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/amattributes/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/models/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/scores/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/bisaccesstoken/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/pls/marketo/credentials/**"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:http use-expressions="true"
                   pattern="/lp2/assets/resources/en-US/ResourceStrings.txt"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restAuthenticationEntryPoint"
                   create-session="stateless">
        <security:custom-filter ref="restServicesFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

</beans>
