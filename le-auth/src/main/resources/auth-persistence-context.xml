<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
      http://www.springframework.org/schema/data/jpa 
      http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <bean id="dataSourceGlobalAuth" class="com.latticeengines.common.exposed.bean.DataSourceBeanFactory" depends-on="beanEnvironment">
        <property name="jndiName" value="java:comp/env/jdbc/GlobalAuthentication"/>
        <!-- when jndi is not available -->
        <property name="driverClass" value="${auth.globalauth.datasource.driver}" />
        <property name="jdbcUrl" value="${auth.globalauth.datasource.url}" />
        <property name="user" value="${auth.globalauth.datasource.user}" />
        <property name="password" value="${auth.globalauth.datasource.password.encrypted}" />
        <property name="writerConnection" value="true"/>
        <property name="maxPoolSize" value="${auth.globalauth.datasource.poolsize.max}"/>
        <property name="maxPoolSizeForWebApp" value="${auth.globalauth.datasource.poolsize.max.webapp}"/>
        <property name="maxPoolSizeForAppMaster" value="${auth.globalauth.datasource.poolsize.max.appmaster}"/>
    </bean>

    <!-- Hibernate session factory 
    <bean id="sessionFactoryGlobalAuth" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceGlobalAuth" />
        <property name="packagesToScan" value="com.latticeengines.domain.exposed.auth, com.latticeengines.domain.exposed" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${auth.globalauth.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.globally_quoted_identifiers">true</prop>
            </props>
        </property>
    </bean>
    -->
    
    <!-- Hibernate session factory -->
       <bean id="sessionFactoryGlobalAuth" class="org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean">
        <property name="entityManagerFactory" ref="entityManagerFactoryGlobalAuth" />
    </bean>

    <!-- Entity manager factory -->
    <bean id="entityManagerFactoryGlobalAuth" 
            class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSourceGlobalAuth" />
        <property name="packagesToScan" value="com.latticeengines.domain.exposed.auth, com.latticeengines.domain.exposed" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- property name="prepareConnection" value="false"/-->
            </bean>
        </property>
        <property name="jpaProperties">
          <props>
            <prop key="hibernate.dialect">${auth.globalauth.hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">false</prop>
            <prop key="hibernate.globally_quoted_identifiers">true</prop>
            <prop key="hibernate.id.new_generator_mappings">true</prop>
            <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
            <prop key="hibernate.allow_refresh_detached_entity">true</prop>
            <!-- prop key="hibernate.connection.release_mode">on_close</prop-->
            <!-- prop key="hibernate.connection.handling_mode">DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION</prop-->
          </props>
      </property>
	</bean>
	
    <bean id="transactionManagerGlobalAuth" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactoryGlobalAuth">
        <qualifier value="globalAuth" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManagerGlobalAuth" />
    
    	<jpa:repositories base-package="com.latticeengines.auth.exposed.repository" base-class="com.latticeengines.db.exposed.repository.impl.BaseJpaRepositoryImpl"
        entity-manager-factory-ref="entityManagerFactoryGlobalAuth" transaction-manager-ref="transactionManagerGlobalAuth"  />

    <!--  DAOs for GlobalAuth database  -->
    <bean id="globalAuthUserTenantRightDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthUserTenantRightDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

    <bean id="globalAuthUserDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthUserDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

    <bean id="globalAuthTicketDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthTicketDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

    <bean id="globalAuthTenantDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthTenantDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

    <bean id="globalAuthSessionDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthSessionDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

    <bean id="globalAuthAuthenticationDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthAuthenticationDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

    <bean id="globalAuthTeamDao" class="com.latticeengines.auth.exposed.dao.impl.GlobalAuthTeamDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryGlobalAuth" />
    </bean>

</beans>
