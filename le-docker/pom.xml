<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>le-docker</artifactId>
    <packaging>jar</packaging>
    <name>le-${component-name}</name>

    <properties>
        <component-name>docker</component-name>
        <kafka.connect.docker.context>src/main/scripts/kafka/le-kafka-connect</kafka.connect.docker.context>
        <tomcat.docker.context>src/main/scripts/tomcat/le-tomcatbase</tomcat.docker.context>
        <config.docker.context>src/main/scripts/tomcat/le-config</config.docker.context>
        <matchapi.docker.context>src/main/scripts/tomcat/le-matchapi</matchapi.docker.context>
        <oauth2.docker.context>src/main/scripts/tomcat/le-oauth2</oauth2.docker.context>
        <playmaker.docker.context>src/main/scripts/tomcat/le-playmaker</playmaker.docker.context>
        <scoringapi.docker.context>src/main/scripts/tomcat/le-scoringapi</scoringapi.docker.context>
        <express.docker.context>src/main/scripts/nodejs/le-express</express.docker.context>
        <microservice.docker.context>src/main/scripts/tomcat/le-microservice</microservice.docker.context>
        <admin.docker.context>src/main/scripts/tomcat/le-admin</admin.docker.context>
        <pls.docker.context>src/main/scripts/tomcat/le-pls</pls.docker.context>
    </properties>

    <parent>
        <groupId>com.latticeengines</groupId>
        <artifactId>le-parent</artifactId>
        <version>3.6.0-SNAPSHOT</version>
        <relativePath>../le-parent</relativePath>
    </parent>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-lattice-artifacts</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy file="${project.basedir}/../le-config/conf/env/devcluster/latticeengines.properties"
                                      tofile="${project.basedir}/${tomcat.docker.context}/conf/env/devcluster/latticeengines.properties"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-config/conf/env/qacluster/latticeengines.properties"
                                      tofile="${project.basedir}/${tomcat.docker.context}/conf/env/qacluster/latticeengines.properties"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-config/conf/env/prodcluster/latticeengines.properties"
                                      tofile="${project.basedir}/${tomcat.docker.context}/conf/env/prodcluster/latticeengines.properties"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-config/conf/env/devcluster/latticeengines.properties"
                                      tofile="${project.basedir}/${config.docker.context}/conf/env/devcluster/latticeengines.properties"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-config/conf/env/qacluster/latticeengines.properties"
                                      tofile="${project.basedir}/${config.docker.context}/conf/env/qacluster/latticeengines.properties"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-config/conf/env/prodcluster/latticeengines.properties"
                                      tofile="${project.basedir}/${config.docker.context}/conf/env/prodcluster/latticeengines.properties"
                                      overwrite="true" />

                                <!-- special wars -->
                                <copy file="${project.basedir}/../le-oauth2/target/le-oauth2-${project.version}.war"
                                      tofile="${project.basedir}/${oauth2.docker.context}/webapps/ROOT.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-playmaker/target/le-playmaker-${project.version}.war"
                                      tofile="${project.basedir}/${playmaker.docker.context}/webapps/ROOT.war"
                                      overwrite="true" />

                                <!-- microservices -->
                                <copy file="${project.basedir}/../le-api/target/le-api-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/api.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-matchapi/target/le-matchapi-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/matchapi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-scoringapi/target/le-scoringapi-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/scoringapi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-ulysses/target/le-ulysses-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/ulysses.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-pls/target/le-pls-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/pls.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-admin/target/le-admin-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/admin.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/eai/target/le-eai-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/eai.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/metadata/target/le-metadata-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/metadata.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/modeling/target/le-modeling-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/modeling.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/scoring/target/le-scoring-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/scoring.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/dataflowapi/target/le-dataflowapi-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/dataflowapi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/workflowapi/target/le-workflowapi-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/workflowapi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/objectapi/target/le-objectapi-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/objectapi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/quartz/target/le-quartz-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/quartz.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/modelquality/target/le-modelquality-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/modelquality.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/datacloudapi/target/le-datacloudapi-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/datacloudapi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/propdata/target/le-propdata-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/propdata.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/dellebi/target/le-dellebi-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/dellebi.war"
                                      overwrite="true" />
                                <copy file="${project.basedir}/../le-microservice/dante/target/le-dante-microservice-${project.version}.war"
                                      tofile="${project.basedir}/${microservice.docker.context}/webapps/dante.war"
                                      overwrite="true" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.exec.version}</version>
                <executions>
                    <execution>
                        <id>build-docker-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <workingDirectory>src/main/scripts</workingDirectory>
                            <arguments>
                                <argument>mvn_build.sh</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
