alias cplfresh='rm -Rf $HOME/.m2/repository/com/latticeengines && mvn -DskipTests clean install'
alias leversion='cat $WSHOME/le-parent/pom.xml | grep \<version\> | head -n 1 | cut -d \< -f 2 | cut -d \> -f 2'

alias hdp-start='bash $WSHOME/le-dev/scripts/start-cluster.sh'
alias hdp-stop='bash $WSHOME/le-dev/scripts/stop-cluster.sh'

alias createpod='cd $WSHOME/le-baton && mvn -f pom-batontool.xml -DskipTests clean install && java -jar target/le-baton-tool-*-shaded.jar --podId Default --connectionString localhost:2181 createPod'

alias clearlogs='for i in `find /var/log/ledp -name "le-*.log" -type f`; do echo $i; > $i; done'

alias dfdplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh dataflow'
alias dfdpl='dirs -c && pushd $WSHOME/le-dataflow && mvn -Pshaded-yarn -DskipTests clean install && dfdplnobld && popd'

alias dfapidplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh dataflowapi'
alias dfapidpl='mvn -Pshaded-yarn -DskipTests clean install && dfapidplnobld'

alias wfapidplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh workflowapi'
alias wfapidpl='dirs -c && pushd $WSHOME/le-workflowapi && mvn -Pshaded-yarn -DskipTests clean install && wfapidplnobld && popd'

alias scoringdplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh scoring && hdfs dfs -mkdir -p /app/${LE_STACK}/$(leversion)/scoring/scripts && hdfs dfs -copyFromLocal $WSHOME/le-scoring/src/main/python/scoring.py /app/${LE_STACK}/$(leversion)/scoring/scripts'
alias scoringdpl='mvn -Pshaded-yarn -DskipTests clean install && scoringdplnobld'

alias dcbld='dirs -c && pushd $WSHOME/le-datacloud && mvn -T4 -DskipTests clean install && popd'
alias dcdplnobld='hdfs dfs -mkdir -p /app/${LE_STACK}/$(leversion)/datacloud/lib && hdfs dfs -put -f $WSHOME/le-datacloud/yarn/target/le-datacloud*shaded.jar /app/${LE_STACK}/$(leversion)/datacloud/lib && hdfs dfs -rm -r -f /app/${LE_STACK}/$(leversion)/datacloud/templates && hdfs dfs -copyFromLocal $WSHOME/le-datacloud/etl/templates /app/${LE_STACK}/$(leversion)/datacloud'
alias dcdpl='dcbld && dirs -c && pushd $WSHOME/le-datacloud/yarn && mvn -Pshaded-yarn -DskipTests clean install && popd && dcdplnobld'

alias dpdplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh dataplatform && pushd $WSHOME/le-dataplatform && bash $WSHOME/le-dataplatform/bin/deployPythonHDFS.sh && popd'
alias dpdpl='mvn -Pshaded-yarn -DskipTests clean install && dpdplnobld'

alias dedplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh dellebi'
alias dedpl='mvn -Pshaded-yarn -DskipTests clean install && dedplnobld'

alias sqdplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh sqoop'
alias sqdpl='mvn -Pshaded-yarn -DskipTests clean install && sqdplnobld'

alias eaidplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh eai'
alias eaidpl='mvn -Pshaded-yarn -DexcludeArtifactIds=jetty-servlets,jetty-continuation -DskipTests clean install && eaidplnobld'

alias spkdplnobld='bash $WSHOME/le-dev/scripts/libdpl.sh spark'
alias spkdpl='mvn -Pshaded-yarn -DskipTests clean install && spkdplnobld'

alias msbld='dirs -c && pushd $WSHOME/le-microservice && mvn -T8 -DskipTests clean package && popd'
alias rbldcdl='pushd $WSHOME/le-serviceapps/cdl &&mvn -DskipTests clean install && popd && msbld &&cp $WSHOME/le-microservice/cdl/target/le-cdl-microservice-*-SNAPSHOT.war /opt/tomcat/webapps/ms/cdl.war'

alias swlibdpllibs='bin/deployToSwlib.sh -o install -n prospectdiscovery -s ${LE_STACK} -v $(leversion) -a le-serviceflows-prospectdiscovery -i com.latticeengines.prospectdiscovery.Initializer -f ../le-serviceflows/prospectdiscovery/target/le-serviceflows-prospectdiscovery-*-shaded.jar && bin/deployToSwlib.sh -o install -n leadprioritization -s ${LE_STACK} -v $(leversion) -a le-serviceflows-leadprioritization -i com.latticeengines.leadprioritization.Initializer -f ../le-serviceflows/leadprioritization/target/le-serviceflows-leadprioritization-*-shaded.jar && bin/deployToSwlib.sh -o install -n cdl -s ${LE_STACK} -v $(leversion) -a le-serviceflows-cdl -i com.latticeengines.cdl.Initializer -f ../le-serviceflows/cdl/target/le-serviceflows-cdl-*-shaded.jar && bin/deployToSwlib.sh -o install -n datacloud -s ${LE_STACK} -v $(leversion) -a le-serviceflows-datacloud -i com.latticeengines.datacloud.Initializer -f ../le-serviceflows/datacloud/target/le-serviceflows-datacloud-*-shaded.jar && bin/deployToSwlib.sh -o install -n modeling -s ${LE_STACK} -v $(leversion) -a le-serviceflows-modeling -i com.latticeengines.modeling.Initializer -f ../le-serviceflows/modeling/target/le-serviceflows-modeling-*-shaded.jar && bin/deployToSwlib.sh -o install -n scoring -s ${LE_STACK} -v $(leversion) -a le-serviceflows-scoring -i com.latticeengines.scoring.Initializer -f ../le-serviceflows/scoring/target/le-serviceflows-scoring-*-shaded.jar'
alias swlibdpl='dirs -c && pushd $WSHOME/le-swlib && hadoop fs -rm -r /app/${LE_STACK}/$(leversion)/swlib || true && swlibdpllibs && popd'
alias sfbld='dirs -c && pushd $WSHOME/le-serviceflows && mvn -T6 -DskipTests clean install && popd'
alias sfdpl='sfbld && swlibdpl'
alias sabld='dirs -c && pushd $WSHOME/le-serviceapps && mvn -T4 -DskipTests clean install && popd'

alias cfgdplnobld='hdfs dfs -mkdir -p /app/${LE_STACK}/$(leversion)/conf; hdfs dfs -put -f $WSHOME/le-config/conf/env/dev/latticeengines.properties /app/${LE_STACK}/$(leversion)/conf; hdfs dfs -put -f $WSHOME/le-config/conf/env/dev/log4j.properties /app/${LE_STACK}/$(leversion)/conf; hdfs dfs -put -f $WSHOME/le-config/conf/env/dev/log4j2-yarn.xml /app/${LE_STACK}/$(leversion)/conf; hdfs dfs -mkdir -p /app/${LE_STACK}/$(leversion)/lib; hdfs dfs -put -f $WSHOME/le-config/src/main/resources/jacocoagent.jar /app/${LE_STACK}/$(leversion)/lib;'
alias cfgbld='bash $WSHOME/le-dev/scripts/cfgbld.sh'
alias cfgdpl='cfgbld && cfgdplnobld'

alias runtest='python $WSHOME/le-dev/scripts/runtest.py'
alias runtest3='python3 $WSHOME/le-dev/scripts/runtest.py'
alias cleanuptesttenants='python $WSHOME/le-dev/scripts/cleanup.py'
alias pytests='cd $WSHOME/le-dataplatform/src/test/python && PYTHONPATH=../../main/python:../../main/python/pipeline:$PYTHONPATH $ANACONDA_HOME/envs/lattice/bin/py.test'

alias runjetty='runtest -p jetty -c jetty:run'
alias runjetty2='runtest -p jetty2 -c jetty:run-forked'

alias uibld='pushd $WSHOME/le-ui && npm install && popd'
alias uirunlpi='cd $WSHOME/le-ui && npm run local'
alias uirunadmin='cd $WSHOME/le-ui && npm run local_admin'

alias dpltc='python $WSHOME/le-dev/scripts/tcdpl.py'
alias dpltc3='python3 $WSHOME/le-dev/scripts/tcdpl.py'
alias runtc='bash $WSHOME/le-dev/scripts/run-tomcat.sh'

alias dkrmi='docker rmi -f $(docker images -a --filter "dangling=true" -q --no-trunc) 2>/dev/null'
alias dkrmc='docker rm $(docker ps -a -q) && docker ps -a 2>/dev/null'
alias dkps='docker ps --format "table {{.Names}}\t{{.Ports}}\t{{.Image}}"'
alias dkpull='bash $WSHOME/le-dev/scripts/docker_pull.sh'
alias dkpush='bash $WSHOME/le-dev/scripts/docker_push.sh'

alias conda-on='source $ANACONDA_HOME/bin/activate lattice'
alias conda-off='source $ANACONDA_HOME/bin/deactivate'

alias dbdiff-qa='pushd $WSHOME/le-dev/scripts && bash dbdiff.sh qa && popd'
alias dbdiff-prod='pushd $WSHOME/le-dev/scripts && bash dbdiff.sh prod && popd'

alias cc-clear='find . -name "*.exec" -type f -delete'
alias cc-report='bash $WSHOME/le-dev/scripts/code_coverage.sh'

alias dk-setupenv='source $WSHOME/le-dev/scripts/setup_dkenv.sh'
alias dk-up='docker-compose -p lattice -f $WSHOME/le-dev/scripts/docker-compose.yml up -d --remove-orphan'
alias dk-down='docker-compose -p lattice -f $WSHOME/le-dev/scripts/docker-compose.yml down'
alias dk-start-all='docker-compose -p lattice -f $WSHOME/le-dev/scripts/docker-compose.yml start'
alias dk-stop-all='docker-compose -p lattice -f $WSHOME/le-dev/scripts/docker-compose.yml stop'
alias dk-restart='docker-compose -p lattice -f $WSHOME/le-dev/scripts/docker-compose.yml restart'
alias dk-run='bash $WSHOME/le-dev/scripts/docker_run.sh'
alias dk-stop='bash $WSHOME/le-dev/scripts/docker_stop.sh'
alias dkrunui='docker run -itd --name le-ui --net=host -e LE_ENVIRONMENT=dev latticeengines/express'
alias dkstopui='docker stop le-ui; dkrmc'

alias recordtransformertest='MAVEN_OPTS="-Xmx2048m -XX:MaxPermSize=256m" mvn -Pfunctional -Djetty.port=8016 -DTENANT=tenant10 -Dtest=RecordTransformerTestNG verify &> /tmp/test.log'
alias replacePropertyTokens='python $WSHOME/le-config/updateProperty.py'

alias runui='pushd $WSHOME/le-ui && npm install && npm run local && popd'
alias runadminui='pushd $WSHOME/le-ui && npm install && npm run local_admin && popd'

alias kfk-deploy='bash $WSHOME/le-dev/scripts/setupkafka.sh'
alias kfk-start='bash $WSHOME/le-dev/scripts/start-kafka.sh'
alias kfk-stop='bash $WSHOME/le-dev/scripts/stop-kafka.sh'
alias kfk-connect='bash $WSHOME/le-dev/scripts/start-kafka-connect.sh'

alias le-lint='bash $WSHOME/le-dev/scripts/lint.sh'

alias emr-ip='bash $WSHOME/le-dev/scripts/emr_ip.sh'
alias ministack-ip='bash $WSHOME/le-dev/scripts/ministack_ip.sh'

alias zk-qa='zk-shell qazklayer1.lattice.local,qazklayer4.lattice.local,qazklayer5.lattice.local'
alias zk-prod='zk-shell zklayer4.prod.lattice.local,zklayer5.prod.lattice.local,zklayer6.prod.lattice.local'
