<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:Xlint="http://www.w3.org/2001/XMLSchema"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.latticeengines</groupId>
    <artifactId>le-parent</artifactId>
    <packaging>pom</packaging>
    <version>3.7.0-SNAPSHOT</version>
    <name>le-parent</name>
    <description>Parent of all lattice engine maven projects.</description>

    <scm>
        <connection>scm:svn:https://lesvn/svn/lattice/LEDP/branches/develop/ledp</connection>
        <developerConnection>scm:svn:https://lesvn/svn/lattice/LEDP/branches/develop/ledp</developerConnection>
        <url>scm:svn:https://lesvn/svn/lattice/LEDP/branches/develop/ledp</url>
    </scm>

    <properties>
        <branchPath>trunk</branchPath>
        <svnrepourl/>
        <nexusrepourl/>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <compiler.version>1.8</compiler.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!-- maven versions -->
        <maven.jar.version>3.0.2</maven.jar.version>
        <maven.war.version>3.1.0</maven.war.version>
        <maven.surefire.version>2.20</maven.surefire.version>
        <maven.deploy.version>2.8.2</maven.deploy.version>
        <maven.assembly.version>3.0.0</maven.assembly.version>
        <maven.install.version>2.5.2</maven.install.version>
        <maven.eclipse.version>2.9</maven.eclipse.version> <!-- Users are advised to use m2e, the Eclipse Maven Integration instead of this plugin -->
        <maven.antrun.version>1.8</maven.antrun.version>
        <maven.exec.version>1.6.0</maven.exec.version>
        <maven.shaded.version>2.3</maven.shaded.version>
        <maven.compiler.version>3.6.1</maven.compiler.version>
        <maven.aspectj.version>1.8</maven.aspectj.version>
        <maven.archetype.version>3.0.1</maven.archetype.version>
        <maven.camel.salesforce.version>2.18.2</maven.camel.salesforce.version>
        <maven.keytool.version>1.5</maven.keytool.version>
        <maven.rpm.version>2.1.5</maven.rpm.version> <!-- upgrade ? -->

        <!-- dependencies with rigid version interlock, hard to upgrade -->
        <hadoop.version>2.7.1.2.3.6.0-3796</hadoop.version>
        <sqoop.version>1.4.5.2.2.0.0-2041</sqoop.version>
        <spring.data.version>2.4.0.RELEASE-hdp23</spring.data.version> <!-- need ledp3 classifier -->
        <mortbay.jetty.version>6.1.26</mortbay.jetty.version>  <!-- compatible with horton works -->
        <tez.version>0.8.2</tez.version>
        <guava.version>19.0</guava.version>
        <tez.guava.version>11.0.2</tez.guava.version>
        <hdp.guava.version>16.0</hdp.guava.version>
        <avro.version>1.7.7</avro.version>
        <parquet.avro.version>1.4.3</parquet.avro.version> <!-- remove ? -->
        <aws.version>1.11.160</aws.version>
        <cascading.version>3.2.1</cascading.version>
        <cascading.avro.version>3.0.0</cascading.avro.version>
        <cascading.redshift.version>3.0.0</cascading.redshift.version>
        <!-- if until 2018 or cascading 3.3, they still do not release new version, we should move away from cascading-flink -->
        <cascading.flink.version>0.3.0</cascading.flink.version>
        <scala.version>2.11.8</scala.version>
        <flink.version>1.2.0</flink.version> <!-- compatible with cascading flink 0.3 -->
        <grizzled.slf4j_2.11.version>1.3.0</grizzled.slf4j_2.11.version> <!-- bind to flink -->
        <codahale.metrics.version>3.0.2</codahale.metrics.version> <!-- bind to flink -->
        <jackson.fasterxml.version>2.8.8</jackson.fasterxml.version>
        <jackson.codehaus.version>1.9.13</jackson.codehaus.version> <!-- spring-security-oauth2 2.1.1.RELEASE -->
        <hibernate.version>4.1.9.Final</hibernate.version>
        <hibernate.jpa.version>1.0.1.Final</hibernate.jpa.version>
        <jetty.version>9.3.14.v20161028</jetty.version> <!-- camel-salesforce 2.19.1 -->
        <javax.servlet.version>3.1.0</javax.servlet.version> <!-- just keep up with tomcat version -->
        <javax.jsp.version>2.2</javax.jsp.version> <!-- just keep up with tomcat version -->
        <flink.akka-version>2.3-custom</flink.akka-version> <!-- to be compatible with flink 1.2.0 -->
        <redshift.jdbc.version>1.2.1.1001</redshift.jdbc.version> <!-- we upload to nexus -->
        <joda.version>2.8.1</joda.version>
        <cronutils.version>4.0.1</cronutils.version> <!-- need to upgrade joda -->
        <marketo.soap.sdk.version>2.7</marketo.soap.sdk.version> <!-- uploaded to nexues ? -->

        <!-- versions should be easy to upgrade: keep them updated! -->
        <jacoco.version>0.7.5.201505241946</jacoco.version>
        <quartz.version>2.3.0</quartz.version>
        <newrelic.version>2.14.1</newrelic.version> <!-- to be removed -->
        <aspectj.version>1.8.7</aspectj.version>
        <reflections.version>0.9.9</reflections.version>
        <jython.version>2.7.0</jython.version>
        <apache.http.version>4.4.1</apache.http.version>
        <argparse4j.version>0.5.0</argparse4j.version> <!-- to be removed, use commons cli instead -->
        <log4j.version>1.2.17</log4j.version> <!-- to be upgraded to log4j2 or switch to sfl4j -->
        <log4j.extras.version>1.2.17</log4j.extras.version>
        <slf4j.version>1.7.25</slf4j.version>
        <jcraft.version>0.1.53</jcraft.version>
        <springfox.swagger.version>2.7.0</springfox.swagger.version>
        <io.swagger.version>1.5.15</io.swagger.version>
        <jpmml.version>1.2.15</jpmml.version>
        <snappy.version>1.1.4</snappy.version>
        <curator.version>2.7.1</curator.version>
        <querydsl.version>4.1.4</querydsl.version>
        <testng.version>6.11</testng.version>
        <mockito.version>2.8.47</mockito.version>
        <jsonpath.version>2.2.0</jsonpath.version>
        <libphonenumber.version>8.5.2</libphonenumber.version>
        <fdb.sql.parser.version>1.5.0</fdb.sql.parser.version>
        <javax.mail.version>1.5.4</javax.mail.version>
        <jsr250.api.version>1.0</jsr250.api.version>
        <javax.el.version>2.2.4</javax.el.version>
        <derby.version>10.13.1.1</derby.version>
        <bitcoinj.version>0.14.4</bitcoinj.version>
        <jcabi.version>1.1</jcabi.version>
        <sourceforge.csvjdbc.version>1.0.28</sourceforge.csvjdbc.version>
        <jedis.version>2.8.0</jedis.version>
        <!-- Spring -->
        <spring.version>4.3.9.RELEASE</spring.version>
        <spring.boot.version>1.2.6.RELEASE</spring.boot.version>
        <spring.batch.version>3.0.7.RELEASE</spring.batch.version>
        <spring.security.version>3.2.5.RELEASE</spring.security.version> <!-- need to upgrade to 4.x.x -->
        <spring.oauth2.version>2.1.1.RELEASE</spring.oauth2.version>
        <!-- Camel -->
        <camel.version>2.19.1</camel.version>
        <camel.jcifs.version>2.18.0</camel.jcifs.version>
        <!-- DB Drivers -->
        <c3p0.version>0.9.5.2</c3p0.version>
        <influxdb.version>2.7</influxdb.version>
        <hive.version>1.1.0</hive.version>
        <sqljdbc4.version>4.0</sqljdbc4.version>
        <mysql.connector.version>5.1.30</mysql.connector.version>
        <!-- commons -->
        <commons.io.version>2.5</commons.io.version>
        <commons.lang3.version>3.6</commons.lang3.version>
        <commons.text.version>1.1</commons.text.version>
        <commons.cli.version>1.4</commons.cli.version>
        <commons.codec.version>1.10</commons.codec.version>
        <commons.collections.version>3.2.1</commons.collections.version> <!-- should be migrated to commons collections4 -->
        <commons.net.version>3.6</commons.net.version>
        <commons.vfs.version>1.0</commons.vfs.version> <!-- should be migrated to commons vfs2 -->
        <commons.csv.version>1.4</commons.csv.version>
        <commons.exec.version>1.3</commons.exec.version>
        <commons.dbcp.version>1.4</commons.dbcp.version> <!-- should be migrated to commons dbcp2 -->
        <commons.validator.version>1.6</commons.validator.version>
        <commons.fileupload.version>1.3.3</commons.fileupload.version>

        <!-- parameters: can be overwritten in child projects -->
        <load.classes.include>**/*LoadTestNG.java</load.classes.include>
        <deployment.classes.include>**/*DeploymentTestNG.java</deployment.classes.include>
        <functional.classes.include>**/*TestNG.java</functional.classes.include>
        <functional.classes.exclude>**/*UnitTestNG.java</functional.classes.exclude>
        <infrastructure.classes.include>**/*InfrastructureTestNG.java</infrastructure.classes.include>
        <surefire.and.failsafe.report.dir>target/test-report</surefire.and.failsafe.report.dir>
        <functional.groups>functional</functional.groups>
        <deployment.groups>deployment</deployment.groups>
        <infrastructure.groups>infrastructure</infrastructure.groups>
        <unit.groups>unit</unit.groups>
        <load.groups>load</load.groups>
        <jacoco.destfile>jacoco.exec</jacoco.destfile>
        <jacoco.coverage.dir>${project.build.directory}</jacoco.coverage.dir>
        <maxpermsize>-XX:MaxPermSize=1024m</maxpermsize> <!-- for java 8 compatibility, where this variable is empty -->
        <jetty.dir>main</jetty.dir>
        <jetty.stop.port>10999</jetty.stop.port>
        <jetty.use.test.cp>true</jetty.use.test.cp>
        <surefire.reuse.forks>true</surefire.reuse.forks>
    </properties>

    <!-- set up to use LE local Nexus Repository for dependencies -->
    <repositories>
        <repository>
            <id>central</id>
            <name>LE Maven REPOSITORY</name>
            <layout>default</layout>
            <url>http://10.41.1.75:8081/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
    </repositories>
    <!-- set up to use LE local Nexus Repository for maven plugins -->
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>LE Maven Plugin Repository</name>
            <url>http://10.41.1.75:8081/repository/maven-public/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>shaded-yarn</id>
            <activation>
                <file>
                    <exists>src/main/assembly/shadedyarn.txt</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven.shaded.version}</version>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <!-- Strip any signatures to avoid security errors running the shaded JAR. -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>lib/*.jar</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>license/*</exclude>
                                        <exclude>licenses/*</exclude>
                                        <exclude>license.*</exclude>
                                        <exclude>META-INF/license/*</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>*:spring-yarn-batch</artifact>
                                    <excludes>
                                        <exclude>org/springframework/yarn/batch/am/BatchAppmaster*</exclude>
                                        <exclude>org/springframework/yarn/batch/support/YarnJobLauncher*</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>*:spring-yarn-core</artifact>
                                    <excludes>
                                        <exclude>org/springframework/yarn/am/AppmasterRmTemplate*</exclude>
                                        <!-- exclude>org/springframework/yarn/rpc/YarnRpcAccessor*</exclude-->
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <transformers>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                            <resource>META-INF/spring.handlers</resource>
                                        </transformer>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                            <resource>META-INF/spring.schemas</resource>
                                        </transformer>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                            <resource>reference.conf</resource>
                                        </transformer>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                    </transformers>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>shaded</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven.shaded.version}</version>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>

                            <artifactSet>
                                <excludes>
                                    <exclude>org.hibernate:*</exclude>
                                    <exclude>org.apache.hadoop:*</exclude>
                                    <exclude>org.springframework:*</exclude>
                                    <exclude>com.google.http-client:*</exclude>
                                </excludes>
                            </artifactSet>

                            <filters>
                                <!-- Strip any signatures to avoid security errors running the shaded
                                    JAR. -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>unit</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <executions>
                            <execution>
                                <id>unit-test</id>
                                <configuration>
                                    <skip>false</skip>
                                    <groups>${unit.groups}</groups>
                                    <forkMode>always</forkMode>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>functional-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>functional</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <configuration>
                            <shutdown>kill</shutdown>
                            <reuseForks>false</reuseForks>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unit-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>functional-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <includes>
                                        <include>${functional.classes.include}</include>
                                    </includes>
                                    <excludes>
                                        <exclude>${functional.classes.exclude}</exclude>
                                        <exclude>${deployment.classes.include}</exclude>
                                        <exclude>${infrastructure.classes.include}</exclude>
                                    </excludes>
                                    <groups>${functional.groups}</groups>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>${env.HADOOP_CONF_DIR}</additionalClasspathElement>
                                        <additionalClasspathElement>${env.TEZ_CONF_DIR}</additionalClasspathElement>
                                    </additionalClasspathElements>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jetty</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jetty.version}</version>
                        <configuration>
                            <httpConnector>
                                <port>${jetty.port}</port>
                            </httpConnector>
                            <webAppConfig>
                                <extraClasspath>${env.HADOOP_CONF_DIR};${env.JAVA_HOME}/lib/tools.jar
                                </extraClasspath>
                            </webAppConfig>
                            <systemProperties>
                                <systemProperty>
                                    <name>log4j.configuration</name>
                                    <value>file:///${project.basedir}/src/${jetty.dir}/resources/log4j.properties</value>
                                </systemProperty>
                                <systemProperty>
                                    <name>com.latticeengines.registerBootstrappers</name>
                                    <value>true</value>
                                </systemProperty>
                            </systemProperties>
                            <webXml>${basedir}/src/${jetty.dir}/webapp/WEB-INF/web.xml</webXml>
                            <webAppSourceDirectory>${basedir}/src/${jetty.dir}/webapp</webAppSourceDirectory>
                            <useTestClasspath>${jetty.use.test.cp}</useTestClasspath>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <stopPort>${jetty.stop.port}</stopPort>
                            <stopKey>STOP</stopKey>
                            <stopWait>10</stopWait>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>5.0.2</version>
                            </dependency>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm-commons</artifactId>
                                <version>5.0.2</version>
                            </dependency>
                            <dependency>
                                <groupId>com.sun.mail</groupId>
                                <artifactId>javax.mail</artifactId>
                                <version>1.5.4</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deployment</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <configuration>
                            <shutdown>kill</shutdown>
                            <reuseForks>false</reuseForks>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unit-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>functional-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>deployment-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <includes>
                                        <include>${deployment.classes.include}</include>
                                    </includes>
                                    <groups>${deployment.groups}</groups>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>${env.HADOOP_CONF_DIR}</additionalClasspathElement>
                                        <additionalClasspathElement>${env.TEZ_CONF_DIR}</additionalClasspathElement>
                                    </additionalClasspathElements>
                                    <runOrder>
                                        alphabetical
                                    </runOrder>  <!-- To get ZEndToEndTest to run last -->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>functional2</id> <!-- run classes in parallel -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <configuration>
                            <shutdown>kill</shutdown>
                            <reuseForks>false</reuseForks>
                            <forkCount>1C</forkCount>
                            <trimStackTrace>false</trimStackTrace>
                            <parallel>classes</parallel>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unit-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>functional-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <includes>
                                        <include>${functional.classes.include}</include>
                                    </includes>
                                    <excludes>
                                        <exclude>${functional.classes.exclude}</exclude>
                                        <exclude>${deployment.classes.include}</exclude>
                                        <exclude>${infrastructure.classes.include}</exclude>
                                    </excludes>
                                    <groups>${functional.groups}</groups>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>${env.HADOOP_CONF_DIR}</additionalClasspathElement>
                                        <additionalClasspathElement>${env.TEZ_CONF_DIR}</additionalClasspathElement>
                                    </additionalClasspathElements>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deployment2</id> <!-- run classes in parallel -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <configuration>
                            <shutdown>kill</shutdown>
                            <reuseForks>false</reuseForks>
                            <forkCount>1C</forkCount>
                            <trimStackTrace>false</trimStackTrace>
                            <parallel>classes</parallel>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unit-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>functional-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>deployment-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <includes>
                                        <include>${deployment.classes.include}</include>
                                    </includes>
                                    <groups>${deployment.groups}</groups>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>${env.HADOOP_CONF_DIR}</additionalClasspathElement>
                                        <additionalClasspathElement>${env.TEZ_CONF_DIR}</additionalClasspathElement>
                                    </additionalClasspathElements>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>infrastructure</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <executions>
                            <execution>
                                <id>unit-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>functional-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>deployment-test</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>infrastructure-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <includes>
                                        <include>${infrastructure.classes.include}</include>
                                    </includes>
                                    <groups>${infrastructure.groups}</groups>
                                    <forkMode>always</forkMode>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>${env.HADOOP_HOME}/etc/hadoop
                                        </additionalClasspathElement>
                                        <additionalClasspathElement>${env.TEZ_CONF_DIR}</additionalClasspathElement>
                                    </additionalClasspathElements>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>cc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco/${jacoco.destfile}</destFile>
                            <append>true</append>
                            <testFailureIgnore>true</testFailureIgnore>
                            <dataFile>${project.build.directory}/jacoco/${jacoco.destfile}</dataFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jacoco-initialize</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-report-prepare-package</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-report-post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>cc-aggregate-report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jacoco-dependency-ant</id>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <inherited>true</inherited>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jacoco</groupId>
                                            <artifactId>org.jacoco.ant</artifactId>
                                            <version>${jacoco.version}</version>
                                        </artifactItem>
                                    </artifactItems>
                                    <stripVersion>true</stripVersion>
                                    <outputDirectory>${jacoco.coverage.dir}/jacoco/jacoco-jars</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${maven.antrun.version}</version>
                        <executions>
                            <execution>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- Execute an ant task within maven -->
                                        <echo message="Generating jacoco reports..."/>
                                        <taskdef name="report" classname="org.jacoco.ant.ReportTask">
                                            <classpath
                                                    path="${jacoco.coverage.dir}/jacoco/jacoco-jars/org.jacoco.ant.jar"/>
                                        </taskdef>
                                        <mkdir dir="${jacoco.coverage.dir}/site/jacoco"/>
                                        <report>
                                            <executiondata>
                                                <fileset dir="${jacoco.coverage.dir}/jacoco">
                                                    <include name="*.exec"/>
                                                </fileset>
                                            </executiondata>
                                            <structure name="Jacoco Multi-Run Coverage Project">
                                                <group name="jacoco-multi-run-coverage">
                                                    <classfiles>
                                                        <fileset
                                                                dir="${project.build.directory}/classes"/>
                                                    </classfiles>
                                                    <sourcefiles encoding="UTF-8">
                                                        <fileset dir="${project.build.sourceDirectory}"/>
                                                    </sourcefiles>
                                                </group>
                                            </structure>
                                            <html destdir="${jacoco.coverage.dir}/site/jacoco"/>
                                            <xml destfile="${jacoco.coverage.dir}/site/jacoco/jacoco.xml"/>
                                            <csv destfile="${jacoco.coverage.dir}/site/jacoco/jacoco.csv"/>
                                        </report>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.jacoco</groupId>
                                <artifactId>org.jacoco.ant</artifactId>
                                <version>${jacoco.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>com.latticeengines.local</id>
            <name>Local</name>
            <url>file://${user.home}/.m2/repository</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- Add svn revision into all jars and wars -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
                <version>1.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.version}</version><!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <archive>
                        <manifestEntries>
                            <LE-SCM-Revision>${buildNumber}</LE-SCM-Revision>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.version}</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <LE-SCM-Revision>${buildNumber}</LE-SCM-Revision>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>

        <defaultGoal>install</defaultGoal>
        <pluginManagement>
            <plugins>

                <!-- The Jetty Maven plugin is useful for rapid development and testing. You can add
                    it to any webapp project that is structured according to the usual Maven defaults. The plugin can then
                    periodically scan your project for changes and automatically redeploy the webapp if any are found. This
                    makes the development cycle more productive by eliminating the build and deploy steps: you use your IDE
                    to make changes to the project, and the running web container automatically picks them up, allowing you
                    to test them straight away. To run - mvn jetty:run -->
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
                    <executions>
                        <execution>
                            <id>start-jetty</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <scanIntervalSeconds>10</scanIntervalSeconds>
                                <daemon>true</daemon>
                            </configuration>
                        </execution>
                        <execution>
                            <id>stop-jetty</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                            <configuration>
                                <stopPort>9001</stopPort>
                                <stopKey>secret</stopKey>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>${compiler.version}</source>
                        <target>${compiler.version}</target>
                        <executable>${JAVA_HOME}/bin/javac</executable>
                        <compilerArguments>
                            <Werror/>
                            <Xlint:all/>
                            <Xlint:-deprecation/>
                        </compilerArguments>
                    </configuration>
                </plugin>
                <!-- -->
                <!-- jar plugin to produce 3 jars: impl (default), interface, tests -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.version}</version>
                    <executions>
                        <execution>
                            <id>only-interface</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>package</phase>
                            <configuration>
                                <classifier>intf</classifier>
                                <includes>
                                    <include>com/latticeengines/${component-name}/exposed/**</include>
                                    <include>com/latticeengines/${component-name}/exposed/**</include>
                                </includes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>only-tests</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                            <configuration>
                                <includes>
                                    <include>**/*</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <executions>
                        <execution>
                            <id>unit-test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <phase>test</phase>
                            <configuration>
                                <includes>
                                    <include>**/*UnitTestNG.java</include>
                                </includes>
                                <groups>${unit.groups}</groups>
                                <forkMode>always</forkMode>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <inherited>true</inherited>
                    <configuration>
                        <descriptors>
                            <descriptor>assembly-desc.xml</descriptor>
                        </descriptors>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>${maven.archetype.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ant-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven.exec.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven.eclipse.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>${maven.rpm.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons.net.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-vfs</groupId>
            <artifactId>commons-vfs</artifactId>
            <version>${commons.vfs.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${commons.csv.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons.cli.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${hdp.guava.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>apache-log4j-extras</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.fasterxml.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.fasterxml.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>

        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>${sqljdbc4.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- Spring Framework Dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.aspectj</groupId>
                    <artifactId>aspectjweaver</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- TEST dependencies -->

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- used by all projects have metric unit tests -->
        <!-- to be moved to individual projects -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
