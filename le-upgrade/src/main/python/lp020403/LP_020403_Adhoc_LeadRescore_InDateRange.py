#
# $LastChangedBy: lyan $
# $LastChangedDate: 2015-11-19 19:51:40 +0800 (Thu, 19 Nov 2015) $
# $Rev: 71042 $
#

from liaison import *
from appsequence import Applicability, StepBase
from lxml import etree
import os, liaison

class LP_020403_Adhoc_LeadRescore_InDateRange(StepBase):
  name = 'LP_020401_ChangeTimezoneOffset'
  description = 'Re-PD and Re-score the Leads in date range ,then push to SQL'
  version = '$Rev: 71042 $'

  def __init__(self, forceApply=False):
    super(LP_020403_Adhoc_LeadRescore_InDateRange, self).__init__(forceApply)

  def getApplicability(self, appseq):
    lgm = appseq.getLoadGroupMgr()
    type = appseq.getText('template_type')
    return Applicability.canApply

  def apply(self, appseq):

    # Modified in visiDB parts
    # 1. Add new specs
    template_type = appseq.getText('template_type')

    newSpecsFileName = 'LP_' + template_type + '_NewSpecs_2.4.3_from_2.4.2.maude'
    newSpecsFileName = os.path.join('..', '..', 'resources', newSpecsFileName)
    newSpecsFileName = os.path.join(os.path.dirname(__file__), newSpecsFileName)

    slnes = ''

    with open(newSpecsFileName, mode='r') as newSpecsFile:
      slnes = newSpecsFile.read()

    conn_mgr = appseq.getConnectionMgr()
    conn_mgr.setSpec('New Specs', slnes)

    # Add a query:Q_PLS_Scoring_Bulk_LeadFile
    conn_mgr = appseq.getConnectionMgr()
    q_scoring = conn_mgr.getSpec('Q_PLS_Scoring_Incremental')
    bulk_ulf = 'SpecLatticeNamedElements(SpecLatticeNamedElement(' + q_scoring + ',ContainerElementName("Q_PLS_Scoring_Bulk_LeadFile")))'
    exp_bulk_sid = liaison.ExpressionVDBImplGeneric(bulk_ulf)
    conn_mgr.setSpec('Q_PLS_Scoring_Bulk_LeadFile', exp_bulk_sid.definition())

    q_scoring_bulk = conn_mgr.getQuery('Q_PLS_Scoring_Bulk_LeadFile')
    for filter in q_scoring_bulk.getFilters():
      q_scoring_bulk.filters_.remove(filter)
    filters_new1 = []
    filter_new = liaison.ExpressionVDBImplGeneric(
      'LatticeAddressSetPi(LatticeAddressExpressionAtomic(LatticeAddressAtomicIdentifier(ContainerElementName("User_LeadFileForScoring"))))')
    filters_new1.append(filter_new)
    q_scoring_bulk.filters_ = filters_new1
    conn_mgr.setSpec('Q_PLS_Scoring_Bulk_LeadFile', q_scoring_bulk.SpecLatticeNamedElements())

    # 3. Add a query:Q_PLS_Scoring_Bulk_ScoresInDateRange
    q_scoring_ulf = conn_mgr.getSpec('Q_PLS_Scoring_Bulk_LeadFile')
    bulk_sid = 'SpecLatticeNamedElements(SpecLatticeNamedElement(' + q_scoring_ulf + ',ContainerElementName("Q_PLS_Scoring_Bulk_ScoresInDateRange")))'
    exp_bulk_sid = liaison.ExpressionVDBImplGeneric(bulk_sid)
    conn_mgr.setSpec('Q_PLS_Scoring_Bulk_ScoresInDateRange', exp_bulk_sid.definition())

    filters_new2 = []
    q_scoring_bulk_sdr = conn_mgr.getQuery("Q_PLS_Scoring_Bulk_ScoresInDateRange")
    for filter in q_scoring_bulk_sdr.getFilters():
      q_scoring_bulk_sdr.filters_.remove(filter)
    filter1 = liaison.ExpressionVDBImplGeneric(
      'LatticeAddressSetPi(LatticeAddressExpressionAtomic(LatticeAddressAtomicIdentifier(ContainerElementName("Scores_InDateRange_Ref"))))')
    filters_new2.append(filter1)
    q_scoring_bulk_sdr.filters_ = filters_new2
    conn_mgr.setSpec('Q_PLS_Scoring_Bulk_LeadFile', q_scoring_bulk_sdr.SpecLatticeNamedElements())

    # Modified the Column:
    q_scoring_bulk_sdr = conn_mgr.getQuery("Q_PLS_Scoring_Bulk_ScoresInDateRange")
    exp_model_guid = liaison.ExpressionVDBImplGeneric(
      'LatticeFunctionExpressionTransform(LatticeFunctionIdentifier(ContainerElementNameTableQualifiedName(LatticeSourceTableIdentifier(ContainerElementName("Scores_InDateRange_Ref")),ContainerElementName("Model_GUID"))),LatticeAddressSetPi(LatticeAddressExpressionAtomic(LatticeAddressAtomicIdentifier(ContainerElementName("Bard_LeadScoreHistory")))),FunctionAggregationSelectWhere(FunctionAggregationOperator("Max"),LatticeFunctionIdentifier(ContainerElementNameTableQualifiedName(LatticeSourceTableIdentifier(ContainerElementName("Scores_InDateRange_Ref")),ContainerElementName("ScoreDate")))))')
    col_model_guid = liaison.QueryColumnVDBImpl('Model_GUID', exp_model_guid)
    # q_scoring_bulk_sdr.removeColumn('Model_GUID')
    # q_scoring_bulk_sdr.appendColumn(col_model_guid)
    q_scoring_bulk_sdr.updateColumn(col_model_guid)
    conn_mgr.setQuery(q_scoring_bulk_sdr)

    # Modified in DataLoader parts
    lgm = appseq.getLoadGroupMgr()
    # 1.Create a LG Diagnostic_ExtractScoresInDateRange
    if type == 'MKTO':
      diag_esdr = '''<group name="Diagnostic_ExtractScoresInDateRange" alias="Diagnostic_ExtractScoresInDateRange" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_InDateRange" queryAlias="Q_Scores_InDateRange" sw="Workspace" schemaName="Scores_InDateRange_Ref" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    elif type == 'ELQ':
      diag_esdr = '''<group name="Diagnostic_ExtractScoresInDateRange" alias="Diagnostic_ExtractScoresInDateRange" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="12000" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_InDateRange" queryAlias="Q_Scores_InDateRange" sw="Workspace" schemaName="Scores_InDateRange_Ref" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    else:
      diag_esdr = '''<group name="Diagnostic_ExtractScoresInDateRange" alias="Diagnostic_ExtractScoresInDateRange" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_InDateRange" queryAlias="Q_Scores_InDateRange" sw="Workspace" schemaName="Scores_InDateRange_Ref" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    lgm.setLoadGroup(diag_esdr)

    # 2.Create a LG Diagnostic_ExtractScoresInDateRange_Test
    if type == 'MKTO':
      diag_esdr_test = '''<group name="Diagnostic_ExtractScoresInDateRange_Test" alias="Diagnostic_ExtractScoresInDateRange_Test" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_InDateRange_Test" queryAlias="Q_Scores_InDateRange_Test" sw="Workspace" schemaName="Scores_InDateRange_Test" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    elif type == 'ELQ':
      diag_esdr_test = '''<group name="Diagnostic_ExtractScoresInDateRange_Test" alias="Diagnostic_ExtractScoresInDateRange_Test" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="12000" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_InDateRange_Test" queryAlias="Q_Scores_InDateRange_Test" sw="Workspace" schemaName="Scores_InDateRange_Test" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    else:
      diag_esdr_test = '''<group name="Diagnostic_ExtractScoresInDateRange_Test" alias="Diagnostic_ExtractScoresInDateRange_Test" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_InDateRange_Test" queryAlias="Q_Scores_InDateRange_Test" sw="Workspace" schemaName="Scores_InDateRange_Test" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    lgm.setLoadGroup(diag_esdr_test)

    # 3.Create a LG Diagnostic_Summary_ScoresInDateRange
    if type == 'MKTO':
      diag_ssdr = '''<group name="Diagnostic_Summary_ScoresInDateRange" alias="Diagnostic_Summary_ScoresInDateRange" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries>
        <targetQuery w="Workspace" t="2" name="Q_Summary_Scores_InDateRange" alias="Q_Summary_Scores_InDateRange" isc="True" threshold="10000" fsTableName="Summary_Scores_InDateRange" sourceType="1" jobType="20" ignoreOptionsValue="0" exportToDestDirectly="True" exportRule="4" fileExt="bcp" rowTerminator="\\0\\r" columnTerminator="\\0" edts="False" destType="SQL" destDataProvider="SQL_LeadValidation_DataProvider" cto="0" vs="False" mins="5" maxs="100">
          <schemas />
          <specs />
          <fsColumnMappings />
          <excludeColumns />
          <validationQueries />
          <constantRows />
          <kcs>
            <kc n="LeadID" />
            <kc n="ModelGUID" />
          </kcs>
          <fut dn="" d="" n="" iet="False" iets="False" t="1" />
        </targetQuery>
      </targetQueries>
      <targetQuerySequences>
        <sequence w="Workspace" queryName="Q_Summary_Scores_InDateRange" sequence="1" />
      </targetQuerySequences>
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries />
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    elif type == 'ELQ':
      diag_ssdr = '''<group name="Diagnostic_Summary_ScoresInDateRange" alias="Diagnostic_Summary_ScoresInDateRange" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="12000" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries>
        <targetQuery w="Workspace" t="2" name="Q_Summary_Scores_InDateRange" alias="Q_Summary_Scores_InDateRange" isc="True" threshold="10000" fsTableName="Summary_Scores_InDateRange" sourceType="1" jobType="20" ignoreOptionsValue="0" exportToDestDirectly="True" exportRule="4" fileExt="bcp" rowTerminator="\\0\r" columnTerminator="\\0" edts="False" destType="SQL" destDataProvider="SQL_LeadValidation_DataProvider" cto="0" vs="False" mins="5" maxs="100">
          <schemas />
          <specs />
          <fsColumnMappings />
          <excludeColumns />
          <validationQueries />
          <constantRows />
          <kcs>
            <kc n="LeadID" />
            <kc n="TenantName" />
          </kcs>
          <fut dn="" d="" n="" iet="False" iets="False" t="1" />
        </targetQuery>
      </targetQueries>
      <targetQuerySequences>
        <sequence w="Workspace" queryName="Q_Summary_Scores_InDateRange" sequence="1" />
      </targetQuerySequences>
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries />
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    else:
      diag_ssdr = '''<group name="Diagnostic_Summary_ScoresInDateRange" alias="Diagnostic_Summary_ScoresInDateRange" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries>
        <targetQuery w="Workspace" t="2" name="Q_Summary_Scores_InDateRange" alias="Q_Summary_Scores_InDateRange" isc="True" threshold="10000" fsTableName="Summary_Scores_InDateRange" sourceType="1" jobType="20" ignoreOptionsValue="0" exportToDestDirectly="True" exportRule="4" fileExt="bcp" rowTerminator="\\0\\r" columnTerminator="\\0" edts="False" destType="SQL" destDataProvider="SQL_LeadValidation_DataProvider" cto="0" vs="False" mins="5" maxs="100">
          <schemas />
          <specs />
          <fsColumnMappings />
          <excludeColumns />
          <validationQueries />
          <constantRows />
          <kcs>
            <kc n="LeadID" />
            <kc n="ModelGUID" />
          </kcs>
          <fut dn="" d="" n="" iet="False" iets="False" t="1" />
        </targetQuery>
      </targetQueries>
      <targetQuerySequences>
        <sequence w="Workspace" queryName="Q_Summary_Scores_InDateRange" sequence="1" />
      </targetQuerySequences>
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries />
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    lgm.setLoadGroup(diag_ssdr)

    # 4.Create a LG BulkScoring_ResetDownloadedAndMatched
    if type == 'MKTO':
      bulk_rdlm = '''<group name="BulkScoring_ResetDownloadedAndMatched" alias="BulkScoring_ResetDownloadedAndMatched" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="BulkScoring\Standard" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_ResetDownloadedLeads" queryAlias="Q_Scores_ResetDownloadedLeads" sw="Workspace" schemaName="Timestamp_DownloadedLeads" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
        <extractQuery qw="Workspace" queryName="Q_Scores_ResetMatchToPD" queryAlias="Q_Scores_ResetMatchToPD" sw="Workspace" schemaName="Timestamp_MatchToPD" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    elif type == 'ELQ':
      bulk_rdlm = '''<group name="BulkScoring_ResetDownloadedAndMatched" alias="BulkScoring_ResetDownloadedAndMatched" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="BulkScoring\Standard" autoGenerated="False" validationValidMinutes="12000" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_ResetDownloadedLeads" queryAlias="Q_Scores_ResetDownloadedLeads" sw="Workspace" schemaName="Timestamp_DownloadedLeads" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
        <extractQuery qw="Workspace" queryName="Q_Scores_ResetMatchToPD" queryAlias="Q_Scores_ResetMatchToPD" sw="Workspace" schemaName="Timestamp_MatchToPD" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    else:
      bulk_rdlm = '''<group name="BulkScoring_ResetDownloadedAndMatched" alias="BulkScoring_ResetDownloadedAndMatched" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="BulkScoring\Standard" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Scores_ResetDownloadedLeads" queryAlias="Q_Scores_ResetDownloadedLeads" sw="Workspace" schemaName="Timestamp_Downloaded_Lead_Contact" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
        <extractQuery qw="Workspace" queryName="Q_Scores_ResetMatchToPD" queryAlias="Q_Scores_ResetMatchToPD" sw="Workspace" schemaName="Timestamp_MatchToPD" at="False" ucm="False">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    lgm.setLoadGroup(bulk_rdlm)

    # 5.Create a LG BulkScoring_ScoresInDateRange
    lgm.createLoadGroup('BulkScoring_ScoresInDateRange', 'BulkScoring\Standard',
                        'BulkScoring_ScoresInDateRange ', True, True)
    bulk_sidr = etree.fromstring(lgm.getLoadGroup('BulkScoring_ScoresInDateRange').encode('ascii', 'xmlcharrefreplace'))

    bulk_sidr.set('ng', 'True')
    lgm.setLoadGroup(etree.tostring(bulk_sidr))
    bulk_sidr_ngsxml = '<ngs><ng n="BulkScoring_ResetDownloadedAndMatched"/><ng n="PropDataMatch"/><ng n="BulkScoring_PushToScoringDB_ScoresInDateRange"/></ngs>'
    lgm.setLoadGroupFunctionality('BulkScoring_ScoresInDateRange', bulk_sidr_ngsxml)

    # 6.Create a LG BulkScoring_PushToScoringDB_ScoresInDateRange_Step1
    ptsd_lss_xml = lgm.getLoadGroupFunctionality('PushLeadsLastScoredToDestination','lssbardins')
    plsd_lss = etree.fromstring( ptsd_lss_xml )
    model_name = ''
    Data_Prov  = ''
    ptsd_ceid = ''
    ptsd_deid = ''
    for lss in plsd_lss:
      model_name = lss.get('mn')
      Data_Prov = lss.get('dp')
      if lss.get('ceid'):
        ptsd_ceid = lss.get('ceid')
      if lss.get('deid'):
        ptsd_deid = lss.get('deid')

    lgm.createLoadGroup('BulkScoring_PushToScoringDB_ScoresInDateRange_Step1', 'BulkScoring\Standard',
                        'BulkScoring_PushToScoringDB_ScoresInDateRange_Step1', True, False)
    bulk_ptsd_s1 = ''
    bulk_ptsd_s1= etree.fromstring(lgm.getLoadGroup('BulkScoring_PushToScoringDB_ScoresInDateRange_Step1').encode('ascii', 'xmlcharrefreplace'))
    if type == 'MKTO':
      bulk_ptsd_s1 = '''<lssbardins>
        <lssbardin n="PushToScoringDB_ScoresInDateRange_LSS_Bard_In" w="Workspace" ceid="__Contract_External_Id__" deid="__Deployment_External_Id__" mn="__Model_Name__" qn="Q_PLS_Scoring_Bulk_ScoresInDateRange" dp="__Bard_Data_Provider__" eac="True">
          <cms />
        </lssbardin>
      </lssbardins>'''
    elif type == 'ELQ':
      bulk_ptsd_s1 = '''<lssbardins>
        <lssbardin n="PushToScoringDB_ScoresInDateRange_LSS_Bard_In" w="Workspace" ceid="__Contract_External_Id__" deid="__Deployment_External_Id__" mn="__Model_Name__" qn="Q_PLS_Scoring_Bulk_ScoresInDateRange" dp="__Bard_Data_Provider__" eac="True">
          <cms />
        </lssbardin>
      </lssbardins>'''
    else:
      bulk_ptsd_s1 = '''<lssbardins>
        <lssbardin n="PushToScoringDB_ScoresInDateRange_LSS_Bard_In" w="Workspace" ceid="__Contract_External_Id__" deid="__Deployment_External_Id__" mn="__Model_Name__" qn="Q_PLS_Scoring_Bulk_ScoresInDateRange" dp="__Bard_Data_Provider__" eac="True">
          <cms />
        </lssbardin>
      </lssbardins>'''
    if ptsd_ceid != '':
     bulk_ptsd_s1= bulk_ptsd_s1.replace('__Contract_External_Id__', ptsd_ceid)
    if ptsd_deid != '':
     bulk_ptsd_s1 = bulk_ptsd_s1.replace('__Deployment_External_Id__', ptsd_deid)
    bulk_ptsd_s1 = bulk_ptsd_s1.replace('__Model_Name__', model_name)
    bulk_ptsd_s1 = bulk_ptsd_s1.replace('__Bard_Data_Provider__', Data_Prov)
    lgm.setLoadGroupFunctionality('BulkScoring_PushToScoringDB_ScoresInDateRange_Step1', bulk_ptsd_s1)


    # 7.Create a LG BulkScoring_PushToScoringDB_ScoresInDateRange_Step2
    if type == 'MKTO':
      bulk_ptsd_s2 = '''<group name="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2" alias="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="BulkScoring\Standard" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Timestamp_PushToScoring_Bulk_ScoresInDateRange" queryAlias="Q_Timestamp_PushToScoring_Bulk_ScoresInDateRange" sw="Workspace" schemaName="Timestamp_PushToScoring" at="False" ucm="True">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    elif type == 'ELQ':
      bulk_ptsd_s2 = '''<group name="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2" alias="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="BulkScoring\Standard" autoGenerated="False" validationValidMinutes="12000" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Timestamp_PushToScoring_Bulk_ScoresInDateRange" queryAlias="Q_Timestamp_PushToScoring_Bulk_ScoresInDateRange" sw="Workspace" schemaName="Timestamp_PushToScoring" at="False" ucm="True">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    else:
      bulk_ptsd_s2 = '''<group name="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2" alias="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="ytian@lattice-engines.com" path="BulkScoring\Standard" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <gvqs />
      <rdss />
      <validationExtracts />
      <ces />
      <extractQueries>
        <extractQuery qw="Workspace" queryName="Q_Timestamp_PushToScoring_Bulk_ScoresInDateRange" queryAlias="Q_Timestamp_PushToScoring_Bulk_ScoresInDateRange" sw="Workspace" schemaName="Timestamp_PushToScoring" at="False" ucm="True">
          <schemas />
          <specs />
          <cms />
        </extractQuery>
      </extractQueries>
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>'''
    lgm.setLoadGroup(bulk_ptsd_s2)

    # 8.Create a Nest LG BulkScoring_PushToScoringDB_ScoresInDateRange
    lgm.createLoadGroup('BulkScoring_PushToScoringDB_ScoresInDateRange', 'BulkScoring\Standard',
                        'BulkScoring_PushToScoringDB_ScoresInDateRange ', True, True)
    bulk_ptsdb_idr = etree.fromstring(
      lgm.getLoadGroup('BulkScoring_PushToScoringDB_ScoresInDateRange').encode('ascii', 'xmlcharrefreplace'))

    bulk_sidr.set('ng', 'True')
    lgm.setLoadGroup(etree.tostring(bulk_ptsdb_idr))
    bulk_ptsdb_idr_ngsxml = '<ngs><ng n="BulkScoring_PushToScoringDB_ScoresInDateRange_Step1"/><ng n="BulkScoring_PushToScoringDB_ScoresInDateRange_Step2"/></ngs>'
    lgm.setLoadGroupFunctionality('BulkScoring_PushToScoringDB_ScoresInDateRange', bulk_ptsdb_idr_ngsxml)
    return True
