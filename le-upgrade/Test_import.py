#!/usr/bin/python

import os, sys, re
from lxml import etree
from liaison import *
from appsequence import Applicability, AppSequence, StepBase


class Test_import(StepBase):
  name = 'LP_020100_VDB_ModifiedColumns'
  description = 'Upgrade Modified Specs from 2.0.1 to 2.1.0'
  version = '$Rev: 70934 $'

  def __init__(self, forceApply=False):
    super(Test_import, self).__init__(forceApply)

  def getApplicability(self, appseq):
    conn_mgr = appseq.getConnectionMgr()
    if not conn_mgr.getQuery("Q_PLS_Scoring_Incremental") and not conn_mgr.getQuery(
      "Q_Diagnostic_DownloadedUnscoredLeads") and not conn_mgr.getQuery("Q_Diagnostic_MissingDownloadedLeads"):
      return Applicability.cannotApplyPass
    return Applicability.canApply

  def apply(self, appseq):

    # Apply the obtained filters to the missing lead queries: Q_Diagnostic_DownloadedUnscoredLeads and Q_Diagnostic_MissingDownloadedLeads
    success = False
    conn_mgr = appseq.getConnectionMgr()
    type = appseq.getText('template_type')
    lgm = conn_mgr.getLoadGroupMgr()
    # Get the customized score/score-date fields from the the LG PushLeadsLastScoredToDestination and then replace the fields in the related specs and LGs
    customerId = appseq.getText('customer_id')
    scoreField = appseq.getText('score_field')
    scoreDateField = appseq.getText('score_date_field')
    sfdcLeadScoreField = appseq.getText('sfdc_lead_score_field')
    sfdcContactScoreField = appseq.getText('sfdc_contact_score_field')
    sfdcLeadScoreDateField = appseq.getText('sfdc_lead_score_date_field')
    sfdcContactScoreDateField = appseq.getText('sfdc_contact_score_date_field')

    # Modified score/score-date fields of Diagnostic_LoadLeads
    if type == 'MKTO':
      step1_xml = '''
      <group name="Diagnostic_LoadLeads" alias="Diagnostic_LoadLeads" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="richard.liu@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
        <schemas />
        <visiDBConfigurationWithMacros />
        <targetQueries />
        <targetQuerySequences />
        <rdss>
          <rds n="MKTO_ActivityRecord_Validation" w="Workspace" sn="MKTO_ActivityRecord_Validation" cn="Marketo_DataProvider" u="False" ss="" tn="ActivityRecord" nmo="1" f="@recordCOUNT(5000) AND&#xD;&#xA;activityDateTime &gt; #Diagnostic_LowerLimitTime AND activityDateTime &lt; #Diagnostic_UpperLimitTime AND&#xD;&#xA;activityType in ('New Lead','Click Link','Visit Webpage','Interesting Moment','Open Email','Email Bounced Soft','Fill Out Form','Unsubscribe Email','Click Email')" ad="False" em="False" td="False" ic="" dd="" l="1000" tw="False" sr="50000" htw="24" mtw="60" emt="False" acd="False" mgf="False" eo="2" emd="False" eo_sftp="1">
            <ts>
              <t n="Diagnostic_LowerLimitTime" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_LowerLimitTime" m="0">
                <schemas />
                <specs />
              </t>
              <t n="Diagnostic_UpperLimitTime" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_UpperLimitTime" m="0">
                <schemas />
                <specs />
              </t>
            </ts>
            <mcs>
              <mc cn="activityDateTime" />
              <mc cn="activityType" />
              <mc cn="campaign" />
              <mc cn="foreignSysId" />
              <mc cn="foreignSysOrgId" />
              <mc cn="id" />
              <mc cn="mktgAssetName" />
              <mc cn="mktPersonId" />
              <mc cn="orgName" />
              <mc cn="personName" />
            </mcs>
          </rds>
          <rds n="MKTO_LeadRecord_Validation" w="Workspace" sn="MKTO_LeadRecord_Validation" cn="Marketo_DataProvider" u="False" ss="" tn="LeadRecord" nmo="1" f="id in #IDs" ad="False" em="False" td="False" ic="" dd="" l="1000" tw="False" sr="50000" htw="24" mtw="60" emt="False" acd="False" mgf="False" eo="2" emd="False" eo_sftp="1">
            <ts>
              <t n="IDs" t="2" qn="Q_Diagnostic_GetLeadRecordID" cn="MKTO_LeadRecord_ID" m="100">
                <schemas />
                <specs />
              </t>
            </ts>
            <mcs>
              <mc cn="Id" />
              <mc cn="__SCORE_DATE_FIELD__" />
              <mc cn="__SCORE_FIELD__" />
            </mcs>
          </rds>
        </rdss>
        <validationExtracts />
        <ces />
        <extractQueries />
        <extractQuerySequences />
        <leafExtracts />
        <launchExtracts />
        <jobs />
        <pdmatches />
        <leadscroings />
        <lssbardins />
        <lssbardouts />
        <lds />
        <ecs />
        <gCs />
      </group>
      '''
    elif type == 'ELQ':
      step1_xml = '''
          <group name="Diagnostic_LoadLeads" alias="Diagnostic_LoadLeads" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="richard.liu@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
      <schemas />
      <visiDBConfigurationWithMacros />
      <targetQueries />
      <targetQuerySequences />
      <rdss>
        <rds n="ELQ_Contact_Validation" w="Workspace" sn="ELQ_Contact_Validation" cn="Eloqua_Bulk_DataProvider" u="False" ss="" tn="Contact" nmo="1" f="@recordCOUNT(1000) AND&#xD;&#xA;(C_DateModified &gt; #Diagnostic_LowerLimitTime AND C_DateModified &lt; #Diagnostic_UpperLimitTime AND (__SCORE_DATE_FIELD__ &lt; #Diagnostic_RescoreThreshold OR __SCORE_FIELD__ = 0 ))" ad="False" em="False" td="False" ic="" dd="" l="1000" tw="False" sr="50000" htw="24" mtw="60" emt="False" acd="False" mgf="False" eo="2" emd="False" eo_sftp="1">
          <ts>
            <t n="Diagnostic_LowerLimitTime" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_LowerLimitTime" m="0">
              <schemas />
              <specs />
            </t>
            <t n="Diagnostic_UpperLimitTime" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_UpperLimitTime" m="0">
              <schemas />
              <specs />
            </t>
            <t n="Diagnostic_RescoreThreshold" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_RescoreThreshold" m="0">
              <schemas />
              <specs />
            </t>
          </ts>
          <mcs>
            <mc cn="C_DateCreated" />
            <mc cn="C_DateModified" />
            <mc cn="__SCORE_DATE_FIELD__" />
            <mc cn="__SCORE_FIELD__" />
            <mc cn="ContactID" />
          </mcs>
        </rds>
      </rdss>
      <validationExtracts />
      <ces />
      <extractQueries />
      <extractQuerySequences />
      <leafExtracts />
      <launchExtracts />
      <jobs />
      <pdmatches />
      <leadscroings />
      <lssbardins />
      <lssbardouts />
      <lds />
      <ecs />
      <gCs />
    </group>
    '''
    else:
      step1_xml = '''
      <group name="Diagnostic_LoadLeads" alias="Diagnostic_LoadLeads" w="Workspace" type="1" scheduleType="0" allowUserChangeScheduleType="False" visibleForEndUser="True" threshold="10000" launchExpiredDays="7" createdBy="richard.liu@lattice-engines.com" path="Diagnostic" autoGenerated="False" validationValidMinutes="120" autoClearOnFailure="False" mergeRulesSaved="True" ng="False">
        <schemas />
        <visiDBConfigurationWithMacros />
        <targetQueries />
        <targetQuerySequences />
        <rdss>
          <rds n="SFDC_Contact_Validation" w="Workspace" sn="SFDC_Contact_Validation" cn="SFDC_DataProvider" u="False" ss="" tn="Contact" nmo="1" f="LastModifiedDate&gt; #Diagnostic_LowerLimitTime_Contact AND LastModifiedDate&lt; #Diagnostic_UpperLimitTime_Contact AND ( __CONTACT_SCORE_DATE_FIELD__ &lt; #Diagnostic_RescoreThreshold_Contact OR __CONTACT_SCORE_DATE_FIELD__ = null ) AND @RecordCOUNT(1000)" ad="False" em="False" td="False" ic="" dd="" l="1000" tw="False" sr="50000" htw="24" mtw="60" emt="False" acd="False" mgf="False" eo="2" emd="False" eo_sftp="2">
            <ts>
              <t n="Diagnostic_LowerLimitTime_Contact" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_LowerLimitTime_Contact" m="0">
                <schemas />
                <specs />
              </t>
              <t n="Diagnostic_UpperLimitTime_Contact" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_UpperLimitTime_Contact" m="0">
                <schemas />
                <specs />
              </t>
              <t n="Diagnostic_RescoreThreshold_Contact" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_RescoreThreshold_Contact" m="0">
                <schemas />
                <specs />
              </t>
            </ts>
            <mcs>
              <mc cn="CreatedDate" />
              <mc cn="Id" />
              <mc cn="LastModifiedDate" />
              <mc cn="__CONTACT_SCORE_DATE_FIELD__" />
              <mc cn="__CONTACT_SCORE_FIELD__" />
            </mcs>
          </rds>
          <rds n="SFDC_Lead_Validation" w="Workspace" sn="SFDC_Lead_Validation" cn="SFDC_DataProvider" u="False" ss="" tn="Lead" nmo="1" f="LastModifiedDate&gt; #Diagnostic_LowerLimitTime_Lead AND LastModifiedDate&lt; #Diagnostic_UpperLimitTime_Lead AND ( __LEAD_SCORE_DATE_FIELD__ &lt; #Diagnostic_RescoreThreshold_Lead OR __LEAD_SCORE_DATE_FIELD__  = null ) AND @RecordCOUNT(1000)" ad="False" em="False" td="False" ic="" dd="" l="1000" tw="False" sr="50000" htw="24" mtw="60" emt="False" acd="False" mgf="False" eo="2" emd="False" eo_sftp="2">
            <ts>
              <t n="Diagnostic_LowerLimitTime_Lead" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_LowerLimitTime_Lead" m="0">
                <schemas />
                <specs />
              </t>
              <t n="Diagnostic_UpperLimitTime_Lead" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_UpperLimitTime_Lead" m="0">
                <schemas />
                <specs />
              </t>
              <t n="Diagnostic_RescoreThreshold_Lead" t="1" qn="Q_Diagnostic_ExtractLeadsRange" cn="Diagnostic_RescoreThreshold_Lead" m="0">
                <schemas />
                <specs />
              </t>
            </ts>
            <mcs>
              <mc cn="CreatedDate" />
              <mc cn="Id" />
              <mc cn="LastModifiedDate" />
              <mc cn="__LEAD_SCORE_DATE_FIELD__" />
              <mc cn="__LEAD_SCORE_FIELD__" />
            </mcs>
          </rds>
        </rdss>
        <validationExtracts />
        <ces />
        <extractQueries />
        <extractQuerySequences />
        <leafExtracts />
        <launchExtracts />
        <jobs />
        <pdmatches />
        <leadscroings />
        <lssbardins />
        <lssbardouts />
        <lds />
        <ecs />
        <gCs />
      </group>
      '''
    step1_xml = step1_xml.replace('__CONTACT_SCORE_DATE_FIELD__', sfdcContactScoreDateField)
    step1_xml = step1_xml.replace('__LEAD_SCORE_DATE_FIELD__', sfdcLeadScoreDateField)
    step1_xml = step1_xml.replace('__CONTACT_SCORE_FIELD__', sfdcContactScoreField)
    step1_xml = step1_xml.replace('__LEAD_SCORE_FIELD__', sfdcLeadScoreField)
    step1_xml = step1_xml.replace('__SCORE_DATE_FIELD__', scoreDateField)
    step1_xml = step1_xml.replace('__SCORE_FIELD__', scoreField)

    lgm.setLoadGroup(step1_xml)

    # Modified score/score-date fields of Diagnostic_LoadLeads_Bulk
    step1 = etree.fromstring(lgm.getLoadGroup('Diagnostic_LoadLeads').encode('ascii', 'xmlcharrefreplace'))

    step1.set('name', 'Diagnostic_LoadLeads_Bulk')
    step1.set('alias', 'Diagnostic_LoadLeads_Bulk')

    lgm.setLoadGroup(etree.tostring(step1))
    diag_rdss_xml = lgm.getLoadGroupFunctionality('Diagnostic_LoadLeads_Bulk', "rdss")

    if type == 'MKTO':
      diag_rdss_xml = re.sub(r' f=\"@.*?\"', ' f="@datediff(now, month(6)) AND&#xD;&#xA;activityType in (\'New Lead\','
                                             '\'Click Link\',\'Visit Webpage\',\'Interesting Moment\',\'Open Email\','
                                             '\'Email Bounced Soft\',\'Fill Out Form\',\'Unsubscribe Email\','
                                             '\'Click Email\')"',
                             diag_rdss_xml)
    elif type == 'ELQ':
      diag_rdss_xml = re.sub(r' f=\"@.*?\"',
                             ' f="@datediff(now, month(6)) AND (__SCORE_DATE_FIELD__ &lt; '
                             '#Diagnostic_RescoreThreshold OR __SCORE_FIELD__ = 0 )"',
                             diag_rdss_xml)
      diag_rdss_xml=diag_rdss_xml.replace('__SCORE_DATE_FIELD__ ', scoreDateField)
      diag_rdss_xml=diag_rdss_xml.replace('__SCORE_FIELD__ ', scoreField)

    elif type == 'SFDC':
      diag_rdss_xml = re.sub(r'<rds n=\"SFDC_Contact_Validation\".*f=\"@.*?\"',
                             ' f="@datediff(now, month(6)) AND ( __CONTACT_SCORE_DATE_FIELD__ &lt; '
                             '#Diagnostic_RescoreThreshold_Contact OR __CONTACT_SCORE_FIELD__ = null )"',
                             diag_rdss_xml)
      diag_rdss_xml.replace('__CONTACT_SCORE_DATE_FIELD__', sfdcContactScoreDateField)
      diag_rdss_xml.replace('__CONTACT_SCORE_FIELD__', sfdcContactScoreField)
      diag_rdss_xml = re.sub(r'<rds n=\"SFDC_Lead_Validation\".*f=\"@.*?\"',
                             ' f="@datediff(now, month(6)) AND ( __LEAD_SCORE_DATE_FIELD__ &lt; '
                             '#Diagnostic_RescoreThreshold_Contact OR __LEAD_SCORE_DATE_FIELD__ = null )"',
                             diag_rdss_xml)
      diag_rdss_xml.replace('__LEAD_SCORE_DATE_FIELD__', sfdcLeadScoreDateField)

    lgm.setLoadGroupFunctionality('Diagnostic_LoadLeads_Bulk', diag_rdss_xml)

    success = True

    return success
