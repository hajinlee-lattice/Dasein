package com.latticeengines.domain.exposed.datacloud.transformation.config.atlas;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.latticeengines.domain.exposed.datacloud.transformation.config.impl.TransformerConfig;

public class ExtractEmbeddedEntityTableConfig extends TransformerConfig {
    @JsonProperty("Entity")
    private String entity;

    // If EntityIds table (EntityName, EntityId) has multiple entities, we need
    // to filter EntityIds table by entity.
    // eg. In M28, EntityIds table generated by Contact match only has
    // EntityName = Account
    // In M29, EntityIds table generated by Transaction match might has
    // EntityName = Account & Contact (TBD)
    @JsonProperty("FilterByEntity")
    private boolean filterByEntity;

    @JsonProperty("SystemIdFields")
    private List<String> systemIdFlds;

    @JsonProperty("System")
    private String system;

    // EntityId field name in embedded entity table (EntityId field name in
    // EntityIds table is fixed as "EntityId")
    @JsonProperty("EntityIdField")
    private String entityIdFld;

    public String getEntity() {
        return entity;
    }

    public void setEntity(String entity) {
        this.entity = entity;
    }

    public boolean isFilterByEntity() {
        return filterByEntity;
    }

    public void setFilterByEntity(boolean filterByEntity) {
        this.filterByEntity = filterByEntity;
    }

    public List<String> getSystemIdFlds() {
        return systemIdFlds;
    }

    public void setSystemIdFlds(List<String> systemIdFlds) {
        this.systemIdFlds = systemIdFlds;
    }

    public String getSystem() {
        return system;
    }

    public void setSystem(String system) {
        this.system = system;
    }

    public String getEntityIdFld() {
        return entityIdFld;
    }

    public void setEntityIdFld(String entityIdFld) {
        this.entityIdFld = entityIdFld;
    }
}
