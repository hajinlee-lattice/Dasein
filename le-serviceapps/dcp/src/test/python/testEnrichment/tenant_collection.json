{
	"info": {
		"_postman_id": "f9d0b563-a356-4bf0-99d1-2b99b69d6166",
		"name": "GetSourceEntitlements",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DRTest-Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Login \", function () {",
							"    pm.response.to.have.status(200); // written to fail",
							"});",
							"",
							"if(pm.response.code !== 200) {",
							"    postman.setNextRequest(null)",
							"}",
							"",
							"console.log(pm.environment.get(\"tenantName\"))",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"var authorization = jsonData.Uniqueness + \".\" + jsonData.Randomness;",
							"pm.environment.set(\"token\", authorization);",
							"pm.environment.set(\"test\", \"valid\");",
							"for(i = 0; i < jsonData.Result.Tenants.length; i++){",
							"    if (jsonData.Result.Tenants[i].DisplayName == pm.environment.get(\"tenantName\")){",
							"        pm.environment.set(\"tenant\", JSON.stringify(jsonData.Result.Tenants[i]));",
							"    }",
							"}",
							"console.log(pm.environment.get(\"tenant\"))",
							"postman.setNextRequest(\"DRTest-AttachToTenant\");",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"user\", \"dcp_dev@lattice-engines.com\");",
							"pm.environment.set(\"testrail_id\", \"C287574\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Username\": \"{{user}}\",\n    \"Password\": \"Lattice124!\"\n}"
				},
				"url": {
					"raw": "{{plsUrl}}/pls/idaas-login",
					"host": [
						"{{plsUrl}}"
					],
					"path": [
						"pls",
						"idaas-login"
					]
				}
			},
			"response": []
		},
		{
			"name": "DRTest-AttachToTenant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Attached to tenant\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"/* pm.environment.set(\"source_id\", \"Source_oap0y5vh\"); */",
							"if(pm.response.code !== 200) {",
							"    postman.setNextRequest(null)",
							"}",
							"else {",
							"     postman.setNextRequest(\"GetEntitlementForSource\"); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{tenant}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{plsUrl}}/pls/attach",
					"host": [
						"{{plsUrl}}"
					],
					"path": [
						"pls",
						"attach"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetEntitlementForSource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"var domain = jsonData.domain;",
							"var newdomain = domain.replace('&','%26');",
							"console.log(newdomain);",
							"",
							"pm.environment.set(\"domain\", newdomain);",
							"pm.environment.set(\"recordType\", jsonData.recordType); ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					},
					{
						"key": "sourceid",
						"value": "Source_lta7ytzj",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{plsUrl}}/pls/enrichment-layouts/sourceId/Source_lta7ytzj",
					"host": [
						"{{plsUrl}}"
					],
					"path": [
						"pls",
						"enrichment-layouts",
						"sourceId",
						"Source_lta7ytzj"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetDataBlockEntitlement4Tenant",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"url": {
					"raw": "{{plsUrl}}/pls/data-blocks/entitlement?recordType={{recordType}}&includeElements=true&domainName={{domain}}",
					"host": [
						"{{plsUrl}}"
					],
					"path": [
						"pls",
						"data-blocks",
						"entitlement"
					],
					"query": [
						{
							"key": "recordType",
							"value": "{{recordType}}"
						},
						{
							"key": "includeElements",
							"value": "true"
						},
						{
							"key": "domainName",
							"value": "{{domain}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get Match Rule List",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{plsUrl}}/pls/matchrules/sourceId/:sourceId?includeArchived=false&includeInactive=false&mock=true",
							"host": [
								"{{plsUrl}}"
							],
							"path": [
								"pls",
								"matchrules",
								"sourceId",
								":sourceId"
							],
							"query": [
								{
									"key": "includeArchived",
									"value": "false"
								},
								{
									"key": "includeInactive",
									"value": "false"
								},
								{
									"key": "mock",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "sourceId",
									"value": "Source_mock1234",
									"type": "string"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 01 Jul 2020 16:14:31 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000 ; includeSubDomains"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "1; mode=block"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "vary",
							"value": "accept-encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"matchRuleId\": \"MatchRule_gowqjayo\",\n        \"sourceId\": \"Source_mock1234\",\n        \"displayName\": \"Match Rule 1\",\n        \"state\": \"ACTIVE\",\n        \"ruleType\": \"BASE_RULE\",\n        \"versionId\": 1,\n        \"exclusionCriterion\": [\n            \"NonHeadQuarters\",\n            \"OutOfBusiness\"\n        ],\n        \"acceptCriterion\": {\n            \"LowestConfidenceCode\": 8,\n            \"HighestConfidenceCode\": 10,\n            \"MatchGradePatterns\": [\n                \"AAZZABB\",\n                \"AAZZABF\",\n                \"AAZZABZ\"\n            ]\n        }\n    },\n    {\n        \"matchRuleId\": \"MatchRule_3mpm8yhq\",\n        \"sourceId\": \"Source_mock1234\",\n        \"displayName\": \"Match Rule 2\",\n        \"state\": \"ACTIVE\",\n        \"ruleType\": \"SPECIAL_RULE\",\n        \"matchKey\": \"Country\",\n        \"versionId\": 1,\n        \"allowedValues\": [\n            \"USA\",\n            \"UK\"\n        ],\n        \"exclusionCriterion\": [\n            \"NonHeadQuarters\",\n            \"Unreachable\"\n        ],\n        \"acceptCriterion\": {\n            \"LowestConfidenceCode\": 4,\n            \"HighestConfidenceCode\": 10,\n            \"MatchGradePatterns\": [\n                \"AAZZABB\",\n                \"AAZZABF\",\n                \"AAZZABZ\"\n            ]\n        }\n    }\n]"
				}
			]
		}
	],
	"variable": [
		{
			"key": "curr_time",
			"value": "{{$timestamp}}"
		}
	]
}