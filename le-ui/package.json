{
    "name": "le-ui",
    "description": "Converged Platform UI",
    "license": "ISC",
    "repository": {
        "type": "svn",
        "url": "https://lesvn.lattice.local/svn/lattice/LEDP/branches/develop/ledp/le-ui"
    },
    "engines": {
        "node": "4.2.1"
    },
    "version": "0.0.1",
    "dependencies": {
        "chalk": "1.1.3",
        "compression": "1.7.3",
        "concurrently": "^2.0.0",
        "cors": "2.8.1",
        "debug": "^2.6.1",
        "dotenv": "^6.0.0",
        "eslint": "^3.17.1",
        "express": "^4.13.4",
        "express-handlebars": "^3.0.0",
        "express-http-proxy": "0.10.0",
        "graceful-fs": "^4.1.6",
        "grunt": "1.0.3",
        "grunt-cli": "^1.2.0",
        "grunt-concurrent": "2.3.1",
        "grunt-contrib-sass": "1.0.0",
        "grunt-contrib-watch": "^1.0.0",
        "grunt-env": "^0.4.4",
        "grunt-run": "0.8.1",
        "helmet": "3.12.0",
        "http": "0.0.0",
        "http-proxy-middleware": "^0.17.4",
        "https": "^1.0.0",
        "jsonwebtoken": "^8.4.0",
        "morgan": "1.9.1",
        "node-sass": "^4.11.0",
        "nodemon": "^1.9.1",
        "request": "^2.69.0",
        "webpack": "1.13.3",
        "webpack-merge": "^4.1.4"
    },
    "resolutions": {
        "ajv": "6.8.1"
    },
    "scripts": {
        "install": "npm run InstallDev",
        "postinstall": "npm run build",
        "InstallProduction": "concurrently \"npm run InstallCommon\" \"npm run InstallLogin\" \"npm run InstallAtlas\" \"npm run InstallLPI\" \"npm run InstallInsights\" \"npm run InstallDante\" \"npm run InstallAdmin\"",
        "InstallDev": "concurrently \"npm run InstallDevCommon\" \"npm run InstallDevLogin\" \"npm run InstallDevAtlas\" \"npm run InstallDevLPI\" \"npm run InstallDevInsights\"  \"npm run InstallDevDante\" \"npm run InstallDevAdmin\"",
        "dev": "npm run sass && concurrently -kr \"grunt dev\" \"npm run sentry\"",
        "dev_admin": "npm run adminless && concurrently -kr \"grunt dev_admin\" \"npm run adminsentry\"",
        "devb_admin": "npm run adminless && concurrently -kr \"grunt devb_admin\" \"npm run adminsentry\"",
        "devb": "npm run sass && concurrently -kr \"grunt devb\" \"npm run sentry\"",
        "local": "grunt newlocal",
        "local2": "npm run sass && concurrently -kr \"grunt local2\" \"npm run sentry\"",
        "local_admin": "npm run adminless && concurrently -kr \"grunt local_admin\" \"npm run adminsentry\"",
        "newdev": "grunt newdev",
        "newdevb": "grunt newdevb",
        "qa": "grunt qa",
        "qadev": "grunt qadev",
        "prod": "grunt prod && npm run wpbuild",
        "proddev": "grunt proddev",
        "devallnowatch": "grunt devallnowatch",
        "build": "concurrently \"npm run dantebuild\" \"npm run adminbuild\" && npm run wpbuild",
        "sass": "concurrently \"npm run dantesass\"",
        "sentry": "concurrently \"npm run dantesentry\"",
        "precommit": "npm run lint_admin",
        "lint": "eslint Gruntfile.js app.js server/**/*.js",
        "//": "individual projects",
        "InstallCommon": "cd projects/common/ && npm install --production",
        "InstallAtlas": "cd projects/atlas/ && npm install --production",
        "InstallLPI": "cd projects/lpi/ && npm install --production",
        "InstallInsights": "cd projects/insights/ && npm install --production",
        "InstallDante": "cd projects/dante/ && npm install --production",
        "InstallLogin": "cd projects/login/ && npm install --production",
        "InstallAdmin": "cd projects/tenantconsole/ && npm install",
        "InstallDevCommon": "cd projects/common/ && npm install",
        "InstallDevAtlas": "cd projects/atlas/ && npm install",
        "InstallDevLPI": "cd projects/lpi/ && npm install",
        "InstallDevInsights": "cd projects/insights/ && npm install",
        "InstallDevDante": "cd projects/dante/ && npm install",
        "InstallDevLogin": "cd projects/login/ && npm install",
        "InstallDevAdmin": "cd projects/tenantconsole/ && npm install",
        "dantebuild": "cd projects/dante/ && grunt build",
        "adminbuild": "cd projects/tenantconsole/ && grunt build",
        "dantesass": "cd projects/dante && grunt sass:dev",
        "adminless": "cd projects/tenantconsole/ && grunt less:dev",
        "dantesentry": "cd projects/dante/ && grunt sentry",
        "adminsentry": "cd projects/tenantconsole/ && grunt sentry",
        "lint_admin": "cd projects/tenantconsole/ && grunt lint || true",
        "wp-loginbuild": "cd projects/login/ && npm run build",
        "wp-loginbuilddev": "cd projects/login/ && npm run builddev",
        "wp-logindev": "cd projects/login/ && npm run watch",
        "wp-atlasdev": "cd projects/atlas/ && npm run watch",
        "wp-atlasprod": "cd projects/atlas/ && npm run build",
        "wp-atlasbuilddev": "cd projects/atlas/ && npm run builddev",
        "wp-lpidev": "cd projects/lpi/ && npm run watch",
        "wp-lpiprod": "cd projects/lpi/ && npm run build",
        "wp-lpibuilddev": "cd projects/lpi/ && npm run builddev",
        "wp-insightsbuild": "cd projects/insights/ && npm run build",
        "wp-insightsbuilddev": "cd projects/insights/ && npm run builddev",
        "wp-insightsdev": "cd projects/insights/ && npm run watch",
        "wp-storybookdev": "cd projects/uicomponents/ && npm run dev-uicomponents",
        "wp-components-testdev": "cd projects/common/ && npm run dev-test",
        "wpdeva": "concurrently \"npm run wp-logindev\" \"npm run wp-atlasdev\" \"npm run wp-lpidev\" \"npm run wp-insightsdev\" \"node bin/devsetup env=a\"",
        "wpdevb": "concurrently \"npm run wp-logindev\" \"npm run wp-atlasdev\" \"npm run wp-lpidev\" \"node bin/devsetup env=b\"",
        "wpdevproduction": "concurrently \"npm run wp-logindev\" \"npm run wp-atlasdev\" \"npm run wp-lpidev\" \"node bin/devsetup env=production\"",
        "dev-uicomponents": "concurrently \"npm run wp-components-testdev\" \"npm run wp-storybookdev\"",
        "build-dev-uicomponents": "cd projects/uicomponents/ && npm run build-uicomponents",
        "build-uicomponents": "cd projects/uicomponents/ && npm install && npm run build-uicomponents",
        "wpdevlocal": "concurrently \"npm run wp-logindev\" \"npm run wp-atlasdev\" \"node bin/devsetup env=local\"",
        "wpproduction": "npm run wpbuild && npm run nodeproduction",
        "wpproddev": "npm run wpbuilddev && npm run nodeproductiondev",
        "wpqa": "concurrently \"npm run wp-logindev\" \"npm run wp-atlasdev\" \"node bin/devsetup env=qa\"",
        "nodea": "node bin/devsetup env=a",
        "nodeb": "node bin/devsetup env=b",
        "nodeproduction": "node bin/devsetup env=production",
        "nodeproductiondev": "node bin/devsetup env=proddev",
        "wpbuilddev": "concurrently \"npm run wp-loginbuilddev\" \"npm run wp-atlasbuilddev\" \"npm run wp-lpibuilddev\" \"npm run wp-insightsbuilddev\"",
        "wpbuild": "concurrently \"npm run wp-loginbuild\" \"npm run wp-atlasprod\" \"npm run wp-lpiprod\" \"npm run wp-insightsbuild\""
    },
    "devDependencies": {}
}
