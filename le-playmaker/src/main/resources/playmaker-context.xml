<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

   <import resource="classpath:proxy-context.xml" />
    
    <context:component-scan base-package="com.latticeengines.playmaker">
        <!-- Need to exclude instantiating the swagger config except for bringing up the API
             since the servlet container instances are not available when running tests. -->
        <context:exclude-filter type="assignable" expression="com.latticeengines.playmaker.swagger.SwaggerConfig" />
    </context:component-scan>

    <import resource="classpath:db-context.xml"/>
    <import resource="classpath:datadb-context.xml"/>
    <import resource="classpath:playmaker-persistence-context.xml" />
    <import resource="classpath:playmaker-aspects-context.xml" />
    <import resource="classpath:playmakercore-context.xml" />
    <import resource="classpath:oauth2db-context.xml" />
    <import resource="classpath:oauth2db-auth-mgr-context.xml"/>
    <import resource="classpath:monitor-metric-context.xml"/>
    <import resource="classpath:quartzclient-context.xml"/>

    <bean id="setEnvironmentService" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="com.latticeengines.common.exposed.bean.BeanFactoryEnvironment"/>
        <property name="targetMethod" value="setService"/>
        <property name="arguments">
            <list>
                <value>playmaker</value>
            </list>
        </property>
    </bean>

    <mvc:interceptors>
        <bean class="io.opentracing.contrib.spring.web.interceptor.TracingHandlerInterceptor">
            <constructor-arg ref="tracer"/>
        </bean>
    </mvc:interceptors>

    <bean id="tracingFilter" class="io.opentracing.contrib.web.servlet.filter.TracingFilter">
        <constructor-arg ref="tracer"/>
    </bean>

    <bean id="batonService" 
        class="com.latticeengines.baton.exposed.service.impl.BatonServiceImpl"/>
    <mvc:interceptors>
        <bean class="com.latticeengines.playmaker.util.LoggerInterceptor"/>
    </mvc:interceptors>
</beans>
