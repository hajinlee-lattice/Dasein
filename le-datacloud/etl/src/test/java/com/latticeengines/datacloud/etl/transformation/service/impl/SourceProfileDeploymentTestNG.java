package com.latticeengines.datacloud.etl.transformation.service.impl;

import static com.latticeengines.domain.exposed.datacloud.DataCloudConstants.TRANSFORMER_MATCH;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import org.apache.avro.generic.GenericRecord;
import org.apache.avro.util.Utf8;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.tuple.Pair;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.latticeengines.common.exposed.util.JsonUtils;
import com.latticeengines.datacloud.core.entitymgr.SourceAttributeEntityMgr;
import com.latticeengines.datacloud.core.source.Source;
import com.latticeengines.datacloud.core.source.impl.AccountMaster;
import com.latticeengines.datacloud.core.source.impl.GeneralSource;
import com.latticeengines.datacloud.core.util.HdfsPathBuilder;
import com.latticeengines.datacloud.etl.transformation.transformer.impl.SourceProfiler;
import com.latticeengines.domain.exposed.camille.CustomerSpace;
import com.latticeengines.domain.exposed.datacloud.DataCloudConstants;
import com.latticeengines.domain.exposed.datacloud.dataflow.BitDecodeStrategy;
import com.latticeengines.domain.exposed.datacloud.dataflow.BooleanBucket;
import com.latticeengines.domain.exposed.datacloud.dataflow.BucketAlgorithm;
import com.latticeengines.domain.exposed.datacloud.dataflow.CategoricalBucket;
import com.latticeengines.domain.exposed.datacloud.dataflow.DiscreteBucket;
import com.latticeengines.domain.exposed.datacloud.dataflow.IntervalBucket;
import com.latticeengines.domain.exposed.datacloud.manage.Column;
import com.latticeengines.domain.exposed.datacloud.manage.SourceAttribute;
import com.latticeengines.domain.exposed.datacloud.manage.TransformationProgress;
import com.latticeengines.domain.exposed.datacloud.match.MatchInput;
import com.latticeengines.domain.exposed.datacloud.match.MatchKey;
import com.latticeengines.domain.exposed.datacloud.match.UnionSelection;
import com.latticeengines.domain.exposed.datacloud.transformation.configuration.impl.MatchTransformerConfig;
import com.latticeengines.domain.exposed.datacloud.transformation.configuration.impl.PipelineTransformationConfiguration;
import com.latticeengines.domain.exposed.datacloud.transformation.configuration.impl.ProfileConfig;
import com.latticeengines.domain.exposed.datacloud.transformation.step.SourceTable;
import com.latticeengines.domain.exposed.datacloud.transformation.step.TransformationStepConfig;
import com.latticeengines.domain.exposed.propdata.manage.ColumnSelection;
import com.latticeengines.domain.exposed.propdata.manage.ColumnSelection.Predefined;
import com.latticeengines.domain.exposed.security.Tenant;

public class SourceProfileDeploymentTestNG extends PipelineTransformationTestNGBase {
    private static final Logger log = LoggerFactory.getLogger(SourceProfileDeploymentTestNG.class);

    private static final long RAND_SEED = 0L;
    private static final String ENRICH_PROFILE = "EnrichProfile";
    private static final String MATCH_SEGMENT_PROFILE = "MatchSegmentProfile";

    private GeneralSource source = new GeneralSource(MATCH_SEGMENT_PROFILE);
    private GeneralSource enrichProfile = new GeneralSource(ENRICH_PROFILE);

    @Autowired
    private AccountMaster am;

    private static final String CUSTOMER_TABLE_NAME = "CustomerTable";
    GeneralSource customerTable = new GeneralSource(CUSTOMER_TABLE_NAME);

    private static final String MATCH_TABLE_NAME = "Fortune1000";
    GeneralSource matchTable = new GeneralSource(MATCH_TABLE_NAME);

    @Autowired
    private SourceAttributeEntityMgr srcAttrEntityMgr;

    private static final String DATA_CLOUD_VERSION = "2.0.5";
    private static final String DATA_CLOUD_VERSION_MATCH = "2.0.6";

    private ObjectMapper om = new ObjectMapper();

    @Test(groups = "deployment")
    public void testTransformation() {
        prepareAM();
        prepareMatch();
        TransformationProgress progress = createNewProgress();
        progress = transformData(progress);
        finish(progress);
        confirmIntermediateSource(enrichProfile, null);
        confirmIntermediateSource(source, null);
        confirmResultFile(progress);
        cleanupProgressTables();
    }

    @Override
    protected String getTargetSourceName() {
        return source.getSourceName();
    }

    @Override
    protected Source getSource() {
        return source;
    }

    @Override
    protected String getPathToUploadBaseData() {
        return hdfsPathBuilder.constructSnapshotDir(source.getSourceName(), targetVersion).toString();
    }

    @Override
    protected PipelineTransformationConfiguration createTransformationConfiguration() {
        PipelineTransformationConfiguration configuration = new PipelineTransformationConfiguration();
        configuration.setName("SourceProfiling");
        configuration.setVersion(targetVersion);

        TransformationStepConfig step0 = new TransformationStepConfig();
        List<String> baseSources = new ArrayList<>();
        baseSources.add(am.getSourceName());
        step0.setBaseSources(baseSources);
        step0.setTransformer(SourceProfiler.TRANSFORMER_NAME);
        step0.setTargetSource(enrichProfile.getSourceName());
        String confParamStr0 = getEnrichProfileConfig();
        step0.setConfiguration(confParamStr0);

        TransformationStepConfig step1 = new TransformationStepConfig();
        SourceTable sourceTable1 = new SourceTable(matchTable.getSourceName(),
                CustomerSpace.parse(DataCloudConstants.SERVICE_CUSTOMERSPACE));
        List<String> baseSources1 = Collections.singletonList(matchTable.getSourceName());
        step1.setBaseSources(baseSources1);
        Map<String, SourceTable> baseTables1 = new HashMap<>();
        baseTables1.put(matchTable.getSourceName(), sourceTable1);
        step1.setBaseTables(baseTables1);
        step1.setTransformer(TRANSFORMER_MATCH);
        step1.setConfiguration(getMatchConfig());

        TransformationStepConfig step2 = new TransformationStepConfig();
        List<Integer> inputSteps = new ArrayList<>();
        inputSteps.addAll(Collections.singletonList(1));
        step2.setInputSteps(inputSteps);
        step2.setTransformer(SourceProfiler.TRANSFORMER_NAME);
        step2.setTargetSource(source.getSourceName());
        String confParamStr2 = getMatchSegmentProfileConfig();
        step2.setConfiguration(setDataFlowEngine(confParamStr2, "TEZ"));

        // -----------
        List<TransformationStepConfig> steps = new ArrayList<TransformationStepConfig>();
        steps.add(step0);
        steps.add(step1);
        steps.add(step2);

        // -----------
        configuration.setSteps(steps);
        configuration.setVersion(HdfsPathBuilder.dateFormat.format(new Date()));
        configuration.setKeepTemp(true);
        return configuration;
    }

    private String getEnrichProfileConfig() {
        ProfileConfig conf = new ProfileConfig();
        conf.setNumBucketEqualSized(false);
        conf.setBucketNum(4);
        conf.setMinBucketSize(2);
        conf.setRandSeed(RAND_SEED);
        conf.setStage(DataCloudConstants.PROFILE_STAGE_ENRICH);
        conf.setMaxCat(10);
        conf.setMaxCatLength(20);
        conf.setDataCloudVersion(DATA_CLOUD_VERSION);
        return JsonUtils.serialize(conf);
    }

    private String getMatchConfig() {
        MatchTransformerConfig config = new MatchTransformerConfig();
        MatchInput matchInput = new MatchInput();
        matchInput.setTenant(new Tenant(DataCloudConstants.SERVICE_CUSTOMERSPACE));
        UnionSelection us = new UnionSelection();
        Map<Predefined, String> ps = new HashMap<>();
        ps.put(Predefined.Segment, "2.0");
        ColumnSelection cs = new ColumnSelection();
        List<Column> cols = Arrays.asList(new Column(DataCloudConstants.ATTR_LDC_DOMAIN),
                new Column(DataCloudConstants.ATTR_LDC_NAME));
        cs.setColumns(cols);
        us.setPredefinedSelections(ps);
        us.setCustomSelection(cs);
        matchInput.setUnionSelection(us);
        matchInput.setKeyMap(getKeyMap());
        matchInput.setDataCloudVersion(DATA_CLOUD_VERSION_MATCH);
        matchInput.setSkipKeyResolution(true);
        matchInput.setSplitsPerBlock(40);
        config.setMatchInput(matchInput);
        return JsonUtils.serialize(config);
    }

    private String getMatchSegmentProfileConfig() {
        ProfileConfig conf = new ProfileConfig();
        conf.setNumBucketEqualSized(false);
        conf.setBucketNum(4);
        conf.setMinBucketSize(2);
        conf.setRandSeed(RAND_SEED);
        conf.setMaxCat(10);
        conf.setDataCloudVersion(DATA_CLOUD_VERSION_MATCH);
        return JsonUtils.serialize(conf);
    }

    private Map<MatchKey, List<String>> getKeyMap() {
        Map<MatchKey, List<String>> keyMap = new TreeMap<>();
        keyMap.put(MatchKey.Domain, Collections.singletonList("Domain"));
        return keyMap;
    }

    private Object[][] amData = new Object[][] { //
            { 1L, "name1", "dom1.com", 79, 79L, 79F, 79D, null, "TestCat1", null, null, true, true, true, null, null,
                    null,
                    "AACbAAAAqQAAAAAAAAAAAAAAALIAAAAAAAAAAKUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAAvgCwAAAAALAAAAAAmgCfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClAAAAAJAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAALYAALEAAAAAAAAAAACvAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAALAAtQAAAACwALAAAAAAAAAAAAAAAAAArwC4AAAAAAAAAAAAAAAAAAAAsACwAKkAAACvAAAAAACnAAAAAAAAALAAAAAAAKkAAAAAALYAAAAAAACxAAAAAACwAAAAAAAAAAAAAAAArQAAALIAAAAAALUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJcAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAKmxAAAAAAAAAKcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAsAAAAAAAAACyALUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAACvAAAAsAAAAACoAI61AMQAALa1AAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAACvwgCXtKgAsAAAAAAAAKexAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAArQAAAAAAAAAAAACxrLKtAAAAmgAAAACuAAAAAAC5AAAAAAAAsLAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAACeAAAAAAAAAAAAALUAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAALEAAAAAAKwA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",
                    "LONGLONGLONGLONGLONGLONGLONGLONGLONG", 1, 1L, 1.0F, 1.0 }, //
            { 2L, "name2", "dom2.com", 15, 15L, 14.89482594F, 14.89482594D, "TestCat", "TestCat2", null, null, true,
                    true, true, null, null, null,
                    "AAAAAAAAqAAAAK8AAAAAAAAAAAAAAAAAAAC4AKkAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAACmAAAAAAAAAAAAAACwAAAAAACtrQCzAAAAsAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAACkAAAAAAAAAAAAwgAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAL4AAK0AAKcAAACYAAAAAAAArQAAAAAAAAAAAAAAAAAAAACsALEAAKwAtQAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAALkAtQAAqwAAAAAAAAAAAJcAAK4AAKUArgClAACtrQCwAACtAAAAAAAAAAAAAAAAAAAAAAAAmAAAAAAAAK0AAAAAAAAAAAAAsQCpAAAAAAAAAAAAlgCdAAAAAAAAAAAAAAAAAACmAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAACpAAAAALAAAACimLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAArgCvAACvr68AAAAAmAAAAKytAAAAAJoAAAAAAAAAAAAAAAAAAAAAAACiAAAAAK0AAAAAAJaoAAAAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAr68AAACRrbEAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCvAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAAAAAAAAAAAAAAAAAACvAAAAAK0AAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAsLAApAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArq-uAAAArwAAALQAAAAAAAAArQAAr6wAAAAAAAAAAAAAogAAAAAAAACuAAAAALMAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAALCoAAAAAAAAAAAAAKIArQAAAK0AAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAK0AAAAAAAAAAAAAAAAAAACWAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAr5gAAACtAAAAsQAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAswAAAAAAAAAAAAAAAACvmK0ArQAAAAAAAK2sAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAK8AAAAAAAAAAAAAAJwAAKoAAKYArqgAAAAAAAAAAAAAAACuAJgAmgAAAAAAAACtAAAAAAAAAK0ArAAAAAAAAAAAAAAAAAAAAAAAAAAAALEArQAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAAAALsAAAAAAAAAAAAAAAAAALAArwCzAAAAAACPAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAJexAAAAAAAAALAArwAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAAAAC1AADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAAAAAAAAAAAAsa-xAACxsLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAACWpQAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAK0ArAAAAAAAAAAAALEAAACuALgAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAC4AMUAAACsAAAAAACzAAAAAAAAAAAAAAAAmQAAAAAAAI0AAAAAAAAAAACsAKwAAAAAAAAAAK8AAAAAAAAArQAAAAAAtAAAAAAArQAAALgAAAAAlgAAAAAAAAAAAAAAAACvAACslrUAAAAAAAAAAAAAAAAAtAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAvgAAAAAAAAAAAAAAtQCsAACvrwCpAAAAAACtAAAArgAAAAAArQAAAAAAAAAAAAAAAAAAAADGAAAAAAAArgAAAAAAAAAAAMcAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAogAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAArQAAsAAArgAAAAAAAAAAAACaAAAAAAAAsAAAAAAAAAAAAAAAAACzAAAArwCsALuvAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAK4AAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAALAAAAAArQAAAACqAAAAAAAAAAAAAAAAAACtpQAAAAAArwAAAAAAALCurQAAAK8AAAAAAAAAAAAAAAAAAACwAAAAmAAAAK0AAAAAAAAAAAAAAAAAAAAAAJcAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAACYAAAAAACsAAAAAACqrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6AAAAAAAAAKytAAAAAAAAAACor6gAAACtAAAAAAAAvwAAAAAArcoAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAACyAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAACvAAAAAK0AAAAAAAAAAACtAACXAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAK0AAAAAAAAAAAAAAACtAAAAAAAAAAAAsACvAAAAAACuAMEAAAAAAAAAAAAAAAAAAAAAAJAAsQAAAAAAAAAAqQAAALgAtQAAra0AAAAArAAAAAAAAAAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAKYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJasAAAAAKwAAAAAAAAAAAC4rwAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAACuAACsAAAAAAAAAAAAAAAAAAAAALA",
                    null, 2, 2L, 2.0F, 2.0 }, //
            { 3L, "name3", "dom3.com", -5, -5L, -5F, -5D, "TestCat2", "TestCat3", null, null, true, true, true, null,
                    null, null,
                    "AAC0AAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAKutAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAqwCrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAyACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAArwAAAACuAAAAAAAAAAAAAACrAAAAAAAAsAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr68AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlQAAAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAAAAAAClAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAApAAAAAAAAAAAAAAAAAAAAAAAAJ0AAAAAqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAK-vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmra0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0ALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAxAAAAAAAAAAAAAAAAAAAqwAAAAAAAACpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAAAAsQAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAKk",
                    null, 3, 3L, 3.0F, 3.0 }, //
            { 4L, "name4", "dom4.com", 2, 2L, 2F, 2D, "TestCat", "TestCat4", null, null, true, true, true, null, null,
                    null,
                    "AAAAAAAAAAAAALwAAAAAAAAAsgAAAAAAAAAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAAAAAAsgAAAMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL-0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAnAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAALYAAAC2tqoAAKQAAAAAAAAAsQAAAACbAAAAAAC2AAAAAAAAAAAAAAAAtAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAugAAuKcAAAAAAAAAAAAAAACiowAAAAAAAAAAwLgAAAAAAAAAAAAApwAAv48AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAAAAAAAAAAAAAAAAAAAAAAAAANQAAAAAAAAAAAAAAAAAAAAAAACxAAAAuAAAAAAAALfHAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAACxtgC4AAAAAAAAAAAAAM4AAAAAALEAAAAAAAAAAAAAAAAAAL8AuwC7rMgAAAAAswAAAAAAAAAAAAAAAACyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp68AALgAsAAAALoAAAAAAAAAAKkAALQAAAAAAAAAAAAAsADCAAAAAK8AAAC5AIoAAAChAAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAJIAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAsAAAAAAAmgAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAALYAALAAAAAAtgAAAAAAALgAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArsUAAAAAAAAAAAAAsAAAAAAAAKixAAAAAAC2AAAAAAAAAAAAAAAAAACvAAAAAAAAALHKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAAvwAAAAAAAAAAAACzAAAAAMQAtgCrAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuALoAAAAAAAAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAAAwwAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAALIAAAAAAAAAAAAArgAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAACrAAAAAAAAAAAAAAAAAMEAwwAAvQAAAAAAAAAAAAAAAAAA4QAAAAAAAAAAAAAAyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn8EAAL4AAL24vwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAtwDHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKEAAAAAAACrAAAAAAAAAAC2AAAAAAAAAAAAnwCzqAAAAAAAAMcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAyMQAAACxAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAygAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAACcAAAAAAAAywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAAAAAKMAAACnAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKAAAAAAAAAAAAAAAAAACeAAAAAAAAAAAAAAAAAL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAAxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlgAAAAAAAAAAzQAAAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAADHAAAAAKYAAAAAAAAAAAAAALUAAAAAAAAAAAAAAAAAAK6zrwAAAAAAwgAAAAAAAAAAAMUAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnwAAAAAAugAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQC1AAAAAAAAAAAAAAAAAAAAAMC2AAAAAAAAAAAAAK-g",
                    null, 4, 4L, 4.0F, 4.0 }, //
            { 5L, "name5", "dom5.com", -2, -2L, -2.40582905F, -2.40582905D, null, "TestCat5", null, null, true, true,
                    true, null, null, null,
                    "AAAAAAAAqgAAtwAAAAAAAAAAAAAArgAAAACwAKsAAAAAAAAAAACvAK0AAAAAAAAAAAAApQAAAADMrQAAAAAAAAAArwAAAAAAlwChk7-vAAAAAACasQAAAAAAAAAAAAAAAAAAAAC8uAAAAAAAAAAAAAAAsQAAus-trgAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAACwAK4AAAAAAAAAAAC8AAAAAAAAAAAAygAAsAAAAAAAAAAAAAAAAAAAAAAAAACvAJ8AsAAAAKoAAAC1AAAAAAAAAAAAAAAAAKUAAAAAALUAAAAArwCWqQAAAAAAAK0AAAAAAAAAAAAAAACjAAAAAAAAvLUApgC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAogAAAAAAAAAAAAAAAAAAAAAA0wAAAAAAAAAAyrGxAAAAAACrAAAAAAAAALkAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAALcAsgAAAAAAAAAAAAAApwCzAAAAAAAAxQAAAAAAAAAAAJsAAACvAAAAAACkAAAAuQAAAAAAAKGwAK0AAAAAAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAACuAAAAAAAAlqQAmwDFAAAAALcAAAAAAACtAAAAAK8AAAAAAAAAtbAAAAAAAAAAAAAAAAAAlwAAAAAAAAAAAADEAAAAAKgAAAAAAMOlAAAAAAAAAAAArrEAAAAAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAAALEAALAAuMMAAAAAANUAAAAAAAAAAAAAAAAAAAAApQAAm8AAAAAAAAC9AACtAACvrgAAAAAAAAAAAAAAAAAAAACeoAAAAAAAAAAAAAAAAAAAAKgAAAC3AAAAmAAAANkAAAAAAAAAutG1rQAAAAAAAAAAAAAArQCWAAAApQAAAACMAAAArwC8sQAAtQAAAAAAAACnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AALIAAAC1AAAAAACmAKnEAAAAAAAAAAAAt7wAtrcAAAAAALeurgAAAAAAAAAAAAAAAAAArQAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANEAmAAAAAAAAK4AysIAAAAAAAAArQAAAAAAtwAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAC2t7oAAAAAAAC8AMQAAAAAAAAAALsAAAAAqQC0AACwAAAAAAAAAAAAAAAAAAAAAAAAt6QAAAAAAAAAAACwAADJAAAAAAAAAAAAAAAArwAAAAAAAAAApwAAAAAAAAAAAAAAAAAAAAAAAAAAAK2zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAsgAAmQAAAAAAAK6tAMaxscjEAAAAAAAAygAAt66vAAAAqwAArQAAAACKpwAAAAAAAAAAvQAAAAAAAAAAAAAAALEAAAAApQAAAAAAAACvAAAAAAAAAKMAAAAArQAAAAAArQAAAAC-AKsAAAAAAAAAAAAAuQAAAAAAALYAwa2vAAAAAAAAAAAAAAAAAKsAAAAAAAAAALMAp6wAAAAAAAAAAAAAAAAAAAAAAAAAAACpAAAAuQAAAAAAAAAAAAAAAAAAAMYAAAAAAAAAAADIAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAAAAAAACuAKQAAAAAAAAAwqMAAAAAAAAAtADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAACuxAAArwC5AAAAAAC6ALaWALW1AAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJsAtwAAvQAAAAAAALi3sAClAAAAAAAAAAAAAAAAlgAAAAAAAAAAAADPAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKbCAAAAAK8AAAAAAAAAAAAAALAAAAAAALMAAAAAAAAAuwAAAAC0AJMAAAAAAAAAAACtowAAAAAAAAAAAAAAzwCtAAAAALgAAAAAAK22nAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAvqcAAAAAAACuAAAAAAAAtwAAAAAAAAAAAAAAAK8AAKoAAJ0Aqbacqq8AAAAAAAAAxgAAAAAAAAAAALAAAAC0ALAAAAAAAAAAAAAAAAAAAK4AAAAAsAAAAAAAAAC3AAAAAAAArQAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAACvrgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAALUAAK8ArwAAAAAAAAAAAAC3AAAAAAAAAAC0AACwALcAAK8AAAAApgAAzgAAAAAAAAAAALsAAACrrQAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAAAkQAAAAAAAJe3AAAAAAAAswAArq0AALrDAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAANUArQAAAAAAAAAAANIAAL8AAAAAAAAAAACoxAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAJoAAAAAAAAAAAAAvAAAAKsAAAAAAACyAAAAAAAAAAC1AAAAALAAAAAAAAAAAAAApwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALUAugAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwAAAK21r8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuq8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAALUAAACcAAAAAAAAAAAAAAAAAAAAAKMAuAAAAAAAsAAAAAAAAAAAAAAAAAAAAAC8AAAAAAAAAAAAAAAAswAAswAAAACtAAAAAAAAAAAAALSwAAAAsAAAAKwAAAAAAAAAAACylgAAAAAAAAAAqwAAtwAAAAAAALYA3QAAAAAAAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANIAAAAAAAAAAAAAAAAAAAAAAAAAt5sAAAC1AAAAAAAAAAAAAAAAAAC-AAAAAAAAn60AAACzAAAAAAAAvQAAAAAAAAAAAACztgC_rgAAAAAApQCvmgAAqwCXAACyAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtZcAAAAAAAAArQAAAAAAAAAAAKSXAAAAAAAAAAAAAAAAAACxtgAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAC4AAAAALGpAAAAALu3AAAArQAAAAAAAAAAALQAAAAAAAAAAAAAqQAAAADDAAAAAAAAAAAAtJoAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAyQAAAAAAwAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAACfAAAAAAAArAAAAAAAtw",
                    null, 5, 5L, 5.0F, 5.0 }, //
            { 6L, "name6", "dom6.com", 9162, 9162L, 9162F, 9162D, null, "TestCat6", null, null, true, true, true, null,
                    null, null,
                    "AAC2AAAAAAAAAAAAAAAAAAC6AAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrtQAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAACvAL8AAAAAAAAAAAAAAAAAAAAArQAAAADIAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAApwAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAuwAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAk74AAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnAAAAAAAAAAAAAACtAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0",
                    null, null, null, null, null }, //
            { 7L, "name7", "dom7.com", 0, 0L, 0F, 0D, "TestCat1", "TestCat7", null, null, true, true, true, null, null,
                    null,
                    "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",
                    null, null, null, null, null }, //
            { 8L, "name8", "dom8.com", 1, 1L, 1F, 1D, null, "TestCat8", null, null, true, true, true, null, null, null,
                    "AACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAK8AAK8ArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAtwAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ0AAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAKwAAAAAAAAAAJ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAsKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAACsnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAAKwArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnwAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwAAtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8",
                    null, null, null, null, null }, //
            { 9L, "name9", "dom9.com", 2, 2L, 2F, 2D, "   ", "TestCat9", null, null, true, true, true, null, null, null,
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlgAAAAAAAAAAAAAAALoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAsAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAL0AAAAAAAAAAAAAAAAAAACiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAugAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAALoArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKMAAAAAAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLUAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIAAK0AAAAAmQAAAAAAAACuAAAArgAAAAAAAAAAAAAAAAAAwAAAAACsugAAAACuAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAALoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAK4AAAAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALMAAAAAAAAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAArgAAAK4AAAAAzwAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBAAAAAAAAAAAAAAAAAADHAAAAAAAAAAAAALIAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAAsQAAAAAAALwAAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAArgAAAAAAAAAAsLkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQAAAAAApAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAK4AAAAAAAAAAAAAAAAAAAAArQAAAAAAvwCsqgAAtQAAsAAAAAAAAAAArQAAAAAAAK0AAAAAAAAAAACfAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAArp8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAAAAAAACtAAAAsQAAAAAAugAAAAAAAAAAuwAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAADFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAra0AAAAAAAAAAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAC7AADHsgAAAAAAAAAAAAAAAAAAAK64AAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAAAALMAAAAAnQAAAAAAAAAAAAAAAAAAsgAAwAAAAAAAAAAAAAAApgAAAAAAAKwAAAAAAAAAAAAAAAAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArg",
                    null, null, null, null, null }, //
            { 10L, "name10", "dom10.com", 2, 2L, 2.12F, 2.12D, "   TestCat ", "TestCat10", null, null, true, true, true,
                    null, null, null,
                    "AAAAAAAAAAAAAAAArQAArQAAAAAAAAAAAAAAAJ7JAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAsgAAsQCwuAAAAAAAAAAAAAAAAAC7AAAAAAAAAAClAAAAAAAAAAAArbEAr60AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwAAAAAAAAAAAAAAALEAAAAAAK8AAAAAjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApwAAAAAAwAAAAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAsQAAAAAAAACtrwAAAADBAAAAAACrAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAC4AAAAAAAAAAAAAACsAK8AAAAAAAAArwAAlQAAswAArwAAAAAAAAAAuAAAAAAAAAAAAACvrgAAAAAAAAAAsLEAAAAAAM0AAAC1AK8AAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQCvAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAKoAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AALkAAK4AAAAAAAAAAAAAAAAAAAAArgAAqboAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAywAAAAAAAAAAAAAAAAAApQCtAAAAAAAAAACeALAAAAC1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgCxAAAAAAAAAAAAAAAAAAAAAAAArwCvAACtAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxwAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AALsAAAAAAAAAAAAAALEAAACoAAAAAAAAAAAAAAAAAAAAAACzAAAAAAAAAAAAAAAAAAAAAAAAsAAAsQAAAAAAAAAAoAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAALEAAAAAAL8AAAAAsa8AzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAKIAAAAAAACmAAAAAAAAAAAAAAAAAAAAAAAAmLcAAAAAAK0AtQAAAAAAAAAAAJ4AAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAuAAAAAAAAAAAAMoAAAAAAAAArQAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAACXAAAAAAAAAACvAAAAvQAAAADKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AALEAAAAAAAAAAAAAAAAAAAAAAAAAALUAAAAArwAArgAAngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0ArQAAAAAAAAAAAAAAAK0AAAAAAAAArAAAAAAAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAALwAAAAAAL6tAMwAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAALMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvgAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKoAAAAAAAAAAAAAAAAAAK0AAAAAAAC-AAAAAAAAAAAAAAAAAAAAAK-xAAAAAAAAAACwnwAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAogAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAACyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0ApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAACvAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAACdsQCvAAAAAAAAAACuswAArgAAswAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAK0AAAAAta0AAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAogAAAACnAADBAAAAAAAAAAAAAAAAAAAAAACvAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAACvAAAAr5GwAAAAAAAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAAAAAnwAAAAAAAAAAAAAAAADKAAAAALUAAAAArQAAAAC4AAAAAAAAAAAAAAAAAAAAALMAAAAAAAAAAKIAAAAAAK4AAACuAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALWwAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAC1AAAAAACvAAAAAAAAAAAA1A",
                    null, null, null, null, null }, //
            { 11L, "name11", "dom11.com", 44, 44L, 44F, 44D, null, "TestCat11", null, null, true, true, true, null,
                    null, null,
                    "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",
                    null, null, null, null, null }, //
            { 12L, "name12", "dom12.com", 100002, 100002L, 100002F, 100002D, null, "TestCat12", null, null, true, true,
                    true, null, null, null,
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAACxAKwAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAACsuwAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnQAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAKwAAAAAAACw",
                    null, null, null, null, null }, //
            { 13L, "name13", "dom13.com", 737, 737L, 737F, 737D, null, "TestCat13", null, null, true, true, true, null,
                    null, null,
                    "AACqAAAAAAAAAAAAsK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsAALEAAAAAAAAArQAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAADDAAAAAAAAAAAAAAAAAAAAAACzAAAAALgArQAAAAAAAAAA0LKtAAAAAAAAAAAAAAAAAAAAAK4AAAAAAMoAAAAAAAAAAK0AAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAArQAAAAAAngAAAAAAoQAAAAAAAAAAAAAAALAAAAAAAACuAADIAAAAAAAAAACuAAAAAKgAAAAAAADGsAAAAAAAsgAAAAAAAAAAAAAAswC5AAAAAAAAAAAAAAAArgAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAowAArqAAAAAAAAAAAAAAAAC0AAAAAAAAAAAAr7AAAAAAAAAAAAAAAAAAAAAArgAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAugCuAACxAAAAAAAApgAAAAAAAAAAAKkAAAAAAAAAALIAAAAAAAAAAACwAAAAAACtAAAAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAADHxAAAAACkAAAAAAC3AAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAArrOXAAAArgAAAAAAAAAAAAAArq4AAAAAAAAAALiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAKYAALMAwaoAALYAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAuQAAAAAAAAAAALAAAAAAALgAAAAAAAAAtAAAAMcAAAAAAAAAqpkAAAAAAAAAAAAAAAAAsgAAAAAAlwAAAACfAAAAALO5AAAAAAAArgAAAK0AAAAAAAAAAMYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAsAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAALoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIAsAAAAAAAAK4AAAAAAAAAAL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHALYAAAAAAAAAALYAAAAAqQAAAAAAt5YAAACeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtrEAAAAAAAAAAAAAAAAAuAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAKUAAACtAAAAvAAAtAAAAAAAAJuZAAAAAAAAAAAAAAAAr60AAAAAugAAAAAArQAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAzAAAAAAAAAAAnwAAAAAAAAAAAKIAALAAAAAAyaQAAAAAAACwAAAAAAC3AK4ArQAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsbQAsAAAAAAAAMoAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAACxsAAAAAAAAAAAAAAAAAAAAAAAAKwAAACxAAAAAAClAAAAAAAAAAAAAAAAAACxAAAAAK8AAAAAAAAAAAAAAAAAALUAAAAArgAAtqQAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfrgAAAAAAAAC1AK4AswAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAArQAAAAAAAK4AAAAAAAAAAKYAAACzAAAAAAAAALQAAAAAAAAAAKwAAAAAAAAAAAAAAAC9AAC3AAAAAMQAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAK4AAAAAAAAArgAAAAAAAAAAAAAAAAAAAJgAAAAAAAAAAAAAAJjJAAAAAAAAAAAAAAAAAAAAsAAAqQAAAAAAAAAAAAAAvAAAAAAAAAAAAAAAAAAAAAAArgAAAACwALMAAAAAAAAAAAAAAAAAAAAApAAAAAAAAAAAAAAAqQAAAAAAAAAAAAAAAAAAAAAAAKQAAKsAAAC_xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAAAAAAAAAAAAAtwC4AAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAArQCpAAAAsAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAC2sQAAAK4AAAAAAAAAAAClAAAAAAAAAAAAAAAAAAAAAAAAAKUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAAAAAAAAAK8AAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAACurq4AAAAAAAAAAAAAkQAAAAAAAAAAAADgAAAAAAAAAACkAK4AAAAAAAAAwAAAAAAAqQAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAArgAAAAAAAAAAAACuAAAAAAAAAK0AALUAAAAAAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAALAAmgCzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3xq8AAAAAAAAAAACuAACmAAAAAAAAAAAAAAAAALYAAAAAAAAAsAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAqgAAAACbAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAADHrQAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAAAAAAAAAAACkAACuAAAAAAAAsL0AAACkAAAAAAAAAAClAAAAswAAAAAAAAAAAAAAAAAAAAAAxwAAAACmAACpAAAAAAAAAAAAAAAAxAAAAAAAAAAAAAAAAAAAAACwAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAALkAAAAAAAAAAAAAAAAAAACxkwAArgAAAAAAAAC3AAAAAAAAuwAAAAAAAAAAAAAAAAAAAAAAAAAAANmtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAAAAAK4AAAAAAAAAxQAAAAAAAAAAAAAAAAAAtQAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsAAAAAAAAAAAAAAAAArQDFAAAAAAAAAAAAAAAAuwAAug",
                    null, null, null, null, null }, //
            { 14L, "name14", "dom14.com", 858, 858L, 858F, 858D, null, "TestCat14", null, null, true, true, true, null,
                    null, null,
                    "AAAAAAAAAAAAALcAAAAAAAAAAAAAAAAAAAAAAL6vAAAAALwAAAAAAAAAAACvAAAAAAAAAKwArAC3s60AngAAAAAAmADGALC7AACmAAC2twAAAACzAK8AAAAAAAAAqZGosgAAAAAAAAC1ALezAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAMS5AAAAAJoAALEAAK0AqAAAAAAAAAC1AAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAsLUArAAAAAAAAK60AKcAAAAAtwAApwAAoAAAAJ8AsQAAuQAAAACxAAAAsKkAAACetcQAnwCsAAAAAAAAAAAAAKgAALkAAAAAAKe2AAC3qACwwwAAAAAAt6UAAAAAAAAAALGsswCxAAAAAKyXuAAAugAAAADAALIAAAAAAAAAAAAAAACqrQAAAAAArwAArQAAALYArQAAAAAAAAAAAACmsgAAAAAAAAAAtbEAAK4AAAC5s6gAAAAAALMAAKG3ALsAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtQCxAAAAALGxAAAAAAC_AJ0AAAAAAKwAAAAAAAAArLoAAACzAAAAAACzAAAAowCeAAAAAKumpwAAowAAAAAAAAC3tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgCpxLYApwAAAAAAALEAAAAAAAC-ALaxAAAAAAAAAAAAAJkAAAAAAAAAvACtAAAAAAAAAAAAAAAAsQAAALcAAAAAuQAArrYAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAACspwAAAAAAAAAAAAAAt50AAAAAAAAAAAAAAAAAAAAAAAAAAKChqwCps7YAALYAxwAAALAAAAC5AAC7AMC2AAAAAAAAAAAArgAAugAAAAAAAAAAAMgAAAAAAKsAAAAApAAArQAAAAAAAACvAAAAAKYAranGygAAAACtAAAAqQC_AADAuQAAAAC5AL8AAACmAAAAAAAAAAAAALUAAAAAAAAAAAAAAAAAAAAAAAAAswCsAAAAAAAAAAAAALIAAACszACvsqW4AKarwwAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAK0AAAAArAAAAAAAuAAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAnwAAALEAsQAAAAAAAAAAAAAAAAAAtq0AALq3AAAAAL4AAAAAAAAAALAAAAAAAAChAKYAAAAAAL8AAAAAtgAApwCvALyww62zAACkAKsAAAAAtwAAAAAArQAAAAAAAACwAAAAAAC1tqUAAAAAAACwnQAAALW3AACxrgAAAKwAAAAAAAAAAAC1AAAAqAAAAAAAxMSiAK0AAAAAuZ8ArAAAAAAAAMS3paEAAAAAAAAAAAAAAAAArKMArQAAAAAAt6uhAAAAAAAAAAAAAAAAAAAAAAAAmwAAAAAAtwAAAKQAAAAAAKoAAL8AsAAAAKAAsQAAAKYAAAAAAAAAqQC2ALAAAKoAALAAAKcAAAAArqUAAAAAtwCvowAAAACnAKIAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAl54AAAAAALkAALgAAK4AAAAAAAAAAAAAAAAAAAAAAACbAAAAAAAAAAC1AAAAAAAAAACnAAAAAKcAxrYAAAAAAACWra8AAK0AAAAAAAAAAAC_AAAAAK-rAK8AAAAAAACpsAAAALUAAAAAAACfpKIAAAC2AAAAAAAAAACtAAAAAAAAAAAAAJ4AAAAAAK0AAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAACtAKO_AACkwK8AAACvuQDGAAAAAAAAAJ-0AAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAKYArQAAAAAAAAAAAAAAAACtrQAAAAAAAAAAAAAAqKEAALMAAAAAAAC3AAAAvAAAAAAAAAAAAACwAAAAAAAAAKgAAAAAmQAAyQAAAAAAAAAAAAAAALawAAAAAAAAAAAAAAAAnwAAAAAAAAAArQAAAK-nAAC4nbIAAAAAAAAAAAAAAMEAAAAAAMAAAAAAraurAAC3twC2ALoAAACtAAAAtACytgAAAAAAAAC7AAAAvgC1AAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAv7gAAAAAAAAAAAAAAAAApqCmAAAAALcAAJ8AowC2ALYAAAAAAAAAAAAAAACbAKwAAKwArJGqrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzAK8AAAAAAAAAAAAAtKgAAAAAAAAAAAAAAK6tAAC7AAAAALMApACvAAC2AAChAAAAAAAArgCeAAAAAAAAAAAAAAAAAAAAAMUAAKwAALUAAAAAAAAAAAAAAAAAAAAAAAC8AAAAsQCs0LkAuAAArwAAALy2AAAAAAAAAAAAAACsswAAAAAAAACwALYAAACdAAAAAAAAAAAAAAAAAAAAAACvsrYAAACoAAAAAAAAAL0AAAAAAACvAAAAAJwAAAAAAACvALUAAAAAqwAAAAAAAAAAALmtAAAAAAC1AAAAAACxAAAAAACfAAAAAAAArAAAAAAAAAAAAACfAAC1AACtAAAAAMwAAMQAuQAAAKwAAKS2AL8AAAAAAAAAAAAAvQAAALezmAC2AAAAAK8AAACqAAAAALUAAAAAAAAAAAAAAAC-rwAAtaAAAAAAAAClAAAAAAAAtwAAsgAAAAAAAKwAAAAAAAAAra8AAAAAAACfAAAAAAAAAAAAAAAAAJ8AAAC8AAAAAAAAqQC0ALkAAAAAAAAAAAAAAAAAAAAAAJsAAAAAAAAAAAAArAAAAAAAALgAtbAAAACkAKG4AAAAAAAAAAAAAAAAAAAAsQAAAAAAngAAAAAAALcAogAAAAAAAJ4AtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAACiAKEAAAAAtqwAtQCnwgAAAAAAAAAAAAAAAADaAKsAugAAAAAAAAAAAACxAAAAAAAAALEAALAAAAAAALcAAAAArwAAswAAAAAAAKoAAAAAAAAAAAAAAAAAAACxAAAAALKxALAAAAAAAACupJ6vAAAAAAAAAAAArQAAwgAAsrsAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYAALmzALGxAAAAAAAAAACxAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAyQAAAAAAAAAAAACZAACvAAAAAK8AAAClvwAAALMAAAAAALoAAACynwAAAAAAAAC4AAAAugAAAADNAAC1AAAAAAAAAAAAwACuugCwAACvAAC7AAAAAAAAAMcAAAAAuq6pAKsAta0AAAAAAACtAAAAAAAAAAAAAK8AtwCpnrcAAAC3AKGzvAAAAAC4AAAAALKtrAAAqQAAAACgvAAAALSlp60AqQAAAK8AAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAAAAAAAAAAAKqRAAAAAAAAALUAAAAAAAAAAAAArAAAAAAAALGtAJ-vAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAqrQAtK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAlq4AAAAAAAAAtwAAtQAAAAAAAAAAAAAAAACaAAAAAACwoQ",
                    null, null, null, null, null }, //

    };

    private void prepareAM() {
        List<Pair<String, Class<?>>> schema = new ArrayList<>();
        schema.add(Pair.of("LatticeID", Long.class)); // ID Retained
        schema.add(Pair.of("LDC_Name", String.class)); // LDC_Name Retained
        schema.add(Pair.of("LDC_Domain", String.class)); // LDC_Domain Retained
        schema.add(Pair.of("AlexaAUPageViews", Integer.class)); // Interval
        schema.add(Pair.of("AlexaAURank", Long.class)); // Interval
        schema.add(Pair.of("AlexaAUUsers", Float.class)); // Interval
        schema.add(Pair.of("AlexaCAPageViews", Double.class)); // Interval
        schema.add(Pair.of("AlexaRank", String.class)); // Categorical
        schema.add(Pair.of("AlexaLanguage", String.class)); // Categorical->Retained (Exceed maxCat)
        schema.add(Pair.of("AlexaLinksIn", String.class)); // Categorical->Retained (all null)
        schema.add(Pair.of("AlexaCARank", Integer.class)); // Retained (Numeric without any value)
        schema.add(Pair.of("AlexaCAUsers", Boolean.class)); // Boolean
        schema.add(Pair.of("AlexaGBPageViews", Boolean.class)); // Boolean
        schema.add(Pair.of("HPANumPages", Boolean.class)); // Discarded
        schema.add(Pair.of("HGData_SupplierTechIndicators", String.class)); // Boolean (need to decode)
        schema.add(Pair.of("BuiltWith_TechIndicators", String.class)); // Boolean (need to decode)
        schema.add(Pair.of("BmbrSurge_Intent", String.class)); // Categorical (need to decode)
        schema.add(Pair.of("BmbrSurge_CompositeScore", String.class)); // Interval (need to decode)
        schema.add(Pair.of("AdvertisingTechnologiesTopAttributes", String.class)); // Categorical->Retained (Exceed maxCatLen)
        schema.add(Pair.of("Bmbr30_AdTech_Total", Integer.class)); // Discrete
        schema.add(Pair.of("Bmbr30_AdTech_TotalPctCh", Long.class));  // Discrete
        schema.add(Pair.of("Bmbr30_AdTech_UniUsr", Float.class));  // Distinct number of values less than 5, but not discrete
        schema.add(Pair.of("Bmbr30_AdTech_UniUsrPctCh", Double.class));// Distinct number of values less than 5, but not discrete

        uploadBaseSourceData(am.getSourceName(), baseSourceVersion, schema, amData);
        try {
            extractSchema(am, baseSourceVersion,
                    hdfsPathBuilder.constructSnapshotDir(am.getSourceName(), baseSourceVersion).toString());
        } catch (Exception e) {
            log.error(String.format("Fail to extract schema for source %s at version %s", am.getSourceName(),
                    baseSourceVersion));
        }
    }

    private Object[][] matchData = new Object[][] { //
            { "1", "google.com" }, //
            { "2", "amazon.com" }, //
            { "3", "baidu.com" }, //
            { "4", "facebook.com" }, //
            { "5", "lattice-engines.com" }, //
            { "6", "uber.com" }, //
            { "7", "linkedin.com" }, //
            { "8", "twitter.com" }, //
            { "9", "sina.com" }, //
            { "10", "airbnb.com" }, //
            { "11", "youtube.com" }, //
            { "12", "wikipedia.org" }, //
            { "13", "reddit.com" }, //
            { "14", "qq.com" }, //
            { "15", "taobao.com" }, //
    };

    private void prepareMatch() {
        List<Pair<String, Class<?>>> schema = new ArrayList<>();
        schema.add(Pair.of("ID", String.class));
        schema.add(Pair.of("Domain", String.class));
        uploadAndRegisterTableSource(schema, matchData, matchTable.getSourceName());
    }

    @Override
    protected void verifyIntermediateResult(String source, String version, Iterator<GenericRecord> records) {
        log.info(String.format("Start to verify intermediate source %s", source));
        try {
            switch (source) {
            case ENRICH_PROFILE:
                verifyEnrichProfileResult(records);
                break;
            case MATCH_SEGMENT_PROFILE:
                verifyMatchSegmentProfileResult(records);
                break;
            default:
                throw new UnsupportedOperationException(String.format("Unknown intermediate source %s", source));
            }
        } catch (Exception ex) {
            throw new RuntimeException("Exception in verifyIntermediateResult", ex);
        }
    }

    private Map<String, BucketAlgorithm> getExpectedBuckAlgoForSegment() {
        Map<String, BucketAlgorithm> map = new HashMap<>();
        DiscreteBucket disBucket = new DiscreteBucket();
        Number[] intValues = { 0, 1, 2 };
        disBucket.setValues(Arrays.asList(intValues));
        map.put("BusinessTechnologiesSeoMeta", disBucket);
        CategoricalBucket catBucket = new CategoricalBucket();
        String[] catValues = { "684", "710", "425", "636", "716" };
        catBucket.setCategories(Arrays.asList(catValues));
        map.put("GLOBAL_ULTIMATE_DnB_COUNTY_CODE", catBucket);
        map.put("LAST_UPDATE_DATE", null);
        return map;
    }

    private void verifyMatchSegmentProfileResult(Iterator<GenericRecord> records)
            throws JsonProcessingException, IOException {
        Map<String, BucketAlgorithm> flatAttrsToCheck = getExpectedBuckAlgoForSegment();
        List<SourceAttribute> srcAttrs = srcAttrEntityMgr.getAttributes(SourceProfiler.AM_PROFILE,
                DataCloudConstants.PROFILE_STAGE_SEGMENT, DataCloudConstants.TRANSFORMER_PROFILER,
                DATA_CLOUD_VERSION_MATCH);
        Map<String, String> decAttrToEnc = new HashMap<>();
        for (SourceAttribute srcAttr : srcAttrs) {
            JsonNode arg = om.readTree(srcAttr.getArguments());
            if (arg.get(SourceProfiler.IS_PROFILE).asBoolean() && arg.hasNonNull(SourceProfiler.DECODE_STRATEGY)) {
                if (!arg.hasNonNull(SourceProfiler.DECODE_STRATEGY)) {
                    decAttrToEnc.put(srcAttr.getAttribute(), null);
                    continue;
                }
                String decStr = arg.get(SourceProfiler.DECODE_STRATEGY).toString();
                BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr, BitDecodeStrategy.class);
                Assert.assertNotNull(bitDecodeStrategy.getEncodedColumn());
                decAttrToEnc.put(srcAttr.getAttribute(), bitDecodeStrategy.getEncodedColumn());
            }
        }

        while (records.hasNext()) {
            GenericRecord record = records.next();
            Object attr = record.get("AttrName");
            Assert.assertNotNull(attr);
            if (attr instanceof Utf8) {
                attr = attr.toString();
            }
            Object bktAlgo = record.get(SourceProfiler.BKT_ALGO);
            if (bktAlgo != null && bktAlgo instanceof Utf8) {
                bktAlgo = bktAlgo.toString();
            }

            if (decAttrToEnc.containsKey((String) attr)) { // Decoded attrs
                switch (decAttrToEnc.get((String) attr)) {
                case "HGData_SupplierTechIndicators":
                case "HGData_SegmentTechIndicators":
                case "BuiltWith_TechIndicators":
                    Assert.assertNotNull(bktAlgo);
                    BooleanBucket boolAlgo = JsonUtils.deserialize((String) bktAlgo, BooleanBucket.class);
                    Assert.assertNotNull(boolAlgo);
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_ENCATTR));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_LOWESTBIT));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_NUMBITS));
                    break;
                case "BmbrSurge_Intent":
                    Assert.assertNotNull(bktAlgo);
                    CategoricalBucket catAlgo = JsonUtils.deserialize((String) bktAlgo, CategoricalBucket.class);
                    Assert.assertNotNull(catAlgo);
                    Assert.assertTrue(CollectionUtils.isNotEmpty(catAlgo.getCategories()));
                    Assert.assertEquals(String.join(",", catAlgo.generateLabels()), "null,Normal,Moderate,High");
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_ENCATTR));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_LOWESTBIT));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_NUMBITS));
                    break;
                case "BmbrSurge_CompositeScore":
                    if (bktAlgo == null) {
                        continue;
                    }
                    boolean pass = false;
                    try {
                        IntervalBucket intAlgo = JsonUtils.deserialize((String) bktAlgo, IntervalBucket.class);
                        Assert.assertNotNull(intAlgo);
                        pass = true;
                    } catch (Exception ex) {
                    }
                    try {
                        DiscreteBucket intAlgo = JsonUtils.deserialize((String) bktAlgo, DiscreteBucket.class);
                        Assert.assertNotNull(intAlgo);
                        pass = true;
                    } catch (Exception ex) {
                    }
                    Assert.assertTrue(pass);
                    break;
                case "BmbrSurge_BucketCode":
                    Assert.assertNotNull(bktAlgo);
                    catAlgo = JsonUtils.deserialize((String) bktAlgo, CategoricalBucket.class);
                    Assert.assertNotNull(catAlgo);
                    Assert.assertTrue(CollectionUtils.isNotEmpty(catAlgo.getCategories()));
                    Assert.assertEquals(String.join(",", catAlgo.generateLabels()), "null,A,B,C");
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_ENCATTR));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_LOWESTBIT));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_NUMBITS));
                    break;
                default: // deprecated decoded attrs
                    break;
                }
            } else { // Flat attributes
                if (bktAlgo == null) {
                    // log.info(record.toString());
                }
                if (!flatAttrsToCheck.containsKey((String) attr)) {
                    continue;
                }
                if (flatAttrsToCheck.get((String) attr) == null) { // Retained attributes
                    Assert.assertNull(bktAlgo);
                } else {
                    if (flatAttrsToCheck.get((String) attr) instanceof IntervalBucket) {
                        IntervalBucket actual = JsonUtils.deserialize((String) bktAlgo, IntervalBucket.class);
                        IntervalBucket expected = (IntervalBucket) (flatAttrsToCheck.get((String) attr));
                        Assert.assertNotNull(actual.getBoundaries());
                        Assert.assertEquals(actual.getBoundaries().size(), expected.getBoundaries().size());
                        for (int i = 0; i < actual.getBoundaries().size(); i++) {
                            Assert.assertEquals(actual.getBoundaries().get(i), expected.getBoundaries().get(i));
                        }
                    } else if (flatAttrsToCheck.get((String) attr) instanceof DiscreteBucket) {
                        DiscreteBucket actual = JsonUtils.deserialize((String) bktAlgo, DiscreteBucket.class);
                        DiscreteBucket expected = (DiscreteBucket) (flatAttrsToCheck.get((String) attr));
                        Assert.assertNotNull(actual.getValues());
                        Assert.assertEquals(actual.getValues().size(), expected.getValues().size());
                        for (int i = 0; i < actual.getValues().size(); i++) {
                            Assert.assertEquals(actual.getValues().get(i), expected.getValues().get(i));
                        }
                    } else if (flatAttrsToCheck.get((String) attr) instanceof CategoricalBucket) {
                        CategoricalBucket actual = JsonUtils.deserialize((String) bktAlgo, CategoricalBucket.class);
                        CategoricalBucket expected = (CategoricalBucket) (flatAttrsToCheck.get((String) attr));
                        Assert.assertNotNull(actual.getCategories());
                        Assert.assertEquals(actual.getCategories().size(), expected.getCategories().size());
                        for (int i = 0; i < actual.getCategories().size(); i++) {
                            Assert.assertEquals(actual.getCategories().get(i), expected.getCategories().get(i));
                        }
                    }
                }
            }
        }
    }

    private Map<String, BucketAlgorithm> getExpectedBuckAlgoForEnrich() {
        Map<String, BucketAlgorithm> map = new HashMap<>();
        map.put("LatticeAccountId", null);
        map.put("LDC_Name", null);
        map.put("LDC_Domain", null);
        IntervalBucket intBuck = new IntervalBucket();
        map.put("AlexaAUPageViews", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaAURank", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaAUUsers", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaCAPageViews", intBuck);
        map.put("AlexaRank", new CategoricalBucket());
        map.put("AlexaLanguage", null);
        map.put("AlexaLinksIn", null);
        map.put("AlexaCARank", null);
        BooleanBucket boolBuck = new BooleanBucket();
        map.put("AlexaCAUsers", boolBuck);
        boolBuck = new BooleanBucket();
        map.put("AlexaGBPageViews", boolBuck);
        map.put("AdvertisingTechnologiesTopAttributes", null);
        DiscreteBucket disBuck = new DiscreteBucket();
        map.put("Bmbr30_AdTech_Total", disBuck);
        map.put("Bmbr30_AdTech_TotalPctCh", disBuck);
        map.put("Bmbr30_AdTech_UniUsr", intBuck);
        map.put("Bmbr30_AdTech_UniUsrPctCh", intBuck);
        return map;
    }

    private void verifyEnrichProfileResult(Iterator<GenericRecord> records)
            throws JsonProcessingException, IOException {
        Map<String, BucketAlgorithm> flatAttrsBuckAlgo = getExpectedBuckAlgoForEnrich();
        List<SourceAttribute> srcAttrs = srcAttrEntityMgr.getAttributes(SourceProfiler.AM_PROFILE,
                DataCloudConstants.PROFILE_STAGE_ENRICH, DataCloudConstants.TRANSFORMER_PROFILER, DATA_CLOUD_VERSION);
        String[] encAttrs = { "HGData_SupplierTechIndicators", "BuiltWith_TechIndicators", "BmbrSurge_Intent",
                "BmbrSurge_CompositeScore" };
        Set<String> encAttrSet = new HashSet<>(Arrays.asList(encAttrs));
        Map<String, Integer> expected = new HashMap<>(); // encAttr -> decAttr count
        for (SourceAttribute srcAttr : srcAttrs) {
            JsonNode arg = om.readTree(srcAttr.getArguments());
            if (arg.get(SourceProfiler.IS_PROFILE).asBoolean() && arg.hasNonNull(SourceProfiler.DECODE_STRATEGY)) {
                String decStr = arg.get(SourceProfiler.DECODE_STRATEGY).toString();
                BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr, BitDecodeStrategy.class);
                Assert.assertNotNull(bitDecodeStrategy.getEncodedColumn());
                if (!encAttrSet.contains(bitDecodeStrategy.getEncodedColumn())) {
                    continue;
                }
                if (!expected.containsKey(bitDecodeStrategy.getEncodedColumn())) {
                    expected.put(bitDecodeStrategy.getEncodedColumn(), 1);
                } else {
                    expected.put(bitDecodeStrategy.getEncodedColumn(),
                            expected.get(bitDecodeStrategy.getEncodedColumn()) + 1);
                }
            }
        }
        while (records.hasNext()) {
            GenericRecord record = records.next();
            // log.info(record.toString());
            Object decStr = record.get(SourceProfiler.DECODE_STRATEGY);
            Object attr = record.get("AttrName");
            Assert.assertNotNull(attr);
            if (attr instanceof Utf8) {
                attr = attr.toString();
            }
            Object bktAlgo = record.get(SourceProfiler.BKT_ALGO);
            if (bktAlgo != null && bktAlgo instanceof Utf8) {
                bktAlgo = bktAlgo.toString();
            }
            if (decStr != null) { // Attributes need to decode
                if (decStr instanceof Utf8) {
                    decStr = decStr.toString();
                }
                BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr, BitDecodeStrategy.class);
                Assert.assertTrue(expected.containsKey(bitDecodeStrategy.getEncodedColumn()));
                expected.put(bitDecodeStrategy.getEncodedColumn(),
                        expected.get(bitDecodeStrategy.getEncodedColumn()) - 1);
                if (expected.get(bitDecodeStrategy.getEncodedColumn()) == 0) {
                    expected.remove(bitDecodeStrategy.getEncodedColumn());
                }
                switch (bitDecodeStrategy.getEncodedColumn()) {
                case "HGData_SupplierTechIndicators":
                case "BuiltWith_TechIndicators":
                    Assert.assertNotNull(bktAlgo);
                    BooleanBucket boolAlgo = JsonUtils.deserialize((String) bktAlgo, BooleanBucket.class);
                    Assert.assertNotNull(boolAlgo);
                    break;
                case "BmbrSurge_Intent":
                    Assert.assertNotNull(bktAlgo);
                    CategoricalBucket catAlgo = JsonUtils.deserialize((String) bktAlgo, CategoricalBucket.class);
                    Assert.assertNotNull(catAlgo);
                    Assert.assertTrue(CollectionUtils.isNotEmpty(catAlgo.getCategories()));
                    Assert.assertEquals(String.join(",", catAlgo.generateLabels()),
                            "null,Very Low,Low,Medium,High,Very High");
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_ENCATTR));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_LOWESTBIT));
                    Assert.assertNotNull(record.get(DataCloudConstants.PROFILE_ATTR_NUMBITS));
                    break;
                case "BmbrSurge_CompositeScore":
                    if (bktAlgo == null) {
                        continue;
                    }
                    boolean pass = false;
                    try {
                        IntervalBucket intAlgo = JsonUtils.deserialize((String) bktAlgo, IntervalBucket.class);
                        Assert.assertNotNull(intAlgo);
                        // log.info((String) attr + ": " +
                        // JsonUtils.serialize(intAlgo));
                        pass = true;
                    } catch (Exception ex) {
                    }
                    try {
                        DiscreteBucket intAlgo = JsonUtils.deserialize((String) bktAlgo, DiscreteBucket.class);
                        Assert.assertNotNull(intAlgo);
                        // log.info((String) attr + ": " +
                        // JsonUtils.serialize(intAlgo));
                        pass = true;
                    } catch (Exception ex) {
                    }
                    Assert.assertTrue(pass);
                    break;
                default:
                    throw new RuntimeException(
                            String.format("Unrecognized encoded attribute %s", bitDecodeStrategy.getEncodedColumn()));
                }
            } else { // FLat attributes
                if (bktAlgo == null) {
                    // log.info(record.toString());
                }
                Assert.assertTrue(flatAttrsBuckAlgo.containsKey((String) attr));
                if (flatAttrsBuckAlgo.get((String) attr) == null) { // Retained attributes
                    Assert.assertNull(bktAlgo);
                } else {
                    JsonUtils.serialize(
                            JsonUtils.deserialize((String) bktAlgo, flatAttrsBuckAlgo.get((String) attr).getClass()));
                }
            }
        }
        Assert.assertEquals(0, expected.size());
    }

    @Override
    protected void verifyResultAvroRecords(Iterator<GenericRecord> records) {
    }

}
