package com.latticeengines.datacloud.etl.transformation.service.impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.avro.generic.GenericRecord;
import org.apache.avro.util.Utf8;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.tuple.Pair;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.latticeengines.common.exposed.util.JsonUtils;
import com.latticeengines.datacloud.core.entitymgr.SourceAttributeEntityMgr;
import com.latticeengines.datacloud.core.source.Source;
import com.latticeengines.datacloud.core.source.impl.AccountMaster;
import com.latticeengines.datacloud.core.source.impl.GeneralSource;
import com.latticeengines.datacloud.core.util.HdfsPathBuilder;
import com.latticeengines.datacloud.etl.transformation.service.TransformationService;
import com.latticeengines.datacloud.etl.transformation.transformer.impl.SourceProfiler;
import com.latticeengines.domain.exposed.camille.CustomerSpace;
import com.latticeengines.domain.exposed.datacloud.DataCloudConstants;
import com.latticeengines.domain.exposed.datacloud.dataflow.BitDecodeStrategy;
import com.latticeengines.domain.exposed.datacloud.dataflow.BooleanBucket;
import com.latticeengines.domain.exposed.datacloud.dataflow.BucketAlgorithm;
import com.latticeengines.domain.exposed.datacloud.dataflow.CategoricalBucket;
import com.latticeengines.domain.exposed.datacloud.dataflow.IntervalBucket;
import com.latticeengines.domain.exposed.datacloud.manage.SourceAttribute;
import com.latticeengines.domain.exposed.datacloud.manage.TransformationProgress;
import com.latticeengines.domain.exposed.datacloud.transformation.configuration.impl.AMAttrEnrichConfig;
import com.latticeengines.domain.exposed.datacloud.transformation.configuration.impl.PipelineTransformationConfiguration;
import com.latticeengines.domain.exposed.datacloud.transformation.configuration.impl.ProfileConfig;
import com.latticeengines.domain.exposed.datacloud.transformation.step.SourceTable;
import com.latticeengines.domain.exposed.datacloud.transformation.step.TransformationStepConfig;

public class SourceProfileDeploymentTestNG extends TransformationServiceImplTestNGBase<PipelineTransformationConfiguration> {
    private static final Logger log = LoggerFactory.getLogger(SourceProfileDeploymentTestNG.class);

    private static final long RAND_SEED = 0L;
    private static final String ENRICH_PROFILE = "EnrichProfile";
    private static final String SEGMENT_PROFILE = "SegmentProfile";

    private GeneralSource source = new GeneralSource(ENRICH_PROFILE);
    private GeneralSource segProfile = new GeneralSource(SEGMENT_PROFILE);

    @Autowired
    private AccountMaster am;

    private static final String customerTableName = "CustomerTable";
    GeneralSource customerTable = new GeneralSource(customerTableName);

    private ObjectMapper om = new ObjectMapper();

    @Autowired
    SourceAttributeEntityMgr srcAttrEntityMgr;

    @Test(groups = "deployment")
    public void testTransformation() {
        prepareAM();
        prepareCustomer();
        TransformationProgress progress = createNewProgress();
        progress = transformData(progress);
        finish(progress);
        confirmIntermediateSource(segProfile, null);
        confirmResultFile(progress);
        cleanupProgressTables();
    }

    @Override
    protected TransformationService<PipelineTransformationConfiguration> getTransformationService() {
        return pipelineTransformationService;
    }

    @Override
    protected Source getSource() {
        return source;
    }

    @Override
    protected String getPathToUploadBaseData() {
        return hdfsPathBuilder.constructSnapshotDir(source.getSourceName(), targetVersion).toString();
    }

    @Override
    protected String getPathForResult() {
        Source targetSource = sourceService.findBySourceName(source.getSourceName());
        String targetVersion = hdfsSourceEntityMgr.getCurrentVersion(targetSource);
        return hdfsPathBuilder.constructSnapshotDir(source.getSourceName(), targetVersion).toString();
    }

    @Override
    protected PipelineTransformationConfiguration createTransformationConfiguration() {
        try {
            PipelineTransformationConfiguration configuration = new PipelineTransformationConfiguration();
            configuration.setName("SourceProfiling");
            configuration.setVersion(targetVersion);

            TransformationStepConfig step0 = new TransformationStepConfig();
            SourceTable sourceTable = new SourceTable(customerTable.getSourceName(),
                    CustomerSpace.parse(DataCloudConstants.SERVICE_CUSTOMERSPACE));
            List<String> baseSources = new ArrayList<>();
            baseSources.add(customerTable.getSourceName());
            baseSources.add(am.getSourceName());
            step0.setBaseSources(baseSources);
            Map<String, SourceTable> baseTables = new HashMap<>();
            baseTables.put(customerTable.getSourceName(), sourceTable);
            step0.setBaseTables(baseTables);
            step0.setTransformer(DataCloudConstants.TRANSFORMER_AM_ENRICHER);
            step0.setConfiguration(getCustomerUniverseConfig());
            step0.setTargetSource("Enriched");

            TransformationStepConfig step1 = new TransformationStepConfig();
            List<Integer> inputSteps = new ArrayList<>();
            inputSteps.addAll(Collections.singletonList(0));
            step1.setInputSteps(inputSteps);
            step1.setTransformer(SourceProfiler.TRANSFORMER_NAME);
            step1.setTargetSource(segProfile.getSourceName());
            String confParamStr1 = getSegmentProfileConfig();
            step1.setConfiguration(confParamStr1);

            TransformationStepConfig step2 = new TransformationStepConfig();
            baseSources = new ArrayList<>();
            baseSources.add(am.getSourceName());
            step2.setBaseSources(baseSources);
            step2.setTransformer(SourceProfiler.TRANSFORMER_NAME);
            step2.setTargetSource(source.getSourceName());
            String confParamStr2 = getEnrichProfileConfig();
            step2.setConfiguration(confParamStr2);

            // -----------
            List<TransformationStepConfig> steps = new ArrayList<TransformationStepConfig>();
            steps.add(step0);
            steps.add(step1);
            steps.add(step2);

            // -----------
            configuration.setSteps(steps);
            configuration.setVersion(HdfsPathBuilder.dateFormat.format(new Date()));
            configuration.setKeepTemp(true);
            return configuration;
        } catch (JsonProcessingException e) {
            throw new RuntimeException(e);
        }
    }

    private String getCustomerUniverseConfig() throws JsonProcessingException {
        AMAttrEnrichConfig conf = new AMAttrEnrichConfig();
        conf.setAmLatticeId("LatticeID");
        conf.setInputLatticeId("LatticeAccountId");
        return om.writeValueAsString(conf);
    }

    private String getSegmentProfileConfig() throws JsonProcessingException {
        ProfileConfig conf = new ProfileConfig();
        conf.setNumBucketEqualSized(false);
        conf.setBucketNum(4);
        conf.setMinBucketSize(2);
        conf.setRandSeed(RAND_SEED);
        return om.writeValueAsString(conf);
    }

    private String getEnrichProfileConfig() throws JsonProcessingException {
        ProfileConfig conf = new ProfileConfig();
        conf.setNumBucketEqualSized(false);
        conf.setBucketNum(4);
        conf.setMinBucketSize(2);
        conf.setRandSeed(RAND_SEED);
        conf.setStage(DataCloudConstants.PROFILE_STAGE_ENRICH);
        return om.writeValueAsString(conf);
    }

    private Object[][] customerData = new Object[][] { //
            { 1L, 0, null, 10F, null, true, 2.01 }, //
            { 2L, null, 10L, null, 100D, false, 2.01 }, //
            { 3L, 10, null, 100F, 100D, null, 2.01 }, //
            { 4L, null, 100L, 100F, 1000D, true, 1.01 }, //
            { 5L, 100, 100L, 1000F, 1000D, false, 1.02 }, //
            { 6L, 100, 1000L, 1000F, 10000D, null, 1.02 }, //
            { 7L, 1000, 1000L, 10000F, 10000D, true, 1.02 }, //
            { 8L, 1000, 10000L, 10000F, null, false, null }, //
            { 9L, 10000, 10000L, null, 0D, null, null }, //
            { 10L, 10000, null, 0F, 100D, true, null }, //
            { 11L, null, 0L, 100F, 10D, false, null }, //
            { 12L, 0, 100L, 10F, 0D, null, null }, //
            { 13L, 100, 10L, 0F, null, true, null }, //
            { 14L, 10, 0L, null, 10D, false, null }, //
    };

    private void prepareCustomer() {
        List<Pair<String, Class<?>>> schema = new ArrayList<>();
        schema.add(Pair.of("LatticeAccountId", Long.class)); // ID Retained
        schema.add(Pair.of("Customer1", Integer.class)); // Interval
        schema.add(Pair.of("Customer2", Long.class)); // Interval
        schema.add(Pair.of("Customer3", Float.class)); // Interval
        schema.add(Pair.of("Customer4", Double.class)); // Interval
        schema.add(Pair.of("Customer5", Boolean.class)); // Boolean
        schema.add(Pair.of("Customer6", Double.class)); // Interval (use distinct value as interval boundary)
        uploadAndRegisterTableSource(schema, customerData, customerTable.getSourceName());
    }

    private Object[][] amData = new Object[][] { //
            { 1L, 79, 79L, 79F, 79D, "TestRetained", null, true, true, true, null, null, null,
                    "AACbAAAAqQAAAAAAAAAAAAAAALIAAAAAAAAAAKUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAAvgCwAAAAALAAAAAAmgCfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClAAAAAJAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAALYAALEAAAAAAAAAAACvAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAALAAtQAAAACwALAAAAAAAAAAAAAAAAAArwC4AAAAAAAAAAAAAAAAAAAAsACwAKkAAACvAAAAAACnAAAAAAAAALAAAAAAAKkAAAAAALYAAAAAAACxAAAAAACwAAAAAAAAAAAAAAAArQAAALIAAAAAALUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJcAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAKmxAAAAAAAAAKcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAsAAAAAAAAACyALUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAACvAAAAsAAAAACoAI61AMQAALa1AAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAACvwgCXtKgAsAAAAAAAAKexAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAArQAAAAAAAAAAAACxrLKtAAAAmgAAAACuAAAAAAC5AAAAAAAAsLAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAACeAAAAAAAAAAAAALUAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAALEAAAAAAKwA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" }, //
            { 2L, 15, 15L, 14.89482594F, 14.89482594D, "TestRetained", null, true, true, true, null, null, null,
                    "AAAAAAAAqAAAAK8AAAAAAAAAAAAAAAAAAAC4AKkAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAACmAAAAAAAAAAAAAACwAAAAAACtrQCzAAAAsAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAACkAAAAAAAAAAAAwgAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAL4AAK0AAKcAAACYAAAAAAAArQAAAAAAAAAAAAAAAAAAAACsALEAAKwAtQAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAALkAtQAAqwAAAAAAAAAAAJcAAK4AAKUArgClAACtrQCwAACtAAAAAAAAAAAAAAAAAAAAAAAAmAAAAAAAAK0AAAAAAAAAAAAAsQCpAAAAAAAAAAAAlgCdAAAAAAAAAAAAAAAAAACmAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAACpAAAAALAAAACimLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAArgCvAACvr68AAAAAmAAAAKytAAAAAJoAAAAAAAAAAAAAAAAAAAAAAACiAAAAAK0AAAAAAJaoAAAAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAr68AAACRrbEAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCvAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAAAAAAAAAAAAAAAAAACvAAAAAK0AAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAsLAApAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArq-uAAAArwAAALQAAAAAAAAArQAAr6wAAAAAAAAAAAAAogAAAAAAAACuAAAAALMAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAALCoAAAAAAAAAAAAAKIArQAAAK0AAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAK0AAAAAAAAAAAAAAAAAAACWAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAr5gAAACtAAAAsQAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAswAAAAAAAAAAAAAAAACvmK0ArQAAAAAAAK2sAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAK8AAAAAAAAAAAAAAJwAAKoAAKYArqgAAAAAAAAAAAAAAACuAJgAmgAAAAAAAACtAAAAAAAAAK0ArAAAAAAAAAAAAAAAAAAAAAAAAAAAALEArQAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAAAALsAAAAAAAAAAAAAAAAAALAArwCzAAAAAACPAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAJexAAAAAAAAALAArwAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAAAAC1AADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAAAAAAAAAAAAsa-xAACxsLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAACWpQAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAK0ArAAAAAAAAAAAALEAAACuALgAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAC4AMUAAACsAAAAAACzAAAAAAAAAAAAAAAAmQAAAAAAAI0AAAAAAAAAAACsAKwAAAAAAAAAAK8AAAAAAAAArQAAAAAAtAAAAAAArQAAALgAAAAAlgAAAAAAAAAAAAAAAACvAACslrUAAAAAAAAAAAAAAAAAtAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAvgAAAAAAAAAAAAAAtQCsAACvrwCpAAAAAACtAAAArgAAAAAArQAAAAAAAAAAAAAAAAAAAADGAAAAAAAArgAAAAAAAAAAAMcAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAogAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAArQAAsAAArgAAAAAAAAAAAACaAAAAAAAAsAAAAAAAAAAAAAAAAACzAAAArwCsALuvAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAK4AAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAALAAAAAArQAAAACqAAAAAAAAAAAAAAAAAACtpQAAAAAArwAAAAAAALCurQAAAK8AAAAAAAAAAAAAAAAAAACwAAAAmAAAAK0AAAAAAAAAAAAAAAAAAAAAAJcAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAACYAAAAAACsAAAAAACqrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6AAAAAAAAAKytAAAAAAAAAACor6gAAACtAAAAAAAAvwAAAAAArcoAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAACyAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAACvAAAAAK0AAAAAAAAAAACtAACXAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAK0AAAAAAAAAAAAAAACtAAAAAAAAAAAAsACvAAAAAACuAMEAAAAAAAAAAAAAAAAAAAAAAJAAsQAAAAAAAAAAqQAAALgAtQAAra0AAAAArAAAAAAAAAAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAKYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJasAAAAAKwAAAAAAAAAAAC4rwAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAACuAACsAAAAAAAAAAAAAAAAAAAAALA" }, //
            { 3L, -5, -5L, -5F, -5D, "TestRetained", null, true, true, true, null, null, null,
                    "AAC0AAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAKutAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAqwCrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAyACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAArwAAAACuAAAAAAAAAAAAAACrAAAAAAAAsAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr68AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlQAAAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAAAAAAClAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAApAAAAAAAAAAAAAAAAAAAAAAAAJ0AAAAAqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAK-vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmra0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0ALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAxAAAAAAAAAAAAAAAAAAAqwAAAAAAAACpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAAAAsQAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAKk" }, //
            { 4L, 2, 2L, 2F, 2D, "TestRetained", null, true, true, true, null, null, null,
                    "AAAAAAAAAAAAALwAAAAAAAAAsgAAAAAAAAAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAAAAAAsgAAAMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL-0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAnAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAALYAAAC2tqoAAKQAAAAAAAAAsQAAAACbAAAAAAC2AAAAAAAAAAAAAAAAtAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAugAAuKcAAAAAAAAAAAAAAACiowAAAAAAAAAAwLgAAAAAAAAAAAAApwAAv48AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAAAAAAAAAAAAAAAAAAAAAAAAANQAAAAAAAAAAAAAAAAAAAAAAACxAAAAuAAAAAAAALfHAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAACxtgC4AAAAAAAAAAAAAM4AAAAAALEAAAAAAAAAAAAAAAAAAL8AuwC7rMgAAAAAswAAAAAAAAAAAAAAAACyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp68AALgAsAAAALoAAAAAAAAAAKkAALQAAAAAAAAAAAAAsADCAAAAAK8AAAC5AIoAAAChAAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAJIAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAsAAAAAAAmgAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAALYAALAAAAAAtgAAAAAAALgAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArsUAAAAAAAAAAAAAsAAAAAAAAKixAAAAAAC2AAAAAAAAAAAAAAAAAACvAAAAAAAAALHKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAKkAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAAvwAAAAAAAAAAAACzAAAAAMQAtgCrAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuALoAAAAAAAAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAAAwwAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAALIAAAAAAAAAAAAArgAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAACrAAAAAAAAAAAAAAAAAMEAwwAAvQAAAAAAAAAAAAAAAAAA4QAAAAAAAAAAAAAAyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn8EAAL4AAL24vwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAtwDHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKEAAAAAAACrAAAAAAAAAAC2AAAAAAAAAAAAnwCzqAAAAAAAAMcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAyMQAAACxAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAygAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAACcAAAAAAAAywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAAAAAKMAAACnAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKAAAAAAAAAAAAAAAAAACeAAAAAAAAAAAAAAAAAL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAAxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlgAAAAAAAAAAzQAAAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAADHAAAAAKYAAAAAAAAAAAAAALUAAAAAAAAAAAAAAAAAAK6zrwAAAAAAwgAAAAAAAAAAAMUAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnwAAAAAAugAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQC1AAAAAAAAAAAAAAAAAAAAAMC2AAAAAAAAAAAAAK-g" }, //
            { 5L, -2, -2L, -2.40582905F, -2.40582905D, "TestRetained", null, true, true, true, null, null, null,
                    "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_rgAAAAAApQCvmgAAqwCXAACyAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtZcAAAAAAAAArQAAAAAAAAAAAKSXAAAAAAAAAAAAAAAAAACxtgAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAC4AAAAALGpAAAAALu3AAAArQAAAAAAAAAAALQAAAAAAAAAAAAAqQAAAADDAAAAAAAAAAAAtJoAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAyQAAAAAAwAAAAAAAAAAAAAAAAKsAAAAAAAAAAAAAAACfAAAAAAAArAAAAAAAtw" }, //
            { 6L, 9162, 9162L, 9162F, 9162D, "TestRetained", null, true, true, true, null, null, null,
                    "AAC2AAAAAAAAAAAAAAAAAAC6AAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrtQAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAACvAL8AAAAAAAAAAAAAAAAAAAAArQAAAADIAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAApwAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAuwAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAALYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAk74AAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnAAAAAAAAAAAAAACtAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0" }, //
            { 7L, 0, 0L, 0F, 0D, "TestRetained", null, true, true, true, null, null, null,
                    "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" }, //
            { 8L, 1, 1L, 1F, 1D, "TestRetained", null, true, true, true, null, null, null,
                    "AACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAK8AAK8ArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAtwAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ0AAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAKwAAAAAAAAAAJ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAsKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAACsnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAAKwArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnwAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwAAtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8" }, //
            { 9L, 2, 2L, 2F, 2D, "TestRetained", null, true, true, true, null, null, null,
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlgAAAAAAAAAAAAAAALoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAsAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAL0AAAAAAAAAAAAAAAAAAACiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAugAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAALoArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKMAAAAAAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLUAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIAAK0AAAAAmQAAAAAAAACuAAAArgAAAAAAAAAAAAAAAAAAwAAAAACsugAAAACuAAAAAACdAAAAAAAAAAAAAAAAAAAAAAAAALoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAK4AAAAAAAAAAAC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALMAAAAAAAAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAArgAAAK4AAAAAzwAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBAAAAAAAAAAAAAAAAAADHAAAAAAAAAAAAALIAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAAsQAAAAAAALwAAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAArgAAAAAAAAAAsLkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQAAAAAApAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAK4AAAAAAAAAAAAAAAAAAAAArQAAAAAAvwCsqgAAtQAAsAAAAAAAAAAArQAAAAAAAK0AAAAAAAAAAACfAAAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAArp8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAAAAAAACtAAAAsQAAAAAAugAAAAAAAAAAuwAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAADFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAra0AAAAAAAAAAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAC7AADHsgAAAAAAAAAAAAAAAAAAAK64AAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAAAAAAAAAAAAALMAAAAAnQAAAAAAAAAAAAAAAAAAsgAAwAAAAAAAAAAAAAAApgAAAAAAAKwAAAAAAAAAAAAAAAAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArg" }, //
            { 10L, 2, 2L, 2.12F, 2.12D, "TestRetained", null, true, true, true, null, null, null,
                    "AAAAAAAAAAAAAAAArQAArQAAAAAAAAAAAAAAAJ7JAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAsgAAsQCwuAAAAAAAAAAAAAAAAAC7AAAAAAAAAAClAAAAAAAAAAAArbEAr60AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwAAAAAAAAAAAAAAALEAAAAAAK8AAAAAjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApwAAAAAAwAAAAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAsQAAAAAAAACtrwAAAADBAAAAAACrAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAC4AAAAAAAAAAAAAACsAK8AAAAAAAAArwAAlQAAswAArwAAAAAAAAAAuAAAAAAAAAAAAACvrgAAAAAAAAAAsLEAAAAAAM0AAAC1AK8AAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQCvAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAKoAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AALkAAK4AAAAAAAAAAAAAAAAAAAAArgAAqboAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAywAAAAAAAAAAAAAAAAAApQCtAAAAAAAAAACeALAAAAC1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgCxAAAAAAAAAAAAAAAAAAAAAAAArwCvAACtAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxwAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AALsAAAAAAAAAAAAAALEAAACoAAAAAAAAAAAAAAAAAAAAAACzAAAAAAAAAAAAAAAAAAAAAAAAsAAAsQAAAAAAAAAAoAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAALEAAAAAAL8AAAAAsa8AzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAKIAAAAAAACmAAAAAAAAAAAAAAAAAAAAAAAAmLcAAAAAAK0AtQAAAAAAAAAAAJ4AAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAuAAAAAAAAAAAAMoAAAAAAAAArQAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAACXAAAAAAAAAACvAAAAvQAAAADKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AALEAAAAAAAAAAAAAAAAAAAAAAAAAALUAAAAArwAArgAAngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0ArQAAAAAAAAAAAAAAAK0AAAAAAAAArAAAAAAAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAALwAAAAAAL6tAMwAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAALMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvgAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKoAAAAAAAAAAAAAAAAAAK0AAAAAAAC-AAAAAAAAAAAAAAAAAAAAAK-xAAAAAAAAAACwnwAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAogAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAACyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0ApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AAAAAACvAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAACdsQCvAAAAAAAAAACuswAArgAAswAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAAAAAAAAAAAAAK0AAAAAta0AAAAAAAAAAAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAAAAogAAAACnAADBAAAAAAAAAAAAAAAAAAAAAACvAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAACvAAAAr5GwAAAAAAAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAAAAAnwAAAAAAAAAAAAAAAADKAAAAALUAAAAArQAAAAC4AAAAAAAAAAAAAAAAAAAAALMAAAAAAAAAAKIAAAAAAK4AAACuAAAAAAAAAAAAAAAAtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALWwAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAC1AAAAAACvAAAAAAAAAAAA1A" }, //
            { 11L, 44, 44L, 44F, 44D, "TestRetained", null, true, true, true, null, null, null,
                    "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" }, //
            { 12L, 100002, 100002L, 100002F, 100002D, "TestRetained", null, true, true, true, null, null, null,
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAACxAKwAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAACsuwAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnQAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAACvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAAAAAAAAAAAAAKwAAAAAAACw" }, //
            { 13L, 737, 737L, 737F, 737D, "TestRetained", null, true, true, true, null, null, null,
                    "AACqAAAAAAAAAAAAsK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsAALEAAAAAAAAArQAAAAAAAAAAAAAAAAC1AAAAAAAAAAAAAADDAAAAAAAAAAAAAAAAAAAAAACzAAAAALgArQAAAAAAAAAA0LKtAAAAAAAAAAAAAAAAAAAAAK4AAAAAAMoAAAAAAAAAAK0AAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAArQAAAAAAngAAAAAAoQAAAAAAAAAAAAAAALAAAAAAAACuAADIAAAAAAAAAACuAAAAAKgAAAAAAADGsAAAAAAAsgAAAAAAAAAAAAAAswC5AAAAAAAAAAAAAAAArgAArgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAowAArqAAAAAAAAAAAAAAAAC0AAAAAAAAAAAAr7AAAAAAAAAAAAAAAAAAAAAArgAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcAugCuAACxAAAAAAAApgAAAAAAAAAAAKkAAAAAAAAAALIAAAAAAAAAAACwAAAAAACtAAAAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAADHxAAAAACkAAAAAAC3AAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAArrOXAAAArgAAAAAAAAAAAAAArq4AAAAAAAAAALiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAKYAALMAwaoAALYAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAAuQAAAAAAAAAAALAAAAAAALgAAAAAAAAAtAAAAMcAAAAAAAAAqpkAAAAAAAAAAAAAAAAAsgAAAAAAlwAAAACfAAAAALO5AAAAAAAArgAAAK0AAAAAAAAAAMYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAsAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAALoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIAsAAAAAAAAK4AAAAAAAAAAL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHALYAAAAAAAAAALYAAAAAqQAAAAAAt5YAAACeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtrEAAAAAAAAAAAAAAAAAuAAAAAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAKUAAACtAAAAvAAAtAAAAAAAAJuZAAAAAAAAAAAAAAAAr60AAAAAugAAAAAArQAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAzAAAAAAAAAAAnwAAAAAAAAAAAKIAALAAAAAAyaQAAAAAAACwAAAAAAC3AK4ArQAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsbQAsAAAAAAAAMoAAK0AAAAAAAAAAAAAAAAAAAAAAAAAAACxsAAAAAAAAAAAAAAAAAAAAAAAAKwAAACxAAAAAAClAAAAAAAAAAAAAAAAAACxAAAAAK8AAAAAAAAAAAAAAAAAALUAAAAArgAAtqQAAAAAAAAAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfrgAAAAAAAAC1AK4AswAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAArQAAAAAAAK4AAAAAAAAAAKYAAACzAAAAAAAAALQAAAAAAAAAAKwAAAAAAAAAAAAAAAC9AAC3AAAAAMQAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAArgAAAAAAAAAAAAAAAAAAAK4AAAAAAAAArgAAAAAAAAAAAAAAAAAAAJgAAAAAAAAAAAAAAJjJAAAAAAAAAAAAAAAAAAAAsAAAqQAAAAAAAAAAAAAAvAAAAAAAAAAAAAAAAAAAAAAArgAAAACwALMAAAAAAAAAAAAAAAAAAAAApAAAAAAAAAAAAAAAqQAAAAAAAAAAAAAAAAAAAAAAAKQAAKsAAAC_xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAAAAAAAAAAAAAtwC4AAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAArQCpAAAAsAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAC2sQAAAK4AAAAAAAAAAAClAAAAAAAAAAAAAAAAAAAAAAAAAKUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAAAAAAAAAK8AAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAACurq4AAAAAAAAAAAAAkQAAAAAAAAAAAADgAAAAAAAAAACkAK4AAAAAAAAAwAAAAAAAqQAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAAAAAAAAAAArgAAAAAAAAAAAACuAAAAAAAAAK0AALUAAAAAAAAAAAAApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAALAAmgCzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3xq8AAAAAAAAAAACuAACmAAAAAAAAAAAAAAAAALYAAAAAAAAAsAAAAAAAAAAAAAAAALEAAAAAAAAAAAAAqgAAAACbAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAAAAAAADHrQAAAAAAAAAAAAAAAAAAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAAAAAAAAAAACkAACuAAAAAAAAsL0AAACkAAAAAAAAAAClAAAAswAAAAAAAAAAAAAAAAAAAAAAxwAAAACmAACpAAAAAAAAAAAAAAAAxAAAAAAAAAAAAAAAAAAAAACwAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAALkAAAAAAAAAAAAAAAAAAACxkwAArgAAAAAAAAC3AAAAAAAAuwAAAAAAAAAAAAAAAAAAAAAAAAAAANmtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAAAAAK4AAAAAAAAAxQAAAAAAAAAAAAAAAAAAtQAAAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsAAAAAAAAAAAAAAAAArQDFAAAAAAAAAAAAAAAAuwAAug" }, //
            { 14L, 858, 858L, 858F, 858D, "TestRetained", null, true, true, true, null, null, null,
                    "AAAAAAAAAAAAALcAAAAAAAAAAAAAAAAAAAAAAL6vAAAAALwAAAAAAAAAAACvAAAAAAAAAKwArAC3s60AngAAAAAAmADGALC7AACmAAC2twAAAACzAK8AAAAAAAAAqZGosgAAAAAAAAC1ALezAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAMS5AAAAAJoAALEAAK0AqAAAAAAAAAC1AAAAAAAAAAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAsLUArAAAAAAAAK60AKcAAAAAtwAApwAAoAAAAJ8AsQAAuQAAAACxAAAAsKkAAACetcQAnwCsAAAAAAAAAAAAAKgAALkAAAAAAKe2AAC3qACwwwAAAAAAt6UAAAAAAAAAALGsswCxAAAAAKyXuAAAugAAAADAALIAAAAAAAAAAAAAAACqrQAAAAAArwAArQAAALYArQAAAAAAAAAAAACmsgAAAAAAAAAAtbEAAK4AAAC5s6gAAAAAALMAAKG3ALsAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtQCxAAAAALGxAAAAAAC_AJ0AAAAAAKwAAAAAAAAArLoAAACzAAAAAACzAAAAowCeAAAAAKumpwAAowAAAAAAAAC3tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgCpxLYApwAAAAAAALEAAAAAAAC-ALaxAAAAAAAAAAAAAJkAAAAAAAAAvACtAAAAAAAAAAAAAAAAsQAAALcAAAAAuQAArrYAAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAACspwAAAAAAAAAAAAAAt50AAAAAAAAAAAAAAAAAAAAAAAAAAKChqwCps7YAALYAxwAAALAAAAC5AAC7AMC2AAAAAAAAAAAArgAAugAAAAAAAAAAAMgAAAAAAKsAAAAApAAArQAAAAAAAACvAAAAAKYAranGygAAAACtAAAAqQC_AADAuQAAAAC5AL8AAACmAAAAAAAAAAAAALUAAAAAAAAAAAAAAAAAAAAAAAAAswCsAAAAAAAAAAAAALIAAACszACvsqW4AKarwwAAAAAAAAAAAAAAAACtAAAAAAAAAAAAAK0AAAAArAAAAAAAuAAAALcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAnwAAALEAsQAAAAAAAAAAAAAAAAAAtq0AALq3AAAAAL4AAAAAAAAAALAAAAAAAAChAKYAAAAAAL8AAAAAtgAApwCvALyww62zAACkAKsAAAAAtwAAAAAArQAAAAAAAACwAAAAAAC1tqUAAAAAAACwnQAAALW3AACxrgAAAKwAAAAAAAAAAAC1AAAAqAAAAAAAxMSiAK0AAAAAuZ8ArAAAAAAAAMS3paEAAAAAAAAAAAAAAAAArKMArQAAAAAAt6uhAAAAAAAAAAAAAAAAAAAAAAAAmwAAAAAAtwAAAKQAAAAAAKoAAL8AsAAAAKAAsQAAAKYAAAAAAAAAqQC2ALAAAKoAALAAAKcAAAAArqUAAAAAtwCvowAAAACnAKIAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAl54AAAAAALkAALgAAK4AAAAAAAAAAAAAAAAAAAAAAACbAAAAAAAAAAC1AAAAAAAAAACnAAAAAKcAxrYAAAAAAACWra8AAK0AAAAAAAAAAAC_AAAAAK-rAK8AAAAAAACpsAAAALUAAAAAAACfpKIAAAC2AAAAAAAAAACtAAAAAAAAAAAAAJ4AAAAAAK0AAAAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAACtAKO_AACkwK8AAACvuQDGAAAAAAAAAJ-0AAAAAAAAsgAAAAAAAAAAAAAAAAAAAAAAAKYArQAAAAAAAAAAAAAAAACtrQAAAAAAAAAAAAAAqKEAALMAAAAAAAC3AAAAvAAAAAAAAAAAAACwAAAAAAAAAKgAAAAAmQAAyQAAAAAAAAAAAAAAALawAAAAAAAAAAAAAAAAnwAAAAAAAAAArQAAAK-nAAC4nbIAAAAAAAAAAAAAAMEAAAAAAMAAAAAAraurAAC3twC2ALoAAACtAAAAtACytgAAAAAAAAC7AAAAvgC1AAAAAAAAAAAAAAAAAACxAAAAAAAAAAAAv7gAAAAAAAAAAAAAAAAApqCmAAAAALcAAJ8AowC2ALYAAAAAAAAAAAAAAACbAKwAAKwArJGqrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzAK8AAAAAAAAAAAAAtKgAAAAAAAAAAAAAAK6tAAC7AAAAALMApACvAAC2AAChAAAAAAAArgCeAAAAAAAAAAAAAAAAAAAAAMUAAKwAALUAAAAAAAAAAAAAAAAAAAAAAAC8AAAAsQCs0LkAuAAArwAAALy2AAAAAAAAAAAAAACsswAAAAAAAACwALYAAACdAAAAAAAAAAAAAAAAAAAAAACvsrYAAACoAAAAAAAAAL0AAAAAAACvAAAAAJwAAAAAAACvALUAAAAAqwAAAAAAAAAAALmtAAAAAAC1AAAAAACxAAAAAACfAAAAAAAArAAAAAAAAAAAAACfAAC1AACtAAAAAMwAAMQAuQAAAKwAAKS2AL8AAAAAAAAAAAAAvQAAALezmAC2AAAAAK8AAACqAAAAALUAAAAAAAAAAAAAAAC-rwAAtaAAAAAAAAClAAAAAAAAtwAAsgAAAAAAAKwAAAAAAAAAra8AAAAAAACfAAAAAAAAAAAAAAAAAJ8AAAC8AAAAAAAAqQC0ALkAAAAAAAAAAAAAAAAAAAAAAJsAAAAAAAAAAAAArAAAAAAAALgAtbAAAACkAKG4AAAAAAAAAAAAAAAAAAAAsQAAAAAAngAAAAAAALcAogAAAAAAAJ4AtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAACiAKEAAAAAtqwAtQCnwgAAAAAAAAAAAAAAAADaAKsAugAAAAAAAAAAAACxAAAAAAAAALEAALAAAAAAALcAAAAArwAAswAAAAAAAKoAAAAAAAAAAAAAAAAAAACxAAAAALKxALAAAAAAAACupJ6vAAAAAAAAAAAArQAAwgAAsrsAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYAALmzALGxAAAAAAAAAACxAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAyQAAAAAAAAAAAACZAACvAAAAAK8AAAClvwAAALMAAAAAALoAAACynwAAAAAAAAC4AAAAugAAAADNAAC1AAAAAAAAAAAAwACuugCwAACvAAC7AAAAAAAAAMcAAAAAuq6pAKsAta0AAAAAAACtAAAAAAAAAAAAAK8AtwCpnrcAAAC3AKGzvAAAAAC4AAAAALKtrAAAqQAAAACgvAAAALSlp60AqQAAAK8AAAAAAAAAAAAAAAAAALIAAAAAAAAAAAAAAAAAAAAAAKqRAAAAAAAAALUAAAAAAAAAAAAArAAAAAAAALGtAJ-vAAAAAAAAAAAAAAAAtQAAAAAAAAAAAAAAqrQAtK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtgAAlq4AAAAAAAAAtwAAtQAAAAAAAAAAAAAAAACaAAAAAACwoQ" }, //

    };

    private void prepareAM() {
        List<Pair<String, Class<?>>> schema = new ArrayList<>();
        schema.add(Pair.of("LatticeID", Long.class)); // ID Retained
        schema.add(Pair.of("AlexaAUPageViews", Integer.class)); // Interval
        schema.add(Pair.of("AlexaAURank", Long.class)); // Interval
        schema.add(Pair.of("AlexaAUUsers", Float.class)); // Interval
        schema.add(Pair.of("AlexaCAPageViews", Double.class)); // Interval
        schema.add(Pair.of("AlexaRank", String.class)); // Retained
        schema.add(Pair.of("AlexaCARank", Integer.class)); // Retained (Numeric without any value)
        schema.add(Pair.of("AlexaCAUsers", Boolean.class)); // Boolean
        schema.add(Pair.of("AlexaGBPageViews", Boolean.class)); // Boolean
        schema.add(Pair.of("HPANumPages", Boolean.class)); // Discarded
        schema.add(Pair.of("HGData_SupplierTechIndicators", String.class)); // Boolean (need to decode)
        schema.add(Pair.of("BuiltWith_TechIndicators", String.class)); // Boolean (need to decode)
        schema.add(Pair.of("BmbrSurge_Intent", String.class)); // Categorical (need to decode)
        schema.add(Pair.of("BmbrSurge_CompositeScore", String.class)); // Interval (need to decode)

        uploadBaseSourceData(am.getSourceName(), baseSourceVersion, schema, amData);
        try {
            extractSchema(am, baseSourceVersion,
                    hdfsPathBuilder.constructSnapshotDir(am.getSourceName(), baseSourceVersion).toString());
        } catch (Exception e) {
            log.error(String.format("Fail to extract schema for source %s at version %s", am.getSourceName(),
                    baseSourceVersion));
        }
    }

    private Map<String, BucketAlgorithm> getExpectedBuckAlgoForFlatAttrs() {
        Map<String, BucketAlgorithm> map = new HashMap<>();
        map.put("LatticeAccountId", null);
        IntervalBucket intBuck = new IntervalBucket();
        map.put("Customer1", intBuck);
        intBuck = new IntervalBucket();
        map.put("Customer2", intBuck);
        intBuck = new IntervalBucket();
        map.put("Customer3", intBuck);
        intBuck = new IntervalBucket();
        map.put("Customer4", intBuck);
        BooleanBucket boolBuck = new BooleanBucket();
        map.put("Customer5", boolBuck);
        intBuck = new IntervalBucket();
        map.put("Customer6", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaAUPageViews", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaAURank", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaAUUsers", intBuck);
        intBuck = new IntervalBucket();
        map.put("AlexaCAPageViews", intBuck);
        map.put("AlexaRank", null);
        map.put("AlexaCARank", null);
        boolBuck = new BooleanBucket();
        map.put("AlexaCAUsers", boolBuck);
        boolBuck = new BooleanBucket();
        map.put("AlexaGBPageViews", boolBuck);
        return map;
    }

    protected void verifyIntermediateResult(String source, Iterator<GenericRecord> records) {
        try {
            switch (source) {
            case SEGMENT_PROFILE:
                log.info(String.format("Start to verify intermediate source %s", source));
                Map<String, BucketAlgorithm> flatAttrsBuckAlgo = getExpectedBuckAlgoForFlatAttrs();
                List<SourceAttribute> srcAttrs = srcAttrEntityMgr.getAttributes(null,
                        DataCloudConstants.PROFILE_STAGE_SEGMENT, DataCloudConstants.TRANSFORMER_PROFILER);
                String[] encAttrs = { "HGData_SupplierTechIndicators", "BuiltWith_TechIndicators" };
                Set<String> encAttrSet = new HashSet<>(Arrays.asList(encAttrs));
                Map<String, Integer> expected = new HashMap<>();    // encAttr -> decAttr count
                for (SourceAttribute srcAttr : srcAttrs) {
                    JsonNode arg = om.readTree(srcAttr.getArguments());
                    if (arg.get(SourceProfiler.IS_PROFILE).asBoolean()
                            && arg.hasNonNull(SourceProfiler.DECODE_STRATEGY)) {
                        String decStr = arg.get(SourceProfiler.DECODE_STRATEGY).toString();
                        BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr,
                                BitDecodeStrategy.class);
                        Assert.assertNotNull(bitDecodeStrategy.getEncodedColumn());
                        if (!encAttrSet.contains(bitDecodeStrategy.getEncodedColumn())) {
                            continue;
                        }
                        if (!expected.containsKey(bitDecodeStrategy.getEncodedColumn())) {
                            expected.put(bitDecodeStrategy.getEncodedColumn(), 1);
                        } else {
                            expected.put(bitDecodeStrategy.getEncodedColumn(),
                                    expected.get(bitDecodeStrategy.getEncodedColumn()) + 1);
                        }
                    }
                }
                while (records.hasNext()) {
                    GenericRecord record = records.next();
                    // log.info(record.toString());
                    Object attr = record.get("AttrName");
                    Assert.assertNotNull(attr);
                    if (attr instanceof Utf8) {
                        attr = attr.toString();
                    }
                    Object bktAlgo = record.get(SourceProfiler.BKT_ALGO);
                    if (bktAlgo != null && bktAlgo instanceof Utf8) {
                        bktAlgo = bktAlgo.toString();
                    }
                    Object decStr = record.get(SourceProfiler.DECODE_STRATEGY);
                    if (decStr != null) { // Attributes need to decode
                        if (decStr instanceof Utf8) {
                            decStr = decStr.toString();
                        }
                        BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr,
                                BitDecodeStrategy.class);
                        Assert.assertTrue(expected.containsKey(bitDecodeStrategy.getEncodedColumn()));
                        expected.put(bitDecodeStrategy.getEncodedColumn(),
                                expected.get(bitDecodeStrategy.getEncodedColumn()) - 1);
                        if (expected.get(bitDecodeStrategy.getEncodedColumn()) == 0) {
                            expected.remove(bitDecodeStrategy.getEncodedColumn());
                        }
                        Assert.assertNotNull(bktAlgo);
                        BooleanBucket algo = JsonUtils.deserialize((String) bktAlgo, BooleanBucket.class);
                        Assert.assertNotNull(algo);
                    } else { // Flat attributes
                        Assert.assertTrue(flatAttrsBuckAlgo.containsKey((String) attr));
                        if (flatAttrsBuckAlgo.get((String) attr) == null) {  // Retained attributes
                            Assert.assertNull(bktAlgo);
                        } else {
                            log.info((String) attr + ": " + JsonUtils.serialize(JsonUtils.deserialize((String) bktAlgo,
                                    flatAttrsBuckAlgo.get((String) attr).getClass())));
                        }

                    }
                }
                Assert.assertEquals(0, expected.size());
                break;
            default:
                throw new UnsupportedOperationException(String.format("Unknown intermediate source %s", source));
            }
        } catch (Exception ex) {
            throw new RuntimeException("Exception in verifyIntermediateResult", ex);
        }
    }

    @Override
    protected void verifyResultAvroRecords(Iterator<GenericRecord> records) {
        try {
            log.info("Start to verify records one by one.");
            Map<String, BucketAlgorithm> flatAttrsBuckAlgo = getExpectedBuckAlgoForFlatAttrs();
            List<SourceAttribute> srcAttrs = srcAttrEntityMgr.getAttributes(null,
                    DataCloudConstants.PROFILE_STAGE_ENRICH, DataCloudConstants.TRANSFORMER_PROFILER);
            String[] encAttrs = { "HGData_SupplierTechIndicators", "BuiltWith_TechIndicators", "BmbrSurge_Intent",
                    "BmbrSurge_CompositeScore" };
            Set<String> encAttrSet = new HashSet<>(Arrays.asList(encAttrs));
            Map<String, Integer> expected = new HashMap<>(); // encAttr -> decAttr count
            for (SourceAttribute srcAttr : srcAttrs) {
                JsonNode arg = om.readTree(srcAttr.getArguments());
                if (arg.get(SourceProfiler.IS_PROFILE).asBoolean() && arg.hasNonNull(SourceProfiler.DECODE_STRATEGY)) {
                    String decStr = arg.get(SourceProfiler.DECODE_STRATEGY).toString();
                    BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr,
                            BitDecodeStrategy.class);
                    Assert.assertNotNull(bitDecodeStrategy.getEncodedColumn());
                    if (!encAttrSet.contains(bitDecodeStrategy.getEncodedColumn())) {
                        continue;
                    }
                    if (!expected.containsKey(bitDecodeStrategy.getEncodedColumn())) {
                        expected.put(bitDecodeStrategy.getEncodedColumn(), 1);
                    } else {
                        expected.put(bitDecodeStrategy.getEncodedColumn(),
                                expected.get(bitDecodeStrategy.getEncodedColumn()) + 1);
                    }
                }
            }
            while (records.hasNext()) {
                GenericRecord record = records.next();
                // log.info(record.toString());
                Object decStr = record.get(SourceProfiler.DECODE_STRATEGY);
                Object attr = record.get("AttrName");
                Assert.assertNotNull(attr);
                if (attr instanceof Utf8) {
                    attr = attr.toString();
                }
                Object bktAlgo = record.get(SourceProfiler.BKT_ALGO);
                if (bktAlgo != null && bktAlgo instanceof Utf8) {
                    bktAlgo = bktAlgo.toString();
                }
                if (decStr != null) { // Attributes need to decode
                    if (decStr instanceof Utf8) {
                        decStr = decStr.toString();
                    }
                    BitDecodeStrategy bitDecodeStrategy = JsonUtils.deserialize((String) decStr,
                            BitDecodeStrategy.class);
                    Assert.assertTrue(expected.containsKey(bitDecodeStrategy.getEncodedColumn()));
                    expected.put(bitDecodeStrategy.getEncodedColumn(),
                            expected.get(bitDecodeStrategy.getEncodedColumn()) - 1);
                    if (expected.get(bitDecodeStrategy.getEncodedColumn()) == 0) {
                        expected.remove(bitDecodeStrategy.getEncodedColumn());
                    }
                    switch (bitDecodeStrategy.getEncodedColumn()) {
                    case "HGData_SupplierTechIndicators":
                    case "BuiltWith_TechIndicators":
                        Assert.assertNotNull(bktAlgo);
                        BooleanBucket boolAlgo = JsonUtils.deserialize((String) bktAlgo, BooleanBucket.class);
                        Assert.assertNotNull(boolAlgo);
                        break;
                    case "BmbrSurge_Intent":
                        Assert.assertNotNull(bktAlgo);
                        CategoricalBucket catAlgo = JsonUtils.deserialize((String) bktAlgo, CategoricalBucket.class);
                        Assert.assertNotNull(catAlgo);
                        Assert.assertTrue(CollectionUtils.isNotEmpty(catAlgo.getCategories()));
                        Assert.assertEquals(String.join(",", catAlgo.generateLabels()),
                                "null,Very Low,Low,Medium,High,Very High");
                        break;
                    case "BmbrSurge_CompositeScore":
                        if (bktAlgo == null) {
                            continue;
                        }
                        IntervalBucket intAlgo = JsonUtils.deserialize((String) bktAlgo, IntervalBucket.class);
                        Assert.assertNotNull(intAlgo);
                        log.info((String) attr + ": " + JsonUtils.serialize(intAlgo));
                        break;
                    default:
                        throw new RuntimeException(String.format("Unrecognized encoded attribute %s",
                                bitDecodeStrategy.getEncodedColumn()));
                    }
                } else { // FLat attributes
                    Assert.assertTrue(flatAttrsBuckAlgo.containsKey((String) attr));
                    if (flatAttrsBuckAlgo.get((String) attr) == null) {  // Retained attributes
                        Assert.assertNull(bktAlgo);
                    } else {
                        log.info((String) attr + ": " + JsonUtils.serialize(JsonUtils.deserialize((String) bktAlgo,
                                flatAttrsBuckAlgo.get((String) attr).getClass())));
                    }
                }
            }
            Assert.assertEquals(0, expected.size());
        } catch (Exception ex) {
            throw new RuntimeException("Exception in verifyResultAvroRecords", ex);
        }
    }

}
