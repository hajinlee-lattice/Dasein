<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:yarn="http://www.springframework.org/schema/yarn"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/yarn http://www.springframework.org/schema/yarn/spring-yarn.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath:aws-context.xml"/>
    <import resource="classpath:common-component-context.xml"/>
    <context:component-scan base-package="com.latticeengines.hadoop.exposed, com.latticeengines.hadoop.service" />

    <yarn:configuration id="baseConfiguration">
        dfs.client.failover.proxy.provider.${hadoop.dfs.nameservices}=${hadoop.dfs.client.failover.proxy.provider}
        dfs.nameservices=${hadoop.dfs.nameservices}
        dfs.ha.namenodes.${hadoop.dfs.nameservices}=nn1,nn2
        dfs.namenode.rpc-address.${hadoop.dfs.nameservices}.nn1=${dfs.namenode.rpc-address.nn1}
        dfs.namenode.rpc-address.${hadoop.dfs.nameservices}.nn2=${dfs.namenode.rpc-address.nn2}
        dfs.client.block.write.replace-datanode-on-failure.policy=${hadoop.dfs.replace-datanode-on-failure.policy}
        fs.defaultFS=${hadoop.fs.defaultFS}
        hadoop.security.key.provider.path=${hadoop.hadoop.security.key.provider.path}
        dfs.encryption.key.provider.uri=${hadoop.dfs.encryption.key.provider.uri}
        yarn.resourcemanager.ha.enabled=false
        yarn.resourcemanager.address=${hadoop.yarn.resourcemanager.address}
        yarn.resourcemanager.scheduler.address=${hadoop.yarn.resourcemanager.scheduler.address}
        yarn.resourcemanager.webapp.address=${hadoop.yarn.resourcemanager.webapp.address}
        yarn.nodemanager.remote-app-log-dir=${hadoop.yarn.nodemanager.remote-app-log-dir}
        yarn.client.failover-sleep-base-ms=${hadoop.yarn.client.failover-sleep-base-ms}
        yarn.client.failover-sleep-max-ms=${hadoop.yarn.client.failover-sleep-max-ms}
        mapred.job.tracker=${hadoop.mapred.job.tracker}
        mapreduce.framework.name=yarn
        mapreduce.jobhistory.done-dir=/mr-history/done
        mapreduce.jobhistory.intermediate-done-dir=/mr-history/tmp
        mapreduce.jobtracker.jobhistory.completed.location=/mr-history/done
        mapreduce.jobhistory.webapp.address=${hadoop.mapreduce.jobhistory.webapp.address}
        mapreduce.jobhistory.address=${hadoop.mapreduce.jobhistory.address}
        fs.s3n.awsAccessKeyId=${aws.default.access.key}
        fs.s3n.awsSecretAccessKey=${aws.default.secret.key.encrypted}
        fs.s3n.impl=org.apache.hadoop.fs.s3native.NativeS3FileSystem
        fs.s3a.access.key=${aws.default.access.key}
        fs.s3a.secret.key=${aws.default.secret.key.encrypted}
        fs.s3a.impl=org.apache.hadoop.fs.s3a.S3AFileSystem
    </yarn:configuration>

    <bean id="emrConfiguration" class="com.latticeengines.hadoop.bean.YarnConfigurationBeanFactory" lazy-init="true" />

    <yarn:configuration id="yarnConfiguration" configuration-ref="emrConfiguration"/>

    <bean id="distCpConfiguration" class="com.latticeengines.hadoop.bean.DistCpConfigurationBeanFactory" lazy-init="true"/>

</beans>
