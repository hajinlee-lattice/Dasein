<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <import resource="classpath:oauth2db-persistence-datasource-context.xml"/>

	<!-- 
    <bean id="sessionFactoryOauth2" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceOauth2"/>
        <property name="packagesToScan" value="com.latticeengines.domain.exposed.oauth, com.latticeengines.domain.exposed.playmaker"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${oauth2.datasource.dialect}
                </prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.globally_quoted_identifiers">true</prop>
            </props>
        </property>
    </bean>

	-->
    	<!-- Hibernate session factory -->
    <bean id="sessionFactoryOauth2" class="org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean">
	    <property name="entityManagerFactory" ref="entityManagerFactoryOauth2" />
	</bean>
	
	<!-- Entity manager factory -->
	<bean id="entityManagerFactoryOauth2" 
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			primary="true">
        <property name="dataSource" ref="dataSourceOauth2" />
        <property name="packagesToScan" value="com.latticeengines.domain.exposed.oauth, com.latticeengines.domain.exposed.playmaker" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- property name="prepareConnection" value="false"/-->
			</bean>
		</property>
		<property name="jpaProperties">
          <props>
            <prop key="hibernate.dialect">${oauth2.datasource.dialect}</prop>
            <prop key="hibernate.show_sql">false</prop>
            <prop key="hibernate.globally_quoted_identifiers">true</prop>
            <prop key="hibernate.id.new_generator_mappings">true</prop>
            <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
            <prop key="hibernate.allow_refresh_detached_entity">true</prop>
            <!-- prop key="hibernate.connection.release_mode">on_close</prop-->
            <!-- prop key="hibernate.connection.handling_mode">DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION</prop-->
          </props>
      </property>
	</bean>

    <bean id="transactionManagerOauth2"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactoryOauth2">
        <qualifier value="oauth2"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManagerOauth2" />
     
    <bean id="oAuthUserDao"
          class="com.latticeengines.oauth2db.dao.impl.OAuthUserDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryOauth2"/>
    </bean>

    <bean id="playmakerTenantDao"
          class="com.latticeengines.oauth2db.dao.impl.PlaymakerTenantDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryOauth2" />
    </bean>

</beans>
